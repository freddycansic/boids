<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2630" onload="init(evt)" viewBox="0 0 1200 2630" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="2630" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="2613.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="2613.00"> </text><svg id="frames" x="10" width="1180" total_samples="172710"><g><title>`0x7FF8258717E3 (20 samples, 0.01%)</title><rect x="0.0023%" y="2533" width="0.0116%" height="15" fill="rgb(227,0,7)" fg:x="4" fg:w="20"/><text x="0.2523%" y="2543.50"></text></g><g><title>`0x7FF89A5A7C00 (41 samples, 0.02%)</title><rect x="0.0504%" y="2373" width="0.0237%" height="15" fill="rgb(217,0,24)" fg:x="87" fg:w="41"/><text x="0.3004%" y="2383.50"></text></g><g><title>`0x7FF89D3B27F1 (41 samples, 0.02%)</title><rect x="0.0504%" y="2357" width="0.0237%" height="15" fill="rgb(221,193,54)" fg:x="87" fg:w="41"/><text x="0.3004%" y="2367.50"></text></g><g><title>`0x7FF89AB7B5CB (41 samples, 0.02%)</title><rect x="0.0504%" y="2341" width="0.0237%" height="15" fill="rgb(248,212,6)" fg:x="87" fg:w="41"/><text x="0.3004%" y="2351.50"></text></g><g><title>`0x7FF89D950E64 (41 samples, 0.02%)</title><rect x="0.0504%" y="2325" width="0.0237%" height="15" fill="rgb(208,68,35)" fg:x="87" fg:w="41"/><text x="0.3004%" y="2335.50"></text></g><g><title>`0x7FF890811BDB (45 samples, 0.03%)</title><rect x="0.0486%" y="2453" width="0.0261%" height="15" fill="rgb(232,128,0)" fg:x="84" fg:w="45"/><text x="0.2986%" y="2463.50"></text></g><g><title>`0x7FF8908114E2 (45 samples, 0.03%)</title><rect x="0.0486%" y="2437" width="0.0261%" height="15" fill="rgb(207,160,47)" fg:x="84" fg:w="45"/><text x="0.2986%" y="2447.50"></text></g><g><title>`0x7FF890810F7C (45 samples, 0.03%)</title><rect x="0.0486%" y="2421" width="0.0261%" height="15" fill="rgb(228,23,34)" fg:x="84" fg:w="45"/><text x="0.2986%" y="2431.50"></text></g><g><title>`0x7FF89A5A6665 (42 samples, 0.02%)</title><rect x="0.0504%" y="2405" width="0.0243%" height="15" fill="rgb(218,30,26)" fg:x="87" fg:w="42"/><text x="0.3004%" y="2415.50"></text></g><g><title>`0x7FF89A5A7A50 (42 samples, 0.02%)</title><rect x="0.0504%" y="2389" width="0.0243%" height="15" fill="rgb(220,122,19)" fg:x="87" fg:w="42"/><text x="0.3004%" y="2399.50"></text></g><g><title>`0x7FF890819172 (82 samples, 0.05%)</title><rect x="0.0353%" y="2485" width="0.0475%" height="15" fill="rgb(250,228,42)" fg:x="61" fg:w="82"/><text x="0.2853%" y="2495.50"></text></g><g><title>`0x7FF890818E0D (68 samples, 0.04%)</title><rect x="0.0434%" y="2469" width="0.0394%" height="15" fill="rgb(240,193,28)" fg:x="75" fg:w="68"/><text x="0.2934%" y="2479.50"></text></g><g><title>`0x7FF890818B83 (87 samples, 0.05%)</title><rect x="0.0353%" y="2501" width="0.0504%" height="15" fill="rgb(216,20,37)" fg:x="61" fg:w="87"/><text x="0.2853%" y="2511.50"></text></g><g><title>`0x7FF89081C12C (124 samples, 0.07%)</title><rect x="0.0191%" y="2533" width="0.0718%" height="15" fill="rgb(206,188,39)" fg:x="33" fg:w="124"/><text x="0.2691%" y="2543.50"></text></g><g><title>`0x7FF89081C2E0 (108 samples, 0.06%)</title><rect x="0.0284%" y="2517" width="0.0625%" height="15" fill="rgb(217,207,13)" fg:x="49" fg:w="108"/><text x="0.2784%" y="2527.50"></text></g><g><title>`0x7FF89D8C12AB (28 samples, 0.02%)</title><rect x="0.0979%" y="2485" width="0.0162%" height="15" fill="rgb(231,73,38)" fg:x="169" fg:w="28"/><text x="0.3479%" y="2495.50"></text></g><g><title>`0x7FF89D8E5E96 (55 samples, 0.03%)</title><rect x="0.0944%" y="2533" width="0.0318%" height="15" fill="rgb(225,20,46)" fg:x="163" fg:w="55"/><text x="0.3444%" y="2543.50"></text></g><g><title>`0x7FF89D9128CA (49 samples, 0.03%)</title><rect x="0.0979%" y="2517" width="0.0284%" height="15" fill="rgb(210,31,41)" fg:x="169" fg:w="49"/><text x="0.3479%" y="2527.50"></text></g><g><title>`0x7FF89D8C11EB (49 samples, 0.03%)</title><rect x="0.0979%" y="2501" width="0.0284%" height="15" fill="rgb(221,200,47)" fg:x="169" fg:w="49"/><text x="0.3479%" y="2511.50"></text></g><g><title>`0x7FF89D8C13B0 (20 samples, 0.01%)</title><rect x="0.1146%" y="2485" width="0.0116%" height="15" fill="rgb(226,26,5)" fg:x="198" fg:w="20"/><text x="0.3646%" y="2495.50"></text></g><g><title>boids.exe`core::iter::traits::iterator::Iterator::collect(core::iter::adapters::flatten::Flatten&lt;alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec (18 samples, 0.01%)</title><rect x="0.1627%" y="1909" width="0.0104%" height="15" fill="rgb(249,33,26)" fg:x="281" fg:w="18"/><text x="0.4127%" y="1919.50"></text></g><g><title>boids.exe`alloc::vec::impl$15::from_iter(core::iter::adapters::flatten::Flatten&lt;alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec (18 samples, 0.01%)</title><rect x="0.1627%" y="1893" width="0.0104%" height="15" fill="rgb(235,183,28)" fg:x="281" fg:w="18"/><text x="0.4127%" y="1903.50"></text></g><g><title>boids.exe`alloc::vec::spec_from_iter::impl$0::from_iter&lt;u8,core::iter::adapters::flatten::Flatten&lt;alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;,alloc::alloc::Global&gt; &gt; &gt;(core::iter::adapters::flatten::Flatten&lt;alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec (18 samples, 0.01%)</title><rect x="0.1627%" y="1877" width="0.0104%" height="15" fill="rgb(221,5,38)" fg:x="281" fg:w="18"/><text x="0.4127%" y="1887.50"></text></g><g><title>boids.exe`alloc::vec::spec_from_iter_nested::impl$0::from_iter(core::iter::adapters::flatten::Flatten&lt;alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec (18 samples, 0.01%)</title><rect x="0.1627%" y="1861" width="0.0104%" height="15" fill="rgb(247,18,42)" fg:x="281" fg:w="18"/><text x="0.4127%" y="1871.50"></text></g><g><title>boids.exe`alloc::vec::spec_extend::impl$0::spec_extend(alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;*, core::iter::adapters::flatten::Flatten&lt;alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec (18 samples, 0.01%)</title><rect x="0.1627%" y="1845" width="0.0104%" height="15" fill="rgb(241,131,45)" fg:x="281" fg:w="18"/><text x="0.4127%" y="1855.50"></text></g><g><title>boids.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::extend_desugared(core::iter::adapters::flatten::Flatten&lt;alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec (18 samples, 0.01%)</title><rect x="0.1627%" y="1829" width="0.0104%" height="15" fill="rgb(249,31,29)" fg:x="281" fg:w="18"/><text x="0.4127%" y="1839.50"></text></g><g><title>boids.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$ (19 samples, 0.01%)</title><rect x="0.1824%" y="1749" width="0.0110%" height="15" fill="rgb(225,111,53)" fg:x="315" fg:w="19"/><text x="0.4324%" y="1759.50"></text></g><g><title>boids.exe`ruzstd::decoding::decode_buffer::DecodeBuffer::repeat (19 samples, 0.01%)</title><rect x="0.1824%" y="1733" width="0.0110%" height="15" fill="rgb(238,160,17)" fg:x="315" fg:w="19"/><text x="0.4324%" y="1743.50"></text></g><g><title>boids.exe`ruzstd::decoding::sequence_execution::execute_sequences (31 samples, 0.02%)</title><rect x="0.1801%" y="1765" width="0.0179%" height="15" fill="rgb(214,148,48)" fg:x="311" fg:w="31"/><text x="0.4301%" y="1775.50"></text></g><g><title>boids.exe`ruzstd::decoding::sequence_section_decoder::decode_sequences_without_rle(ruzstd::blocks::sequence_section::SequencesHeader*, ruzstd::bit_io::bit_reader_reverse::BitReaderReversed*, ruzstd::decoding::scratch::FSEScratch*, alloc::vec::Vec (21 samples, 0.01%)</title><rect x="0.1980%" y="1749" width="0.0122%" height="15" fill="rgb(232,36,49)" fg:x="342" fg:w="21"/><text x="0.4480%" y="1759.50"></text></g><g><title>boids.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$ (54 samples, 0.03%)</title><rect x="0.1801%" y="1781" width="0.0313%" height="15" fill="rgb(209,103,24)" fg:x="311" fg:w="54"/><text x="0.4301%" y="1791.50"></text></g><g><title>boids.exe`ruzstd::decoding::sequence_section_decoder::decode_sequences(ruzstd::blocks::sequence_section::SequencesHeader*, ref$&lt;slice2$&lt;u8&gt; &gt;, ruzstd::decoding::scratch::FSEScratch*, alloc::vec::Vec (23 samples, 0.01%)</title><rect x="0.1980%" y="1765" width="0.0133%" height="15" fill="rgb(229,88,8)" fg:x="342" fg:w="23"/><text x="0.4480%" y="1775.50"></text></g><g><title>boids.exe`bevy_asset::assets::Assets&lt;bevy_image::image::Image&gt;::add (105 samples, 0.06%)</title><rect x="0.1610%" y="2037" width="0.0608%" height="15" fill="rgb(213,181,19)" fg:x="278" fg:w="105"/><text x="0.4110%" y="2047.50"></text></g><g><title>boids.exe`alloc::sync::impl$30::deref(alloc::sync::Arc (105 samples, 0.06%)</title><rect x="0.1610%" y="2021" width="0.0608%" height="15" fill="rgb(254,191,54)" fg:x="278" fg:w="105"/><text x="0.4110%" y="2031.50"></text></g><g><title>boids.exe`alloc::sync::Arc&lt;bevy_asset::assets::AssetIndexAllocator,alloc::alloc::Global&gt;::inner (105 samples, 0.06%)</title><rect x="0.1610%" y="2005" width="0.0608%" height="15" fill="rgb(241,83,37)" fg:x="278" fg:w="105"/><text x="0.4110%" y="2015.50"></text></g><g><title>boids.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;bevy_asset::assets::AssetIndexAllocator&gt; &gt;::as_ref (105 samples, 0.06%)</title><rect x="0.1610%" y="1989" width="0.0608%" height="15" fill="rgb(233,36,39)" fg:x="278" fg:w="105"/><text x="0.4110%" y="1999.50"></text></g><g><title>boids.exe`bevy_core_pipeline::tonemapping::setup_tonemapping_lut_image(ref$&lt;slice2$&lt;u8&gt; &gt;, enum2$ (105 samples, 0.06%)</title><rect x="0.1610%" y="1973" width="0.0608%" height="15" fill="rgb(226,3,54)" fg:x="278" fg:w="105"/><text x="0.4110%" y="1983.50"></text></g><g><title>boids.exe`bevy_image::image::Image::from_buffer(ref$&lt;slice2$&lt;u8&gt; &gt;, enum2$&lt;bevy_image::image::ImageType&gt;, bevy_image::image::CompressedImageFormats, bool, enum2$ (105 samples, 0.06%)</title><rect x="0.1610%" y="1957" width="0.0608%" height="15" fill="rgb(245,192,40)" fg:x="278" fg:w="105"/><text x="0.4110%" y="1967.50"></text></g><g><title>boids.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;bevy_image::image::Image,enum2$ (105 samples, 0.06%)</title><rect x="0.1610%" y="1941" width="0.0608%" height="15" fill="rgb(238,167,29)" fg:x="278" fg:w="105"/><text x="0.4110%" y="1951.50"></text></g><g><title>boids.exe`bevy_image::ktx2::ktx2_buffer_to_image(ref$&lt;slice2$ (105 samples, 0.06%)</title><rect x="0.1610%" y="1925" width="0.0608%" height="15" fill="rgb(232,182,51)" fg:x="278" fg:w="105"/><text x="0.4110%" y="1935.50"></text></g><g><title>boids.exe`std::io::Read::read_to_end(ruzstd::decoding::streaming_decoder::StreamingDecoder&lt;ref_mut$&lt;std::io::cursor::Cursor&lt;ref$&lt;slice2$&lt;u8&gt; &gt; &gt; &gt;,ruzstd::decoding::frame_decoder::FrameDecoder&gt;*, alloc::vec::Vec (83 samples, 0.05%)</title><rect x="0.1737%" y="1909" width="0.0481%" height="15" fill="rgb(231,60,39)" fg:x="300" fg:w="83"/><text x="0.4237%" y="1919.50"></text></g><g><title>boids.exe`std::io::default_read_to_end(ruzstd::decoding::streaming_decoder::StreamingDecoder&lt;ref_mut$&lt;std::io::cursor::Cursor&lt;ref$&lt;slice2$&lt;u8&gt; &gt; &gt; &gt;,ruzstd::decoding::frame_decoder::FrameDecoder&gt;*, alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;*, enum2$&lt;core::option::Option (83 samples, 0.05%)</title><rect x="0.1737%" y="1893" width="0.0481%" height="15" fill="rgb(208,69,12)" fg:x="300" fg:w="83"/><text x="0.4237%" y="1903.50"></text></g><g><title>boids.exe`std::io::default_read_to_end::small_probe_read&lt;ruzstd::decoding::streaming_decoder::StreamingDecoder&lt;ref_mut$&lt;std::io::cursor::Cursor&lt;ref$&lt;slice2$&lt;u8&gt; &gt; &gt; &gt;,ruzstd::decoding::frame_decoder::FrameDecoder&gt; &gt;(ruzstd::decoding::streaming_decoder::StreamingDecoder&lt;ref_mut$&lt;std::io::cursor::Cursor&lt;ref$&lt;slice2$&lt;u8&gt; &gt; &gt; &gt;,ruzstd::decoding::frame_decoder::FrameDecoder&gt;*, alloc::vec::Vec (72 samples, 0.04%)</title><rect x="0.1801%" y="1877" width="0.0417%" height="15" fill="rgb(235,93,37)" fg:x="311" fg:w="72"/><text x="0.4301%" y="1887.50"></text></g><g><title>boids.exe`ruzstd::decoding::streaming_decoder::impl$3::read&lt;ref_mut$&lt;std::io::cursor::Cursor&lt;ref$&lt;slice2$&lt;u8&gt; &gt; &gt; &gt;,ruzstd::decoding::frame_decoder::FrameDecoder&gt;(ruzstd::decoding::streaming_decoder::StreamingDecoder&lt;ref_mut$&lt;std::io::cursor::Cursor&lt;ref$&lt;slice2$&lt;u8&gt; &gt; &gt; &gt;,ruzstd::decoding::frame_decoder::FrameDecoder&gt;*, ref_mut$&lt;slice2$ (72 samples, 0.04%)</title><rect x="0.1801%" y="1861" width="0.0417%" height="15" fill="rgb(213,116,39)" fg:x="311" fg:w="72"/><text x="0.4301%" y="1871.50"></text></g><g><title>boids.exe`ruzstd::decoding::frame_decoder::FrameDecoder::decode_blocks(std::io::cursor::Cursor&lt;ref$&lt;slice2$&lt;u8&gt; &gt; &gt;**, enum2$ (72 samples, 0.04%)</title><rect x="0.1801%" y="1845" width="0.0417%" height="15" fill="rgb(222,207,29)" fg:x="311" fg:w="72"/><text x="0.4301%" y="1855.50"></text></g><g><title>boids.exe`enum2$&lt;core::result::Result&lt;u64,enum2$&lt;ruzstd::decoding::errors::DecodeBlockContentError&gt; &gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;u64,enum2$&lt;ruzstd::decoding::errors::DecodeBlockContentError&gt; &gt; &gt;, enum2$&lt;ruzstd::decoding::errors::FrameDecoderError&gt; (*)(enum2$ (72 samples, 0.04%)</title><rect x="0.1801%" y="1829" width="0.0417%" height="15" fill="rgb(206,96,30)" fg:x="311" fg:w="72"/><text x="0.4301%" y="1839.50"></text></g><g><title>boids.exe`ruzstd::decoding::block_decoder::BlockDecoder::decode_block_content&lt;ref_mut$&lt;ref_mut$&lt;ref_mut$&lt;std::io::cursor::Cursor&lt;ref$&lt;slice2$&lt;u8&gt; &gt; &gt; &gt; &gt; &gt; &gt;(ruzstd::blocks::block::BlockHeader*, ruzstd::decoding::scratch::DecoderScratch*, std::io::cursor::Cursor&lt;ref$&lt;slice2$ (72 samples, 0.04%)</title><rect x="0.1801%" y="1813" width="0.0417%" height="15" fill="rgb(218,138,4)" fg:x="311" fg:w="72"/><text x="0.4301%" y="1823.50"></text></g><g><title>boids.exe`ruzstd::decoding::block_decoder::BlockDecoder::decompress_block(ruzstd::blocks::block::BlockHeader*, ruzstd::decoding::scratch::DecoderScratch*, std::io::cursor::Cursor&lt;ref$&lt;slice2$ (72 samples, 0.04%)</title><rect x="0.1801%" y="1797" width="0.0417%" height="15" fill="rgb(250,191,14)" fg:x="311" fg:w="72"/><text x="0.4301%" y="1807.50"></text></g><g><title>boids.exe`bevy_app::app::App::add_plugins&lt;tuple$&lt;bevy_app::plugin::sealed::PluginsTupleMarker,bevy_app::plugin::sealed::PluginMarker,bevy_app::plugin::sealed::PluginMarker,bevy_app::plugin::sealed::PluginMarker,bevy_app::plugin::sealed::PluginMarker,bevy_app::plugin::sealed::PluginMarker,bevy_app::plugin::sealed::PluginMarker,bevy_app::plugin::sealed::PluginMarker,bevy_app::plugin::sealed::PluginMarker,bevy_app::plugin::sealed::PluginMarker,bevy_app::plugin::sealed::PluginMarker,bevy_app::plugin::sealed::PluginMarker,bevy_app::plugin::sealed::PluginMarker,bevy_app::plugin::sealed::PluginMarker&gt;,tuple$&lt;bevy_core_pipeline::blit::BlitPlugin,bevy_core_pipeline::msaa_writeback::MsaaWritebackPlugin,bevy_core_pipeline::tonemapping::TonemappingPlugin,bevy_core_pipeline::upscaling::UpscalingPlugin,bevy_core_pipeline::bloom::BloomPlugin,bevy_core_pipeline::fxaa::FxaaPlugin,bevy_core_pipeline::contrast_adaptive_sharpening::CasPlugin,bevy_core_pipeline::motion_blur::MotionBlurPlugin,bevy_core_pipeline::dof::DepthOfFieldPlugin,bevy_core_pipeline::smaa::SmaaPlugin,bevy_core_pipeline::post_process::PostProcessingPlugin,bevy_core_pipeline::oit::OrderIndependentTransparencyPlugin,bevy_core_pipeline::experimental::mip_generation::MipGenerationPlugin&gt; &gt;(tuple$ (149 samples, 0.09%)</title><rect x="0.1384%" y="2213" width="0.0863%" height="15" fill="rgb(239,60,40)" fg:x="239" fg:w="149"/><text x="0.3884%" y="2223.50"></text></g><g><title>boids.exe`bevy_app::plugin::sealed::impl$15::add_to_app(tuple$ (148 samples, 0.09%)</title><rect x="0.1390%" y="2197" width="0.0857%" height="15" fill="rgb(206,27,48)" fg:x="240" fg:w="148"/><text x="0.3890%" y="2207.50"></text></g><g><title>boids.exe`bevy_app::plugin::sealed::impl$0::add_to_app (148 samples, 0.09%)</title><rect x="0.1390%" y="2181" width="0.0857%" height="15" fill="rgb(225,35,8)" fg:x="240" fg:w="148"/><text x="0.3890%" y="2191.50"></text></g><g><title>boids.exe`bevy_app::app::App::add_boxed_plugin(alloc::boxed::Box&lt;dyn$ (148 samples, 0.09%)</title><rect x="0.1390%" y="2165" width="0.0857%" height="15" fill="rgb(250,213,24)" fg:x="240" fg:w="148"/><text x="0.3890%" y="2175.50"></text></g><g><title>boids.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe (147 samples, 0.09%)</title><rect x="0.1395%" y="2149" width="0.0851%" height="15" fill="rgb(247,123,22)" fg:x="241" fg:w="147"/><text x="0.3895%" y="2159.50"></text></g><g><title>boids.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe (147 samples, 0.09%)</title><rect x="0.1395%" y="2133" width="0.0851%" height="15" fill="rgb(231,138,38)" fg:x="241" fg:w="147"/><text x="0.3895%" y="2143.50"></text></g><g><title>boids.exe`std::panicking::try::do_call (147 samples, 0.09%)</title><rect x="0.1395%" y="2117" width="0.0851%" height="15" fill="rgb(231,145,46)" fg:x="241" fg:w="147"/><text x="0.3895%" y="2127.50"></text></g><g><title>boids.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe (147 samples, 0.09%)</title><rect x="0.1395%" y="2101" width="0.0851%" height="15" fill="rgb(251,118,11)" fg:x="241" fg:w="147"/><text x="0.3895%" y="2111.50"></text></g><g><title>boids.exe`core::ops::function::FnOnce::call_once (147 samples, 0.09%)</title><rect x="0.1395%" y="2085" width="0.0851%" height="15" fill="rgb(217,147,25)" fg:x="241" fg:w="147"/><text x="0.3895%" y="2095.50"></text></g><g><title>boids.exe`bevy_app::app::impl$2::add_boxed_plugin::closure$0 (147 samples, 0.09%)</title><rect x="0.1395%" y="2069" width="0.0851%" height="15" fill="rgb(247,81,37)" fg:x="241" fg:w="147"/><text x="0.3895%" y="2079.50"></text></g><g><title>boids.exe`bevy_core_pipeline::tonemapping::impl$0::build (110 samples, 0.06%)</title><rect x="0.1610%" y="2053" width="0.0637%" height="15" fill="rgb(209,12,38)" fg:x="278" fg:w="110"/><text x="0.4110%" y="2063.50"></text></g><g><title>boids.exe`bevy_app::app::App::init_resource (28 samples, 0.02%)</title><rect x="0.2281%" y="2197" width="0.0162%" height="15" fill="rgb(227,1,9)" fg:x="394" fg:w="28"/><text x="0.4781%" y="2207.50"></text></g><g><title>boids.exe`bevy_app::sub_app::SubApp::init_resource (28 samples, 0.02%)</title><rect x="0.2281%" y="2181" width="0.0162%" height="15" fill="rgb(248,47,43)" fg:x="394" fg:w="28"/><text x="0.4781%" y="2191.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::init_resource (28 samples, 0.02%)</title><rect x="0.2281%" y="2165" width="0.0162%" height="15" fill="rgb(221,10,30)" fg:x="394" fg:w="28"/><text x="0.4781%" y="2175.50"></text></g><g><title>boids.exe`bevy_ptr::OwningPtr&lt;bevy_ptr::Aligned&gt;::make(bevy_audio::audio_output::AudioOutput, bevy_ecs::world::impl$2::init_resource::closure_env$1 (28 samples, 0.02%)</title><rect x="0.2281%" y="2149" width="0.0162%" height="15" fill="rgb(210,229,1)" fg:x="394" fg:w="28"/><text x="0.4781%" y="2159.50"></text></g><g><title>boids.exe`core::mem::manually_drop::ManuallyDrop&lt;bevy_audio::audio_output::AudioOutput&gt;::new (28 samples, 0.02%)</title><rect x="0.2281%" y="2133" width="0.0162%" height="15" fill="rgb(222,148,37)" fg:x="394" fg:w="28"/><text x="0.4781%" y="2143.50"></text></g><g><title>boids.exe`bevy_audio::audio_output::impl$0::default (28 samples, 0.02%)</title><rect x="0.2281%" y="2117" width="0.0162%" height="15" fill="rgb(234,67,33)" fg:x="394" fg:w="28"/><text x="0.4781%" y="2127.50"></text></g><g><title>boids.exe`rodio::stream::OutputStream::try_default (28 samples, 0.02%)</title><rect x="0.2281%" y="2101" width="0.0162%" height="15" fill="rgb(247,98,35)" fg:x="394" fg:w="28"/><text x="0.4781%" y="2111.50"></text></g><g><title>boids.exe`bevy_audio::impl$0::build (30 samples, 0.02%)</title><rect x="0.2281%" y="2213" width="0.0174%" height="15" fill="rgb(247,138,52)" fg:x="394" fg:w="30"/><text x="0.4781%" y="2223.50"></text></g><g><title>`0x7FF89B57211C (22 samples, 0.01%)</title><rect x="0.2577%" y="1797" width="0.0127%" height="15" fill="rgb(213,79,30)" fg:x="445" fg:w="22"/><text x="0.5077%" y="1807.50"></text></g><g><title>`0x7FF8918AAF75 (36 samples, 0.02%)</title><rect x="0.2513%" y="1861" width="0.0208%" height="15" fill="rgb(246,177,23)" fg:x="434" fg:w="36"/><text x="0.5013%" y="1871.50"></text></g><g><title>`0x7FF89B563AB2 (36 samples, 0.02%)</title><rect x="0.2513%" y="1845" width="0.0208%" height="15" fill="rgb(230,62,27)" fg:x="434" fg:w="36"/><text x="0.5013%" y="1855.50"></text></g><g><title>`0x7FF89B563D85 (36 samples, 0.02%)</title><rect x="0.2513%" y="1829" width="0.0208%" height="15" fill="rgb(216,154,8)" fg:x="434" fg:w="36"/><text x="0.5013%" y="1839.50"></text></g><g><title>`0x7FF89B56F372 (30 samples, 0.02%)</title><rect x="0.2548%" y="1813" width="0.0174%" height="15" fill="rgb(244,35,45)" fg:x="440" fg:w="30"/><text x="0.5048%" y="1823.50"></text></g><g><title>`0x7FF89AB8E479 (19 samples, 0.01%)</title><rect x="0.2831%" y="1765" width="0.0110%" height="15" fill="rgb(251,115,12)" fg:x="489" fg:w="19"/><text x="0.5331%" y="1775.50"></text></g><g><title>`0x7FF89B56EBCC (37 samples, 0.02%)</title><rect x="0.2820%" y="1781" width="0.0214%" height="15" fill="rgb(240,54,50)" fg:x="487" fg:w="37"/><text x="0.5320%" y="1791.50"></text></g><g><title>`0x7FF89D8DEB22 (29 samples, 0.02%)</title><rect x="0.3109%" y="1653" width="0.0168%" height="15" fill="rgb(233,84,52)" fg:x="537" fg:w="29"/><text x="0.5609%" y="1663.50"></text></g><g><title>`0x7FF89D9513E4 (29 samples, 0.02%)</title><rect x="0.3109%" y="1637" width="0.0168%" height="15" fill="rgb(207,117,47)" fg:x="537" fg:w="29"/><text x="0.5609%" y="1647.50"></text></g><g><title>`0x7FF89D8DE82A (34 samples, 0.02%)</title><rect x="0.3109%" y="1669" width="0.0197%" height="15" fill="rgb(249,43,39)" fg:x="537" fg:w="34"/><text x="0.5609%" y="1679.50"></text></g><g><title>`0x7FF89D8CFBD1 (36 samples, 0.02%)</title><rect x="0.3109%" y="1685" width="0.0208%" height="15" fill="rgb(209,38,44)" fg:x="537" fg:w="36"/><text x="0.5609%" y="1695.50"></text></g><g><title>`0x7FF89D8CF3A5 (63 samples, 0.04%)</title><rect x="0.3040%" y="1701" width="0.0365%" height="15" fill="rgb(236,212,23)" fg:x="525" fg:w="63"/><text x="0.5540%" y="1711.50"></text></g><g><title>`0x7FF89D8D7338 (82 samples, 0.05%)</title><rect x="0.3040%" y="1717" width="0.0475%" height="15" fill="rgb(242,79,21)" fg:x="525" fg:w="82"/><text x="0.5540%" y="1727.50"></text></g><g><title>`0x7FF89D8CF586 (19 samples, 0.01%)</title><rect x="0.3405%" y="1701" width="0.0110%" height="15" fill="rgb(211,96,35)" fg:x="588" fg:w="19"/><text x="0.5905%" y="1711.50"></text></g><g><title>`0x7FF89D8B875D (19 samples, 0.01%)</title><rect x="0.3405%" y="1685" width="0.0110%" height="15" fill="rgb(253,215,40)" fg:x="588" fg:w="19"/><text x="0.5905%" y="1695.50"></text></g><g><title>`0x7FF89D951524 (19 samples, 0.01%)</title><rect x="0.3405%" y="1669" width="0.0110%" height="15" fill="rgb(211,81,21)" fg:x="588" fg:w="19"/><text x="0.5905%" y="1679.50"></text></g><g><title>`0x7FF89D8DEB22 (23 samples, 0.01%)</title><rect x="0.3625%" y="1653" width="0.0133%" height="15" fill="rgb(208,190,38)" fg:x="626" fg:w="23"/><text x="0.6125%" y="1663.50"></text></g><g><title>`0x7FF89D9513E4 (23 samples, 0.01%)</title><rect x="0.3625%" y="1637" width="0.0133%" height="15" fill="rgb(235,213,38)" fg:x="626" fg:w="23"/><text x="0.6125%" y="1647.50"></text></g><g><title>`0x7FF89D8DE82A (28 samples, 0.02%)</title><rect x="0.3607%" y="1669" width="0.0162%" height="15" fill="rgb(237,122,38)" fg:x="623" fg:w="28"/><text x="0.6107%" y="1679.50"></text></g><g><title>`0x7FF89D8CFBD1 (29 samples, 0.02%)</title><rect x="0.3607%" y="1685" width="0.0168%" height="15" fill="rgb(244,218,35)" fg:x="623" fg:w="29"/><text x="0.6107%" y="1695.50"></text></g><g><title>`0x7FF89D8CF3A5 (54 samples, 0.03%)</title><rect x="0.3515%" y="1701" width="0.0313%" height="15" fill="rgb(240,68,47)" fg:x="607" fg:w="54"/><text x="0.6015%" y="1711.50"></text></g><g><title>`0x7FF89D8CF586 (20 samples, 0.01%)</title><rect x="0.3827%" y="1701" width="0.0116%" height="15" fill="rgb(210,16,53)" fg:x="661" fg:w="20"/><text x="0.6327%" y="1711.50"></text></g><g><title>`0x7FF89D8B875D (20 samples, 0.01%)</title><rect x="0.3827%" y="1685" width="0.0116%" height="15" fill="rgb(235,124,12)" fg:x="661" fg:w="20"/><text x="0.6327%" y="1695.50"></text></g><g><title>`0x7FF89D951524 (20 samples, 0.01%)</title><rect x="0.3827%" y="1669" width="0.0116%" height="15" fill="rgb(224,169,11)" fg:x="661" fg:w="20"/><text x="0.6327%" y="1679.50"></text></g><g><title>`0x7FF89D8D7BA9 (75 samples, 0.04%)</title><rect x="0.3515%" y="1717" width="0.0434%" height="15" fill="rgb(250,166,2)" fg:x="607" fg:w="75"/><text x="0.6015%" y="1727.50"></text></g><g><title>`0x7FF89AB62157 (166 samples, 0.10%)</title><rect x="0.3040%" y="1749" width="0.0961%" height="15" fill="rgb(242,216,29)" fg:x="525" fg:w="166"/><text x="0.5540%" y="1759.50"></text></g><g><title>`0x7FF89D8D98EE (166 samples, 0.10%)</title><rect x="0.3040%" y="1733" width="0.0961%" height="15" fill="rgb(230,116,27)" fg:x="525" fg:w="166"/><text x="0.5540%" y="1743.50"></text></g><g><title>`0x7FF89B56EF55 (168 samples, 0.10%)</title><rect x="0.3034%" y="1765" width="0.0973%" height="15" fill="rgb(228,99,48)" fg:x="524" fg:w="168"/><text x="0.5534%" y="1775.50"></text></g><g><title>`0x7FF89D8CE0F5 (49 samples, 0.03%)</title><rect x="0.4013%" y="1701" width="0.0284%" height="15" fill="rgb(253,11,6)" fg:x="693" fg:w="49"/><text x="0.6513%" y="1711.50"></text></g><g><title>`0x7FF89D951524 (49 samples, 0.03%)</title><rect x="0.4013%" y="1685" width="0.0284%" height="15" fill="rgb(247,143,39)" fg:x="693" fg:w="49"/><text x="0.6513%" y="1695.50"></text></g><g><title>`0x7FF89D8CA4A2 (50 samples, 0.03%)</title><rect x="0.4013%" y="1717" width="0.0290%" height="15" fill="rgb(236,97,10)" fg:x="693" fg:w="50"/><text x="0.6513%" y="1727.50"></text></g><g><title>`0x7FF89AB795A9 (79 samples, 0.05%)</title><rect x="0.4013%" y="1733" width="0.0457%" height="15" fill="rgb(233,208,19)" fg:x="693" fg:w="79"/><text x="0.6513%" y="1743.50"></text></g><g><title>`0x7FF89D8CA810 (28 samples, 0.02%)</title><rect x="0.4308%" y="1717" width="0.0162%" height="15" fill="rgb(216,164,2)" fg:x="744" fg:w="28"/><text x="0.6808%" y="1727.50"></text></g><g><title>`0x7FF89D8CE0F5 (28 samples, 0.02%)</title><rect x="0.4308%" y="1701" width="0.0162%" height="15" fill="rgb(220,129,5)" fg:x="744" fg:w="28"/><text x="0.6808%" y="1711.50"></text></g><g><title>`0x7FF89D951524 (28 samples, 0.02%)</title><rect x="0.4308%" y="1685" width="0.0162%" height="15" fill="rgb(242,17,10)" fg:x="744" fg:w="28"/><text x="0.6808%" y="1695.50"></text></g><g><title>`0x7FF89AB79640 (40 samples, 0.02%)</title><rect x="0.4476%" y="1733" width="0.0232%" height="15" fill="rgb(242,107,0)" fg:x="773" fg:w="40"/><text x="0.6976%" y="1743.50"></text></g><g><title>`0x7FF89AB79C5C (40 samples, 0.02%)</title><rect x="0.4476%" y="1717" width="0.0232%" height="15" fill="rgb(251,28,31)" fg:x="773" fg:w="40"/><text x="0.6976%" y="1727.50"></text></g><g><title>`0x7FF89AB7A2F0 (38 samples, 0.02%)</title><rect x="0.4487%" y="1701" width="0.0220%" height="15" fill="rgb(233,223,10)" fg:x="775" fg:w="38"/><text x="0.6987%" y="1711.50"></text></g><g><title>`0x7FF89D951824 (38 samples, 0.02%)</title><rect x="0.4487%" y="1685" width="0.0220%" height="15" fill="rgb(215,21,27)" fg:x="775" fg:w="38"/><text x="0.6987%" y="1695.50"></text></g><g><title>`0x7FF89AB7975D (26 samples, 0.02%)</title><rect x="0.4933%" y="1733" width="0.0151%" height="15" fill="rgb(232,23,21)" fg:x="852" fg:w="26"/><text x="0.7433%" y="1743.50"></text></g><g><title>`0x7FF89D950F64 (26 samples, 0.02%)</title><rect x="0.4933%" y="1717" width="0.0151%" height="15" fill="rgb(244,5,23)" fg:x="852" fg:w="26"/><text x="0.7433%" y="1727.50"></text></g><g><title>`0x7FF89B56EC1B (355 samples, 0.21%)</title><rect x="0.3034%" y="1781" width="0.2055%" height="15" fill="rgb(226,81,46)" fg:x="524" fg:w="355"/><text x="0.5534%" y="1791.50"></text></g><g><title>`0x7FF89B56F07E (187 samples, 0.11%)</title><rect x="0.4007%" y="1765" width="0.1083%" height="15" fill="rgb(247,70,30)" fg:x="692" fg:w="187"/><text x="0.6507%" y="1775.50"></text></g><g><title>`0x7FF89AB7B340 (186 samples, 0.11%)</title><rect x="0.4013%" y="1749" width="0.1077%" height="15" fill="rgb(212,68,19)" fg:x="693" fg:w="186"/><text x="0.6513%" y="1759.50"></text></g><g><title>`0x7FF8918AB41F (405 samples, 0.23%)</title><rect x="0.2779%" y="1813" width="0.2345%" height="15" fill="rgb(240,187,13)" fg:x="480" fg:w="405"/><text x="0.5279%" y="1823.50"></text></g><g><title>`0x7FF89B563BB2 (404 samples, 0.23%)</title><rect x="0.2785%" y="1797" width="0.2339%" height="15" fill="rgb(223,113,26)" fg:x="481" fg:w="404"/><text x="0.5285%" y="1807.50"></text></g><g><title>`0x7FF8918AADF9 (408 samples, 0.24%)</title><rect x="0.2779%" y="1829" width="0.2362%" height="15" fill="rgb(206,192,2)" fg:x="480" fg:w="408"/><text x="0.5279%" y="1839.50"></text></g><g><title>`0x7FF89D8D7338 (26 samples, 0.02%)</title><rect x="0.5188%" y="1717" width="0.0151%" height="15" fill="rgb(241,108,4)" fg:x="896" fg:w="26"/><text x="0.7688%" y="1727.50"></text></g><g><title>`0x7FF89D8D7BA9 (22 samples, 0.01%)</title><rect x="0.5338%" y="1717" width="0.0127%" height="15" fill="rgb(247,173,49)" fg:x="922" fg:w="22"/><text x="0.7838%" y="1727.50"></text></g><g><title>`0x7FF89B56EF55 (52 samples, 0.03%)</title><rect x="0.5188%" y="1765" width="0.0301%" height="15" fill="rgb(224,114,35)" fg:x="896" fg:w="52"/><text x="0.7688%" y="1775.50"></text></g><g><title>`0x7FF89AB62157 (52 samples, 0.03%)</title><rect x="0.5188%" y="1749" width="0.0301%" height="15" fill="rgb(245,159,27)" fg:x="896" fg:w="52"/><text x="0.7688%" y="1759.50"></text></g><g><title>`0x7FF89D8D98EE (52 samples, 0.03%)</title><rect x="0.5188%" y="1733" width="0.0301%" height="15" fill="rgb(245,172,44)" fg:x="896" fg:w="52"/><text x="0.7688%" y="1743.50"></text></g><g><title>`0x7FF89AB795A9 (20 samples, 0.01%)</title><rect x="0.5506%" y="1733" width="0.0116%" height="15" fill="rgb(236,23,11)" fg:x="951" fg:w="20"/><text x="0.8006%" y="1743.50"></text></g><g><title>`0x7FF89B56EC1B (111 samples, 0.06%)</title><rect x="0.5188%" y="1781" width="0.0643%" height="15" fill="rgb(205,117,38)" fg:x="896" fg:w="111"/><text x="0.7688%" y="1791.50"></text></g><g><title>`0x7FF89B56F07E (59 samples, 0.03%)</title><rect x="0.5489%" y="1765" width="0.0342%" height="15" fill="rgb(237,72,25)" fg:x="948" fg:w="59"/><text x="0.7989%" y="1775.50"></text></g><g><title>`0x7FF89AB7B340 (57 samples, 0.03%)</title><rect x="0.5501%" y="1749" width="0.0330%" height="15" fill="rgb(244,70,9)" fg:x="950" fg:w="57"/><text x="0.8001%" y="1759.50"></text></g><g><title>`0x7FF8918AC4A0 (575 samples, 0.33%)</title><rect x="0.2513%" y="1877" width="0.3329%" height="15" fill="rgb(217,125,39)" fg:x="434" fg:w="575"/><text x="0.5013%" y="1887.50"></text></g><g><title>`0x7FF8918AB0A8 (539 samples, 0.31%)</title><rect x="0.2721%" y="1861" width="0.3121%" height="15" fill="rgb(235,36,10)" fg:x="470" fg:w="539"/><text x="0.5221%" y="1871.50"></text></g><g><title>`0x7FF8918AB278 (539 samples, 0.31%)</title><rect x="0.2721%" y="1845" width="0.3121%" height="15" fill="rgb(251,123,47)" fg:x="470" fg:w="539"/><text x="0.5221%" y="1855.50"></text></g><g><title>`0x7FF8918AAE94 (121 samples, 0.07%)</title><rect x="0.5142%" y="1829" width="0.0701%" height="15" fill="rgb(221,13,13)" fg:x="888" fg:w="121"/><text x="0.7642%" y="1839.50"></text></g><g><title>`0x7FF8918AB41F (121 samples, 0.07%)</title><rect x="0.5142%" y="1813" width="0.0701%" height="15" fill="rgb(238,131,9)" fg:x="888" fg:w="121"/><text x="0.7642%" y="1823.50"></text></g><g><title>`0x7FF89B563BB2 (121 samples, 0.07%)</title><rect x="0.5142%" y="1797" width="0.0701%" height="15" fill="rgb(211,50,8)" fg:x="888" fg:w="121"/><text x="0.7642%" y="1807.50"></text></g><g><title>`0x7FF89B56EBCC (21 samples, 0.01%)</title><rect x="0.5848%" y="1797" width="0.0122%" height="15" fill="rgb(245,182,24)" fg:x="1010" fg:w="21"/><text x="0.8348%" y="1807.50"></text></g><g><title>`0x7FF89D8DE82A (24 samples, 0.01%)</title><rect x="0.6045%" y="1685" width="0.0139%" height="15" fill="rgb(242,14,37)" fg:x="1044" fg:w="24"/><text x="0.8545%" y="1695.50"></text></g><g><title>`0x7FF89D8CFBD1 (27 samples, 0.02%)</title><rect x="0.6045%" y="1701" width="0.0156%" height="15" fill="rgb(246,228,12)" fg:x="1044" fg:w="27"/><text x="0.8545%" y="1711.50"></text></g><g><title>`0x7FF89D8D7338 (52 samples, 0.03%)</title><rect x="0.5975%" y="1733" width="0.0301%" height="15" fill="rgb(213,55,15)" fg:x="1032" fg:w="52"/><text x="0.8475%" y="1743.50"></text></g><g><title>`0x7FF89D8CF3A5 (52 samples, 0.03%)</title><rect x="0.5975%" y="1717" width="0.0301%" height="15" fill="rgb(209,9,3)" fg:x="1032" fg:w="52"/><text x="0.8475%" y="1727.50"></text></g><g><title>`0x7FF89D8CFBD1 (18 samples, 0.01%)</title><rect x="0.6340%" y="1701" width="0.0104%" height="15" fill="rgb(230,59,30)" fg:x="1095" fg:w="18"/><text x="0.8840%" y="1711.50"></text></g><g><title>`0x7FF89D8CF3A5 (42 samples, 0.02%)</title><rect x="0.6276%" y="1717" width="0.0243%" height="15" fill="rgb(209,121,21)" fg:x="1084" fg:w="42"/><text x="0.8776%" y="1727.50"></text></g><g><title>`0x7FF89D8D7BA9 (43 samples, 0.02%)</title><rect x="0.6276%" y="1733" width="0.0249%" height="15" fill="rgb(220,109,13)" fg:x="1084" fg:w="43"/><text x="0.8776%" y="1743.50"></text></g><g><title>`0x7FF89B56EF55 (100 samples, 0.06%)</title><rect x="0.5970%" y="1781" width="0.0579%" height="15" fill="rgb(232,18,1)" fg:x="1031" fg:w="100"/><text x="0.8470%" y="1791.50"></text></g><g><title>`0x7FF89AB62157 (100 samples, 0.06%)</title><rect x="0.5970%" y="1765" width="0.0579%" height="15" fill="rgb(215,41,42)" fg:x="1031" fg:w="100"/><text x="0.8470%" y="1775.50"></text></g><g><title>`0x7FF89D8D98EE (100 samples, 0.06%)</title><rect x="0.5970%" y="1749" width="0.0579%" height="15" fill="rgb(224,123,36)" fg:x="1031" fg:w="100"/><text x="0.8470%" y="1759.50"></text></g><g><title>`0x7FF89AB795A9 (32 samples, 0.02%)</title><rect x="0.6577%" y="1749" width="0.0185%" height="15" fill="rgb(240,125,3)" fg:x="1136" fg:w="32"/><text x="0.9077%" y="1759.50"></text></g><g><title>`0x7FF89B56EC1B (174 samples, 0.10%)</title><rect x="0.5970%" y="1797" width="0.1007%" height="15" fill="rgb(205,98,50)" fg:x="1031" fg:w="174"/><text x="0.8470%" y="1807.50"></text></g><g><title>`0x7FF89B56F07E (72 samples, 0.04%)</title><rect x="0.6560%" y="1781" width="0.0417%" height="15" fill="rgb(205,185,37)" fg:x="1133" fg:w="72"/><text x="0.9060%" y="1791.50"></text></g><g><title>`0x7FF89AB7B340 (70 samples, 0.04%)</title><rect x="0.6572%" y="1765" width="0.0405%" height="15" fill="rgb(238,207,15)" fg:x="1135" fg:w="70"/><text x="0.9072%" y="1775.50"></text></g><g><title>`0x7FF8918AC4AA (197 samples, 0.11%)</title><rect x="0.5842%" y="1877" width="0.1141%" height="15" fill="rgb(213,199,42)" fg:x="1009" fg:w="197"/><text x="0.8342%" y="1887.50"></text></g><g><title>`0x7FF8918AB0A8 (197 samples, 0.11%)</title><rect x="0.5842%" y="1861" width="0.1141%" height="15" fill="rgb(235,201,11)" fg:x="1009" fg:w="197"/><text x="0.8342%" y="1871.50"></text></g><g><title>`0x7FF8918AB2C6 (197 samples, 0.11%)</title><rect x="0.5842%" y="1845" width="0.1141%" height="15" fill="rgb(207,46,11)" fg:x="1009" fg:w="197"/><text x="0.8342%" y="1855.50"></text></g><g><title>`0x7FF8918AB41F (197 samples, 0.11%)</title><rect x="0.5842%" y="1829" width="0.1141%" height="15" fill="rgb(241,35,35)" fg:x="1009" fg:w="197"/><text x="0.8342%" y="1839.50"></text></g><g><title>`0x7FF89B563BB2 (197 samples, 0.11%)</title><rect x="0.5842%" y="1813" width="0.1141%" height="15" fill="rgb(243,32,47)" fg:x="1009" fg:w="197"/><text x="0.8342%" y="1823.50"></text></g><g><title>`0x7FF89B5771A1 (45 samples, 0.03%)</title><rect x="0.6983%" y="1781" width="0.0261%" height="15" fill="rgb(247,202,23)" fg:x="1206" fg:w="45"/><text x="0.9483%" y="1791.50"></text></g><g><title>`0x7FF89B577C21 (44 samples, 0.03%)</title><rect x="0.6989%" y="1765" width="0.0255%" height="15" fill="rgb(219,102,11)" fg:x="1207" fg:w="44"/><text x="0.9489%" y="1775.50"></text></g><g><title>`0x7FF89D8CFB5B (18 samples, 0.01%)</title><rect x="0.7371%" y="1637" width="0.0104%" height="15" fill="rgb(243,110,44)" fg:x="1273" fg:w="18"/><text x="0.9871%" y="1647.50"></text></g><g><title>`0x7FF89D8DE82A (22 samples, 0.01%)</title><rect x="0.7475%" y="1621" width="0.0127%" height="15" fill="rgb(222,74,54)" fg:x="1291" fg:w="22"/><text x="0.9975%" y="1631.50"></text></g><g><title>`0x7FF89D8CFBD1 (23 samples, 0.01%)</title><rect x="0.7475%" y="1637" width="0.0133%" height="15" fill="rgb(216,99,12)" fg:x="1291" fg:w="23"/><text x="0.9975%" y="1647.50"></text></g><g><title>`0x7FF89D8CF3A5 (51 samples, 0.03%)</title><rect x="0.7371%" y="1653" width="0.0295%" height="15" fill="rgb(226,22,26)" fg:x="1273" fg:w="51"/><text x="0.9871%" y="1663.50"></text></g><g><title>`0x7FF89D8D7338 (61 samples, 0.04%)</title><rect x="0.7371%" y="1669" width="0.0353%" height="15" fill="rgb(217,163,10)" fg:x="1273" fg:w="61"/><text x="0.9871%" y="1679.50"></text></g><g><title>`0x7FF89D8DEB22 (19 samples, 0.01%)</title><rect x="0.7834%" y="1605" width="0.0110%" height="15" fill="rgb(213,25,53)" fg:x="1353" fg:w="19"/><text x="1.0334%" y="1615.50"></text></g><g><title>`0x7FF89D9513E4 (18 samples, 0.01%)</title><rect x="0.7840%" y="1589" width="0.0104%" height="15" fill="rgb(252,105,26)" fg:x="1354" fg:w="18"/><text x="1.0340%" y="1599.50"></text></g><g><title>`0x7FF89D8CFBD1 (23 samples, 0.01%)</title><rect x="0.7822%" y="1637" width="0.0133%" height="15" fill="rgb(220,39,43)" fg:x="1351" fg:w="23"/><text x="1.0322%" y="1647.50"></text></g><g><title>`0x7FF89D8DE82A (23 samples, 0.01%)</title><rect x="0.7822%" y="1621" width="0.0133%" height="15" fill="rgb(229,68,48)" fg:x="1351" fg:w="23"/><text x="1.0322%" y="1631.50"></text></g><g><title>`0x7FF89D8CF3A5 (40 samples, 0.02%)</title><rect x="0.7759%" y="1653" width="0.0232%" height="15" fill="rgb(252,8,32)" fg:x="1340" fg:w="40"/><text x="1.0259%" y="1663.50"></text></g><g><title>`0x7FF89D8D7BA9 (65 samples, 0.04%)</title><rect x="0.7741%" y="1669" width="0.0376%" height="15" fill="rgb(223,20,43)" fg:x="1337" fg:w="65"/><text x="1.0241%" y="1679.50"></text></g><g><title>`0x7FF89D8CF586 (21 samples, 0.01%)</title><rect x="0.7996%" y="1653" width="0.0122%" height="15" fill="rgb(229,81,49)" fg:x="1381" fg:w="21"/><text x="1.0496%" y="1663.50"></text></g><g><title>`0x7FF89D8B875D (21 samples, 0.01%)</title><rect x="0.7996%" y="1637" width="0.0122%" height="15" fill="rgb(236,28,36)" fg:x="1381" fg:w="21"/><text x="1.0496%" y="1647.50"></text></g><g><title>`0x7FF89D951524 (21 samples, 0.01%)</title><rect x="0.7996%" y="1621" width="0.0122%" height="15" fill="rgb(249,185,26)" fg:x="1381" fg:w="21"/><text x="1.0496%" y="1631.50"></text></g><g><title>`0x7FF89D8D98EE (130 samples, 0.08%)</title><rect x="0.7371%" y="1685" width="0.0753%" height="15" fill="rgb(249,174,33)" fg:x="1273" fg:w="130"/><text x="0.9871%" y="1695.50"></text></g><g><title>`0x7FF89AB62157 (131 samples, 0.08%)</title><rect x="0.7371%" y="1701" width="0.0758%" height="15" fill="rgb(233,201,37)" fg:x="1273" fg:w="131"/><text x="0.9871%" y="1711.50"></text></g><g><title>`0x7FF89B56EF55 (134 samples, 0.08%)</title><rect x="0.7365%" y="1717" width="0.0776%" height="15" fill="rgb(221,78,26)" fg:x="1272" fg:w="134"/><text x="0.9865%" y="1727.50"></text></g><g><title>`0x7FF89AB795A9 (31 samples, 0.02%)</title><rect x="0.8251%" y="1685" width="0.0179%" height="15" fill="rgb(250,127,30)" fg:x="1425" fg:w="31"/><text x="1.0751%" y="1695.50"></text></g><g><title>`0x7FF89B56EB08 (233 samples, 0.13%)</title><rect x="0.7301%" y="1733" width="0.1349%" height="15" fill="rgb(230,49,44)" fg:x="1261" fg:w="233"/><text x="0.9801%" y="1743.50"></text></g><g><title>`0x7FF89B56F07E (71 samples, 0.04%)</title><rect x="0.8239%" y="1717" width="0.0411%" height="15" fill="rgb(229,67,23)" fg:x="1423" fg:w="71"/><text x="1.0739%" y="1727.50"></text></g><g><title>`0x7FF89AB7B340 (70 samples, 0.04%)</title><rect x="0.8245%" y="1701" width="0.0405%" height="15" fill="rgb(249,83,47)" fg:x="1424" fg:w="70"/><text x="1.0745%" y="1711.50"></text></g><g><title>`0x7FF89B56EBCC (25 samples, 0.01%)</title><rect x="0.8656%" y="1733" width="0.0145%" height="15" fill="rgb(215,43,3)" fg:x="1495" fg:w="25"/><text x="1.1156%" y="1743.50"></text></g><g><title>`0x7FF89B56E26B (264 samples, 0.15%)</title><rect x="0.7278%" y="1749" width="0.1529%" height="15" fill="rgb(238,154,13)" fg:x="1257" fg:w="264"/><text x="0.9778%" y="1759.50"></text></g><g><title>`0x7FF8918A2B11 (337 samples, 0.20%)</title><rect x="0.6983%" y="1861" width="0.1951%" height="15" fill="rgb(219,56,2)" fg:x="1206" fg:w="337"/><text x="0.9483%" y="1871.50"></text></g><g><title>`0x7FF8918AC82A (337 samples, 0.20%)</title><rect x="0.6983%" y="1845" width="0.1951%" height="15" fill="rgb(233,0,4)" fg:x="1206" fg:w="337"/><text x="0.9483%" y="1855.50"></text></g><g><title>`0x7FF89AB7FAEB (337 samples, 0.20%)</title><rect x="0.6983%" y="1829" width="0.1951%" height="15" fill="rgb(235,30,7)" fg:x="1206" fg:w="337"/><text x="0.9483%" y="1839.50"></text></g><g><title>`0x7FF89AB8059C (337 samples, 0.20%)</title><rect x="0.6983%" y="1813" width="0.1951%" height="15" fill="rgb(250,79,13)" fg:x="1206" fg:w="337"/><text x="0.9483%" y="1823.50"></text></g><g><title>`0x7FF89B577CEB (337 samples, 0.20%)</title><rect x="0.6983%" y="1797" width="0.1951%" height="15" fill="rgb(211,146,34)" fg:x="1206" fg:w="337"/><text x="0.9483%" y="1807.50"></text></g><g><title>`0x7FF89B5773C0 (292 samples, 0.17%)</title><rect x="0.7243%" y="1781" width="0.1691%" height="15" fill="rgb(228,22,38)" fg:x="1251" fg:w="292"/><text x="0.9743%" y="1791.50"></text></g><g><title>`0x7FF89B56CD0C (291 samples, 0.17%)</title><rect x="0.7249%" y="1765" width="0.1685%" height="15" fill="rgb(235,168,5)" fg:x="1252" fg:w="291"/><text x="0.9749%" y="1775.50"></text></g><g><title>`0x7FF89D8CF3A5 (19 samples, 0.01%)</title><rect x="0.9102%" y="1669" width="0.0110%" height="15" fill="rgb(221,155,16)" fg:x="1572" fg:w="19"/><text x="1.1602%" y="1679.50"></text></g><g><title>`0x7FF89D8D7338 (21 samples, 0.01%)</title><rect x="0.9102%" y="1685" width="0.0122%" height="15" fill="rgb(215,215,53)" fg:x="1572" fg:w="21"/><text x="1.1602%" y="1695.50"></text></g><g><title>`0x7FF89B56EF55 (44 samples, 0.03%)</title><rect x="0.9090%" y="1733" width="0.0255%" height="15" fill="rgb(223,4,10)" fg:x="1570" fg:w="44"/><text x="1.1590%" y="1743.50"></text></g><g><title>`0x7FF89AB62157 (44 samples, 0.03%)</title><rect x="0.9090%" y="1717" width="0.0255%" height="15" fill="rgb(234,103,6)" fg:x="1570" fg:w="44"/><text x="1.1590%" y="1727.50"></text></g><g><title>`0x7FF89D8D98EE (44 samples, 0.03%)</title><rect x="0.9090%" y="1701" width="0.0255%" height="15" fill="rgb(227,97,0)" fg:x="1570" fg:w="44"/><text x="1.1590%" y="1711.50"></text></g><g><title>`0x7FF89AB795A9 (34 samples, 0.02%)</title><rect x="0.9368%" y="1701" width="0.0197%" height="15" fill="rgb(234,150,53)" fg:x="1618" fg:w="34"/><text x="1.1868%" y="1711.50"></text></g><g><title>`0x7FF89AB79640 (18 samples, 0.01%)</title><rect x="0.9565%" y="1701" width="0.0104%" height="15" fill="rgb(228,201,54)" fg:x="1652" fg:w="18"/><text x="1.2065%" y="1711.50"></text></g><g><title>`0x7FF89AB79C5C (18 samples, 0.01%)</title><rect x="0.9565%" y="1685" width="0.0104%" height="15" fill="rgb(222,22,37)" fg:x="1652" fg:w="18"/><text x="1.2065%" y="1695.50"></text></g><g><title>`0x7FF89AB7A2F0 (18 samples, 0.01%)</title><rect x="0.9565%" y="1669" width="0.0104%" height="15" fill="rgb(237,53,32)" fg:x="1652" fg:w="18"/><text x="1.2065%" y="1679.50"></text></g><g><title>`0x7FF89D951824 (18 samples, 0.01%)</title><rect x="0.9565%" y="1653" width="0.0104%" height="15" fill="rgb(233,25,53)" fg:x="1652" fg:w="18"/><text x="1.2065%" y="1663.50"></text></g><g><title>`0x7FF89B56EC1B (133 samples, 0.08%)</title><rect x="0.9090%" y="1749" width="0.0770%" height="15" fill="rgb(210,40,34)" fg:x="1570" fg:w="133"/><text x="1.1590%" y="1759.50"></text></g><g><title>`0x7FF89B56F07E (87 samples, 0.05%)</title><rect x="0.9357%" y="1733" width="0.0504%" height="15" fill="rgb(241,220,44)" fg:x="1616" fg:w="87"/><text x="1.1857%" y="1743.50"></text></g><g><title>`0x7FF89AB7B340 (86 samples, 0.05%)</title><rect x="0.9363%" y="1717" width="0.0498%" height="15" fill="rgb(235,28,35)" fg:x="1617" fg:w="86"/><text x="1.1863%" y="1727.50"></text></g><g><title>`0x7FF89AB7975D (22 samples, 0.01%)</title><rect x="0.9733%" y="1701" width="0.0127%" height="15" fill="rgb(210,56,17)" fg:x="1681" fg:w="22"/><text x="1.2233%" y="1711.50"></text></g><g><title>`0x7FF89D950F64 (22 samples, 0.01%)</title><rect x="0.9733%" y="1685" width="0.0127%" height="15" fill="rgb(224,130,29)" fg:x="1681" fg:w="22"/><text x="1.2233%" y="1695.50"></text></g><g><title>`0x7FF89B56DF58 (152 samples, 0.09%)</title><rect x="0.8992%" y="1765" width="0.0880%" height="15" fill="rgb(235,212,8)" fg:x="1553" fg:w="152"/><text x="1.1492%" y="1775.50"></text></g><g><title>`0x7FF89B56DFB6 (23 samples, 0.01%)</title><rect x="0.9872%" y="1765" width="0.0133%" height="15" fill="rgb(223,33,50)" fg:x="1705" fg:w="23"/><text x="1.2372%" y="1775.50"></text></g><g><title>`0x7FF89B56EC1B (22 samples, 0.01%)</title><rect x="0.9878%" y="1749" width="0.0127%" height="15" fill="rgb(219,149,13)" fg:x="1706" fg:w="22"/><text x="1.2378%" y="1759.50"></text></g><g><title>`0x7FF89D8CF3A5 (18 samples, 0.01%)</title><rect x="1.0092%" y="1669" width="0.0104%" height="15" fill="rgb(250,156,29)" fg:x="1743" fg:w="18"/><text x="1.2592%" y="1679.50"></text></g><g><title>`0x7FF89D8D7338 (26 samples, 0.02%)</title><rect x="1.0092%" y="1685" width="0.0151%" height="15" fill="rgb(216,193,19)" fg:x="1743" fg:w="26"/><text x="1.2592%" y="1695.50"></text></g><g><title>`0x7FF89D8CF586 (35 samples, 0.02%)</title><rect x="1.0358%" y="1669" width="0.0203%" height="15" fill="rgb(216,135,14)" fg:x="1789" fg:w="35"/><text x="1.2858%" y="1679.50"></text></g><g><title>`0x7FF89D8B875D (35 samples, 0.02%)</title><rect x="1.0358%" y="1653" width="0.0203%" height="15" fill="rgb(241,47,5)" fg:x="1789" fg:w="35"/><text x="1.2858%" y="1663.50"></text></g><g><title>`0x7FF89D951524 (35 samples, 0.02%)</title><rect x="1.0358%" y="1637" width="0.0203%" height="15" fill="rgb(233,42,35)" fg:x="1789" fg:w="35"/><text x="1.2858%" y="1647.50"></text></g><g><title>`0x7FF89D8D7BA9 (53 samples, 0.03%)</title><rect x="1.0260%" y="1685" width="0.0307%" height="15" fill="rgb(231,13,6)" fg:x="1772" fg:w="53"/><text x="1.2760%" y="1695.50"></text></g><g><title>`0x7FF89B56EF55 (87 samples, 0.05%)</title><rect x="1.0086%" y="1733" width="0.0504%" height="15" fill="rgb(207,181,40)" fg:x="1742" fg:w="87"/><text x="1.2586%" y="1743.50"></text></g><g><title>`0x7FF89AB62157 (87 samples, 0.05%)</title><rect x="1.0086%" y="1717" width="0.0504%" height="15" fill="rgb(254,173,49)" fg:x="1742" fg:w="87"/><text x="1.2586%" y="1727.50"></text></g><g><title>`0x7FF89D8D98EE (87 samples, 0.05%)</title><rect x="1.0086%" y="1701" width="0.0504%" height="15" fill="rgb(221,1,38)" fg:x="1742" fg:w="87"/><text x="1.2586%" y="1711.50"></text></g><g><title>`0x7FF89D8CA4A2 (19 samples, 0.01%)</title><rect x="1.0758%" y="1685" width="0.0110%" height="15" fill="rgb(206,124,46)" fg:x="1858" fg:w="19"/><text x="1.3258%" y="1695.50"></text></g><g><title>`0x7FF89D8CE0F5 (19 samples, 0.01%)</title><rect x="1.0758%" y="1669" width="0.0110%" height="15" fill="rgb(249,21,11)" fg:x="1858" fg:w="19"/><text x="1.3258%" y="1679.50"></text></g><g><title>`0x7FF89D951524 (19 samples, 0.01%)</title><rect x="1.0758%" y="1653" width="0.0110%" height="15" fill="rgb(222,201,40)" fg:x="1858" fg:w="19"/><text x="1.3258%" y="1663.50"></text></g><g><title>`0x7FF89AB795A9 (34 samples, 0.02%)</title><rect x="1.0758%" y="1701" width="0.0197%" height="15" fill="rgb(235,61,29)" fg:x="1858" fg:w="34"/><text x="1.3258%" y="1711.50"></text></g><g><title>`0x7FF89AB7B340 (78 samples, 0.05%)</title><rect x="1.0758%" y="1717" width="0.0452%" height="15" fill="rgb(219,207,3)" fg:x="1858" fg:w="78"/><text x="1.3258%" y="1727.50"></text></g><g><title>`0x7FF89B56EB08 (201 samples, 0.12%)</title><rect x="1.0052%" y="1749" width="0.1164%" height="15" fill="rgb(222,56,46)" fg:x="1736" fg:w="201"/><text x="1.2552%" y="1759.50"></text></g><g><title>`0x7FF89B56F07E (82 samples, 0.05%)</title><rect x="1.0741%" y="1733" width="0.0475%" height="15" fill="rgb(239,76,54)" fg:x="1855" fg:w="82"/><text x="1.3241%" y="1743.50"></text></g><g><title>`0x7FF89B56E26B (219 samples, 0.13%)</title><rect x="1.0052%" y="1765" width="0.1268%" height="15" fill="rgb(231,124,27)" fg:x="1736" fg:w="219"/><text x="1.2552%" y="1775.50"></text></g><g><title>`0x7FF89B56E4C9 (66 samples, 0.04%)</title><rect x="1.1354%" y="1765" width="0.0382%" height="15" fill="rgb(249,195,6)" fg:x="1961" fg:w="66"/><text x="1.3854%" y="1775.50"></text></g><g><title>`0x7FF89CB39AAC (66 samples, 0.04%)</title><rect x="1.1354%" y="1749" width="0.0382%" height="15" fill="rgb(237,174,47)" fg:x="1961" fg:w="66"/><text x="1.3854%" y="1759.50"></text></g><g><title>`0x7FF89B56CD0C (507 samples, 0.29%)</title><rect x="0.8992%" y="1781" width="0.2936%" height="15" fill="rgb(206,201,31)" fg:x="1553" fg:w="507"/><text x="1.1492%" y="1791.50"></text></g><g><title>`0x7FF8918A2E4E (508 samples, 0.29%)</title><rect x="0.8992%" y="1861" width="0.2941%" height="15" fill="rgb(231,57,52)" fg:x="1553" fg:w="508"/><text x="1.1492%" y="1871.50"></text></g><g><title>`0x7FF89AB7FAEB (508 samples, 0.29%)</title><rect x="0.8992%" y="1845" width="0.2941%" height="15" fill="rgb(248,177,22)" fg:x="1553" fg:w="508"/><text x="1.1492%" y="1855.50"></text></g><g><title>`0x7FF89AB8059C (508 samples, 0.29%)</title><rect x="0.8992%" y="1829" width="0.2941%" height="15" fill="rgb(215,211,37)" fg:x="1553" fg:w="508"/><text x="1.1492%" y="1839.50"></text></g><g><title>`0x7FF89B577CEB (508 samples, 0.29%)</title><rect x="0.8992%" y="1813" width="0.2941%" height="15" fill="rgb(241,128,51)" fg:x="1553" fg:w="508"/><text x="1.1492%" y="1823.50"></text></g><g><title>`0x7FF89B5773C0 (508 samples, 0.29%)</title><rect x="0.8992%" y="1797" width="0.2941%" height="15" fill="rgb(227,165,31)" fg:x="1553" fg:w="508"/><text x="1.1492%" y="1807.50"></text></g><g><title>`0x7FF89B56E4C9 (18 samples, 0.01%)</title><rect x="1.2188%" y="1765" width="0.0104%" height="15" fill="rgb(228,167,24)" fg:x="2105" fg:w="18"/><text x="1.4688%" y="1775.50"></text></g><g><title>`0x7FF89CB39AAC (18 samples, 0.01%)</title><rect x="1.2188%" y="1749" width="0.0104%" height="15" fill="rgb(228,143,12)" fg:x="2105" fg:w="18"/><text x="1.4688%" y="1759.50"></text></g><g><title>`0x7FF89B56E4E4 (19 samples, 0.01%)</title><rect x="1.2292%" y="1765" width="0.0110%" height="15" fill="rgb(249,149,8)" fg:x="2123" fg:w="19"/><text x="1.4792%" y="1775.50"></text></g><g><title>`0x7FF89B56CD0C (72 samples, 0.04%)</title><rect x="1.2009%" y="1781" width="0.0417%" height="15" fill="rgb(243,35,44)" fg:x="2074" fg:w="72"/><text x="1.4509%" y="1791.50"></text></g><g><title>`0x7FF8918A3038 (74 samples, 0.04%)</title><rect x="1.2009%" y="1861" width="0.0428%" height="15" fill="rgb(246,89,9)" fg:x="2074" fg:w="74"/><text x="1.4509%" y="1871.50"></text></g><g><title>`0x7FF89AB7FAEB (74 samples, 0.04%)</title><rect x="1.2009%" y="1845" width="0.0428%" height="15" fill="rgb(233,213,13)" fg:x="2074" fg:w="74"/><text x="1.4509%" y="1855.50"></text></g><g><title>`0x7FF89AB8059C (74 samples, 0.04%)</title><rect x="1.2009%" y="1829" width="0.0428%" height="15" fill="rgb(233,141,41)" fg:x="2074" fg:w="74"/><text x="1.4509%" y="1839.50"></text></g><g><title>`0x7FF89B577CEB (74 samples, 0.04%)</title><rect x="1.2009%" y="1813" width="0.0428%" height="15" fill="rgb(239,167,4)" fg:x="2074" fg:w="74"/><text x="1.4509%" y="1823.50"></text></g><g><title>`0x7FF89B5773C0 (74 samples, 0.04%)</title><rect x="1.2009%" y="1797" width="0.0428%" height="15" fill="rgb(209,217,16)" fg:x="2074" fg:w="74"/><text x="1.4509%" y="1807.50"></text></g><g><title>`0x7FF8918A9C30 (1,745 samples, 1.01%)</title><rect x="0.2507%" y="1909" width="1.0104%" height="15" fill="rgb(219,88,35)" fg:x="433" fg:w="1745"/><text x="0.5007%" y="1919.50"></text></g><g><title>`0x7FF8918AA429 (1,745 samples, 1.01%)</title><rect x="0.2507%" y="1893" width="1.0104%" height="15" fill="rgb(220,193,23)" fg:x="433" fg:w="1745"/><text x="0.5007%" y="1903.50"></text></g><g><title>`0x7FF8918AC4B6 (972 samples, 0.56%)</title><rect x="0.6983%" y="1877" width="0.5628%" height="15" fill="rgb(230,90,52)" fg:x="1206" fg:w="972"/><text x="0.9483%" y="1887.50"></text></g><g><title>`0x7FF8918A32AC (26 samples, 0.02%)</title><rect x="1.2460%" y="1861" width="0.0151%" height="15" fill="rgb(252,106,19)" fg:x="2152" fg:w="26"/><text x="1.4960%" y="1871.50"></text></g><g><title>`0x7FF8918A26B3 (25 samples, 0.01%)</title><rect x="1.2466%" y="1845" width="0.0145%" height="15" fill="rgb(206,74,20)" fg:x="2153" fg:w="25"/><text x="1.4966%" y="1855.50"></text></g><g><title>`0x7FF89AFCE887 (25 samples, 0.01%)</title><rect x="1.2466%" y="1829" width="0.0145%" height="15" fill="rgb(230,138,44)" fg:x="2153" fg:w="25"/><text x="1.4966%" y="1839.50"></text></g><g><title>`0x7FF89AFCE8C5 (25 samples, 0.01%)</title><rect x="1.2466%" y="1813" width="0.0145%" height="15" fill="rgb(235,182,43)" fg:x="2153" fg:w="25"/><text x="1.4966%" y="1823.50"></text></g><g><title>boids.exe`bevy_diagnostic::impl$0::build (1,751 samples, 1.01%)</title><rect x="0.2501%" y="2213" width="1.0138%" height="15" fill="rgb(242,16,51)" fg:x="432" fg:w="1751"/><text x="0.5001%" y="2223.50"></text></g><g><title>boids.exe`bevy_app::app::App::init_resource (1,751 samples, 1.01%)</title><rect x="0.2501%" y="2197" width="1.0138%" height="15" fill="rgb(248,9,4)" fg:x="432" fg:w="1751"/><text x="0.5001%" y="2207.50"></text></g><g><title>boids.exe`bevy_app::sub_app::SubApp::init_resource (1,751 samples, 1.01%)</title><rect x="0.2501%" y="2181" width="1.0138%" height="15" fill="rgb(210,31,22)" fg:x="432" fg:w="1751"/><text x="0.5001%" y="2191.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::init_resource (1,751 samples, 1.01%)</title><rect x="0.2501%" y="2165" width="1.0138%" height="15" fill="rgb(239,54,39)" fg:x="432" fg:w="1751"/><text x="0.5001%" y="2175.50"></text></g><g><title>boids.exe`bevy_ptr::OwningPtr&lt;bevy_ptr::Aligned&gt;::make(bevy_diagnostic::system_information_diagnostics_plugin::SystemInfo, bevy_ecs::world::impl$2::init_resource::closure_env$1 (1,751 samples, 1.01%)</title><rect x="0.2501%" y="2149" width="1.0138%" height="15" fill="rgb(230,99,41)" fg:x="432" fg:w="1751"/><text x="0.5001%" y="2159.50"></text></g><g><title>boids.exe`bevy_ecs::world::impl$2::init_resource::closure$1(bevy_ecs::world::impl$2::init_resource::closure_env$1&lt;bevy_diagnostic::system_information_diagnostics_plugin::SystemInfo&gt;, bevy_ptr::OwningPtr (1,751 samples, 1.01%)</title><rect x="0.2501%" y="2133" width="1.0138%" height="15" fill="rgb(253,106,12)" fg:x="432" fg:w="1751"/><text x="0.5001%" y="2143.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::insert_resource_by_id(bevy_ecs::component::ComponentId, bevy_ptr::OwningPtr&lt;bevy_ptr::Aligned&gt;, bevy_ecs::change_detection::MaybeLocation&lt;ref$ (1,751 samples, 1.01%)</title><rect x="0.2501%" y="2117" width="1.0138%" height="15" fill="rgb(213,46,41)" fg:x="432" fg:w="1751"/><text x="0.5001%" y="2127.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::change_tick (1,751 samples, 1.01%)</title><rect x="0.2501%" y="2101" width="1.0138%" height="15" fill="rgb(215,133,35)" fg:x="432" fg:w="1751"/><text x="0.5001%" y="2111.50"></text></g><g><title>boids.exe`bevy_diagnostic::system_information_diagnostics_plugin::internal::impl$0::default (1,751 samples, 1.01%)</title><rect x="0.2501%" y="2085" width="1.0138%" height="15" fill="rgb(213,28,5)" fg:x="432" fg:w="1751"/><text x="0.5001%" y="2095.50"></text></g><g><title>boids.exe`sysinfo::common::system::System::new_with_specifics (1,750 samples, 1.01%)</title><rect x="0.2507%" y="2069" width="1.0133%" height="15" fill="rgb(215,77,49)" fg:x="433" fg:w="1750"/><text x="0.5007%" y="2079.50"></text></g><g><title>boids.exe`sysinfo::common::system::System::refresh_specifics (1,750 samples, 1.01%)</title><rect x="0.2507%" y="2053" width="1.0133%" height="15" fill="rgb(248,100,22)" fg:x="433" fg:w="1750"/><text x="0.5007%" y="2063.50"></text></g><g><title>boids.exe`sysinfo::common::system::RefreshKind::processes (1,750 samples, 1.01%)</title><rect x="0.2507%" y="2037" width="1.0133%" height="15" fill="rgb(208,67,9)" fg:x="433" fg:w="1750"/><text x="0.5007%" y="2047.50"></text></g><g><title>boids.exe`sysinfo::windows::system::SystemInner::refresh_cpu_specifics (1,750 samples, 1.01%)</title><rect x="0.2507%" y="2021" width="1.0133%" height="15" fill="rgb(219,133,21)" fg:x="433" fg:w="1750"/><text x="0.5007%" y="2031.50"></text></g><g><title>boids.exe`sysinfo::windows::system::SystemInner::initialize_cpu_counters (1,750 samples, 1.01%)</title><rect x="0.2507%" y="2005" width="1.0133%" height="15" fill="rgb(246,46,29)" fg:x="433" fg:w="1750"/><text x="0.5007%" y="2015.50"></text></g><g><title>boids.exe`sysinfo::windows::cpu::CpusWrapper::iter_mut (1,750 samples, 1.01%)</title><rect x="0.2507%" y="1989" width="1.0133%" height="15" fill="rgb(246,185,52)" fg:x="433" fg:w="1750"/><text x="0.5007%" y="1999.50"></text></g><g><title>boids.exe`sysinfo::windows::system::add_english_counter(alloc::string::String, sysinfo::windows::cpu::Query*, enum2$&lt;core::option::Option (1,750 samples, 1.01%)</title><rect x="0.2507%" y="1973" width="1.0133%" height="15" fill="rgb(252,136,11)" fg:x="433" fg:w="1750"/><text x="0.5007%" y="1983.50"></text></g><g><title>boids.exe`sysinfo::windows::cpu::Query::add_english_counter(alloc::string::String*, alloc::vec::Vec (1,750 samples, 1.01%)</title><rect x="0.2507%" y="1957" width="1.0133%" height="15" fill="rgb(219,138,53)" fg:x="433" fg:w="1750"/><text x="0.5007%" y="1967.50"></text></g><g><title>`0x7FF8918A38F2 (1,750 samples, 1.01%)</title><rect x="0.2507%" y="1941" width="1.0133%" height="15" fill="rgb(211,51,23)" fg:x="433" fg:w="1750"/><text x="0.5007%" y="1951.50"></text></g><g><title>`0x7FF8918A383E (1,750 samples, 1.01%)</title><rect x="0.2507%" y="1925" width="1.0133%" height="15" fill="rgb(247,221,28)" fg:x="433" fg:w="1750"/><text x="0.5007%" y="1935.50"></text></g><g><title>boids.exe`bevy_app::app::App::add_boxed_plugin(alloc::boxed::Box&lt;dyn$ (40 samples, 0.02%)</title><rect x="1.2900%" y="2149" width="0.0232%" height="15" fill="rgb(251,222,45)" fg:x="2228" fg:w="40"/><text x="1.5400%" y="2159.50"></text></g><g><title>boids.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe (40 samples, 0.02%)</title><rect x="1.2900%" y="2133" width="0.0232%" height="15" fill="rgb(217,162,53)" fg:x="2228" fg:w="40"/><text x="1.5400%" y="2143.50"></text></g><g><title>boids.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe (40 samples, 0.02%)</title><rect x="1.2900%" y="2117" width="0.0232%" height="15" fill="rgb(229,93,14)" fg:x="2228" fg:w="40"/><text x="1.5400%" y="2127.50"></text></g><g><title>boids.exe`std::panicking::try::do_call (40 samples, 0.02%)</title><rect x="1.2900%" y="2101" width="0.0232%" height="15" fill="rgb(209,67,49)" fg:x="2228" fg:w="40"/><text x="1.5400%" y="2111.50"></text></g><g><title>boids.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe (40 samples, 0.02%)</title><rect x="1.2900%" y="2085" width="0.0232%" height="15" fill="rgb(213,87,29)" fg:x="2228" fg:w="40"/><text x="1.5400%" y="2095.50"></text></g><g><title>boids.exe`core::ops::function::FnOnce::call_once (40 samples, 0.02%)</title><rect x="1.2900%" y="2069" width="0.0232%" height="15" fill="rgb(205,151,52)" fg:x="2228" fg:w="40"/><text x="1.5400%" y="2079.50"></text></g><g><title>boids.exe`bevy_app::app::impl$2::add_boxed_plugin::closure$0 (40 samples, 0.02%)</title><rect x="1.2900%" y="2053" width="0.0232%" height="15" fill="rgb(253,215,39)" fg:x="2228" fg:w="40"/><text x="1.5400%" y="2063.50"></text></g><g><title>boids.exe`bevy_app::app::App::add_plugins(tuple$&lt;bevy_pbr::decal::forward::ForwardDecalPlugin,bevy_render::sync_component::SyncComponentPlugin&lt;bevy_pbr::light::directional_light::DirectionalLight&gt;,bevy_render::sync_component::SyncComponentPlugin&lt;bevy_pbr::light::point_light::PointLight&gt;,bevy_render::sync_component::SyncComponentPlugin&lt;bevy_pbr::light::spot_light::SpotLight&gt;,bevy_render::extract_component::ExtractComponentPlugin&lt;bevy_pbr::light::ambient_light::AmbientLight,tuple$ (53 samples, 0.03%)</title><rect x="1.2900%" y="2197" width="0.0307%" height="15" fill="rgb(221,220,41)" fg:x="2228" fg:w="53"/><text x="1.5400%" y="2207.50"></text></g><g><title>boids.exe`bevy_app::plugin::sealed::impl$16::add_to_app&lt;bevy_app::plugin::sealed::PluginMarker,bevy_pbr::render::mesh::MeshRenderPlugin,bevy_app::plugin::sealed::PluginMarker,bevy_pbr::material::MaterialPlugin&lt;bevy_pbr::pbr_material::StandardMaterial&gt;,bevy_app::plugin::sealed::PluginMarker,bevy_pbr::ssao::ScreenSpaceAmbientOcclusionPlugin,bevy_app::plugin::sealed::PluginMarker,bevy_render::extract_resource::ExtractResourcePlugin&lt;bevy_pbr::light::ambient_light::AmbientLight&gt;,bevy_app::plugin::sealed::PluginMarker,bevy_pbr::render::fog::FogPlugin,bevy_app::plugin::sealed::PluginMarker,bevy_render::extract_resource::ExtractResourcePlugin&lt;bevy_pbr::material::DefaultOpaqueRendererMethod&gt;,bevy_app::plugin::sealed::PluginMarker,bevy_render::extract_component::ExtractComponentPlugin&lt;bevy_pbr::light::ShadowFilteringMethod,tuple$&lt;&gt; &gt;,bevy_app::plugin::sealed::PluginMarker,bevy_pbr::lightmap::LightmapPlugin,bevy_app::plugin::sealed::PluginMarker,bevy_pbr::light_probe::LightProbePlugin,bevy_app::plugin::sealed::PluginMarker,bevy_pbr::PbrProjectionPlugin,bevy_app::plugin::sealed::PluginMarker,bevy_pbr::render::gpu_preprocess::GpuMeshPreprocessPlugin,bevy_app::plugin::sealed::PluginMarker,bevy_pbr::volumetric_fog::VolumetricFogPlugin,bevy_app::plugin::sealed::PluginMarker,bevy_pbr::ssr::ScreenSpaceReflectionsPlugin,bevy_app::plugin::sealed::PluginMarker,bevy_pbr::decal::clustered::ClusteredDecalPlugin&gt;(tuple$&lt;bevy_pbr::render::mesh::MeshRenderPlugin,bevy_pbr::material::MaterialPlugin&lt;bevy_pbr::pbr_material::StandardMaterial&gt;,bevy_pbr::ssao::ScreenSpaceAmbientOcclusionPlugin,bevy_render::extract_resource::ExtractResourcePlugin&lt;bevy_pbr::light::ambient_light::AmbientLight&gt;,bevy_pbr::render::fog::FogPlugin,bevy_render::extract_resource::ExtractResourcePlugin&lt;bevy_pbr::material::DefaultOpaqueRendererMethod&gt;,bevy_render::extract_component::ExtractComponentPlugin&lt;bevy_pbr::light::ShadowFilteringMethod,tuple$ (53 samples, 0.03%)</title><rect x="1.2900%" y="2181" width="0.0307%" height="15" fill="rgb(218,133,21)" fg:x="2228" fg:w="53"/><text x="1.5400%" y="2191.50"></text></g><g><title>boids.exe`bevy_app::plugin::sealed::impl$0::add_to_app (53 samples, 0.03%)</title><rect x="1.2900%" y="2165" width="0.0307%" height="15" fill="rgb(221,193,43)" fg:x="2228" fg:w="53"/><text x="1.5400%" y="2175.50"></text></g><g><title>boids.exe`enum2$&lt;core::result::Result&lt;alloc::string::String,usize&gt; &gt;::unwrap(enum2$&lt;core::result::Result (20 samples, 0.01%)</title><rect x="1.3317%" y="2133" width="0.0116%" height="15" fill="rgb(240,128,52)" fg:x="2300" fg:w="20"/><text x="1.5817%" y="2143.50"></text></g><g><title>boids.exe`naga_oil::compose::parse_imports::substitute_identifiers(ref$&lt;str$&gt;, unsigned long long, indexmap::map::IndexMap&lt;alloc::string::String,alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;,std::hash::random::RandomState&gt;*, indexmap::map::IndexMap (20 samples, 0.01%)</title><rect x="1.3317%" y="2117" width="0.0116%" height="15" fill="rgb(253,114,12)" fg:x="2300" fg:w="20"/><text x="1.5817%" y="2127.50"></text></g><g><title>boids.exe`bevy_pbr::impl$1::build (123 samples, 0.07%)</title><rect x="1.2900%" y="2213" width="0.0712%" height="15" fill="rgb(215,223,47)" fg:x="2228" fg:w="123"/><text x="1.5400%" y="2223.50"></text></g><g><title>boids.exe`bevy_render::render_resource::shader::Shader::from_wgsl(ref$&lt;str$&gt;, enum2$&lt;alloc::borrow::Cow (51 samples, 0.03%)</title><rect x="1.3317%" y="2197" width="0.0295%" height="15" fill="rgb(248,225,23)" fg:x="2300" fg:w="51"/><text x="1.5817%" y="2207.50"></text></g><g><title>boids.exe`bevy_render::render_resource::shader::Shader::preprocess(ref$&lt;str$&gt;, ref$ (51 samples, 0.03%)</title><rect x="1.3317%" y="2181" width="0.0295%" height="15" fill="rgb(250,108,0)" fg:x="2300" fg:w="51"/><text x="1.5817%" y="2191.50"></text></g><g><title>boids.exe`naga_oil::compose::get_preprocessor_data(ref$ (51 samples, 0.03%)</title><rect x="1.3317%" y="2165" width="0.0295%" height="15" fill="rgb(228,208,7)" fg:x="2300" fg:w="51"/><text x="1.5817%" y="2175.50"></text></g><g><title>boids.exe`naga_oil::compose::preprocess::Preprocessor::get_preprocessor_metadata(ref$ (51 samples, 0.03%)</title><rect x="1.3317%" y="2149" width="0.0295%" height="15" fill="rgb(244,45,10)" fg:x="2300" fg:w="51"/><text x="1.5817%" y="2159.50"></text></g><g><title>boids.exe`bevy_render::render_resource::shader::Shader::from_wgsl(ref$&lt;str$&gt;, enum2$&lt;alloc::borrow::Cow (26 samples, 0.02%)</title><rect x="1.3705%" y="1797" width="0.0151%" height="15" fill="rgb(207,125,25)" fg:x="2367" fg:w="26"/><text x="1.6205%" y="1807.50"></text></g><g><title>boids.exe`bevy_render::render_resource::shader::Shader::preprocess(ref$&lt;str$&gt;, ref$ (26 samples, 0.02%)</title><rect x="1.3705%" y="1781" width="0.0151%" height="15" fill="rgb(210,195,18)" fg:x="2367" fg:w="26"/><text x="1.6205%" y="1791.50"></text></g><g><title>boids.exe`naga_oil::compose::get_preprocessor_data(ref$ (26 samples, 0.02%)</title><rect x="1.3705%" y="1765" width="0.0151%" height="15" fill="rgb(249,80,12)" fg:x="2367" fg:w="26"/><text x="1.6205%" y="1775.50"></text></g><g><title>boids.exe`once_cell::sync::impl$12::deref(once_cell::sync::Lazy&lt;naga_oil::compose::preprocess::Preprocessor,naga_oil::compose::preprocess::Preprocessor (*) (23 samples, 0.01%)</title><rect x="1.3722%" y="1749" width="0.0133%" height="15" fill="rgb(221,65,9)" fg:x="2370" fg:w="23"/><text x="1.6222%" y="1759.50"></text></g><g><title>boids.exe`once_cell::sync::Lazy&lt;naga_oil::compose::preprocess::Preprocessor,naga_oil::compose::preprocess::Preprocessor (*)()&gt;::force (23 samples, 0.01%)</title><rect x="1.3722%" y="1733" width="0.0133%" height="15" fill="rgb(235,49,36)" fg:x="2370" fg:w="23"/><text x="1.6222%" y="1743.50"></text></g><g><title>boids.exe`once_cell::sync::OnceCell&lt;naga_oil::compose::preprocess::Preprocessor&gt;::get_or_init(once_cell::sync::impl$11::force::closure_env$0&lt;naga_oil::compose::preprocess::Preprocessor,naga_oil::compose::preprocess::Preprocessor (*) (23 samples, 0.01%)</title><rect x="1.3722%" y="1717" width="0.0133%" height="15" fill="rgb(225,32,20)" fg:x="2370" fg:w="23"/><text x="1.6222%" y="1727.50"></text></g><g><title>boids.exe`once_cell::sync::OnceCell&lt;naga_oil::compose::preprocess::Preprocessor&gt;::get_or_try_init(once_cell::sync::impl$6::get_or_init::closure_env$0&lt;naga_oil::compose::preprocess::Preprocessor,once_cell::sync::impl$11::force::closure_env$0&lt;naga_oil::compose::preprocess::Preprocessor,naga_oil::compose::preprocess::Preprocessor (*) (23 samples, 0.01%)</title><rect x="1.3722%" y="1701" width="0.0133%" height="15" fill="rgb(215,141,46)" fg:x="2370" fg:w="23"/><text x="1.6222%" y="1711.50"></text></g><g><title>boids.exe`once_cell::imp::OnceCell&lt;naga_oil::compose::preprocess::Preprocessor&gt;::initialize&lt;naga_oil::compose::preprocess::Preprocessor,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;naga_oil::compose::preprocess::Preprocessor,once_cell::sync::impl$11::force::closure_env$0&lt;naga_oil::compose::preprocess::Preprocessor,naga_oil::compose::preprocess::Preprocessor (*)()&gt; &gt;,enum2$&lt;once_cell::sync::impl$6::get_or_init::Void&gt; &gt;(once_cell::sync::impl$6::get_or_init::closure_env$0&lt;naga_oil::compose::preprocess::Preprocessor,once_cell::sync::impl$11::force::closure_env$0&lt;naga_oil::compose::preprocess::Preprocessor,naga_oil::compose::preprocess::Preprocessor (*) (23 samples, 0.01%)</title><rect x="1.3722%" y="1685" width="0.0133%" height="15" fill="rgb(250,160,47)" fg:x="2370" fg:w="23"/><text x="1.6222%" y="1695.50"></text></g><g><title>boids.exe`once_cell::imp::initialize_or_wait(core::sync::atomic::AtomicPtr&lt;once_cell::imp::Waiter&gt;*, enum2$&lt;core::option::Option&lt;ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;&gt;,assoc$ (23 samples, 0.01%)</title><rect x="1.3722%" y="1669" width="0.0133%" height="15" fill="rgb(216,222,40)" fg:x="2370" fg:w="23"/><text x="1.6222%" y="1679.50"></text></g><g><title>boids.exe`once_cell::imp::impl$4::initialize::closure$0&lt;naga_oil::compose::preprocess::Preprocessor,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;naga_oil::compose::preprocess::Preprocessor,once_cell::sync::impl$11::force::closure_env$0&lt;naga_oil::compose::preprocess::Preprocessor,naga_oil::compose::preprocess::Preprocessor (*)()&gt; &gt;,enum2$&lt;once_cell::sync::impl$6::get_or_init::Void&gt; &gt;(once_cell::imp::impl$4::initialize::closure_env$0&lt;naga_oil::compose::preprocess::Preprocessor,once_cell::sync::impl$6::get_or_init::closure_env$0&lt;naga_oil::compose::preprocess::Preprocessor,once_cell::sync::impl$11::force::closure_env$0&lt;naga_oil::compose::preprocess::Preprocessor,naga_oil::compose::preprocess::Preprocessor (*)()&gt; &gt;,enum2$ (23 samples, 0.01%)</title><rect x="1.3722%" y="1653" width="0.0133%" height="15" fill="rgb(234,217,39)" fg:x="2370" fg:w="23"/><text x="1.6222%" y="1663.50"></text></g><g><title>boids.exe`naga_oil::compose::preprocess::impl$0::default (23 samples, 0.01%)</title><rect x="1.3722%" y="1637" width="0.0133%" height="15" fill="rgb(207,178,40)" fg:x="2370" fg:w="23"/><text x="1.6222%" y="1647.50"></text></g><g><title>boids.exe`enum2$&lt;core::result::Result&lt;regex::regex::string::Regex,enum2$&lt;regex::error::Error&gt; &gt; &gt;::unwrap(enum2$&lt;core::result::Result&lt;regex::regex::string::Regex,enum2$ (23 samples, 0.01%)</title><rect x="1.3722%" y="1621" width="0.0133%" height="15" fill="rgb(221,136,13)" fg:x="2370" fg:w="23"/><text x="1.6222%" y="1631.50"></text></g><g><title>boids.exe`regex::regex::string::Regex::new(ref$ (23 samples, 0.01%)</title><rect x="1.3722%" y="1605" width="0.0133%" height="15" fill="rgb(249,199,10)" fg:x="2370" fg:w="23"/><text x="1.6222%" y="1615.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place (23 samples, 0.01%)</title><rect x="1.3722%" y="1589" width="0.0133%" height="15" fill="rgb(249,222,13)" fg:x="2370" fg:w="23"/><text x="1.6222%" y="1599.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place (23 samples, 0.01%)</title><rect x="1.3722%" y="1573" width="0.0133%" height="15" fill="rgb(244,185,38)" fg:x="2370" fg:w="23"/><text x="1.6222%" y="1583.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(alloc::vec::Vec (23 samples, 0.01%)</title><rect x="1.3722%" y="1557" width="0.0133%" height="15" fill="rgb(236,202,9)" fg:x="2370" fg:w="23"/><text x="1.6222%" y="1567.50"></text></g><g><title>boids.exe`alloc::vec::impl$25::drop(alloc::vec::Vec (23 samples, 0.01%)</title><rect x="1.3722%" y="1541" width="0.0133%" height="15" fill="rgb(250,229,37)" fg:x="2370" fg:w="23"/><text x="1.6222%" y="1551.50"></text></g><g><title>boids.exe`regex::builders::Builder::build_one_string (23 samples, 0.01%)</title><rect x="1.3722%" y="1525" width="0.0133%" height="15" fill="rgb(206,174,23)" fg:x="2370" fg:w="23"/><text x="1.6222%" y="1535.50"></text></g><g><title>boids.exe`regex_automata::meta::regex::Builder::build(ref$ (23 samples, 0.01%)</title><rect x="1.3722%" y="1509" width="0.0133%" height="15" fill="rgb(211,33,43)" fg:x="2370" fg:w="23"/><text x="1.6222%" y="1519.50"></text></g><g><title>boids.exe`regex_automata::meta::regex::Builder::build_many(ref$&lt;slice2$&lt;ref$ (23 samples, 0.01%)</title><rect x="1.3722%" y="1493" width="0.0133%" height="15" fill="rgb(245,58,50)" fg:x="2370" fg:w="23"/><text x="1.6222%" y="1503.50"></text></g><g><title>boids.exe`regex_automata::meta::regex::Builder::build_many_from_hir(ref$&lt;slice2$ (20 samples, 0.01%)</title><rect x="1.3740%" y="1477" width="0.0116%" height="15" fill="rgb(244,68,36)" fg:x="2373" fg:w="20"/><text x="1.6240%" y="1487.50"></text></g><g><title>boids.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;alloc::sync::Arc&lt;dyn$ (20 samples, 0.01%)</title><rect x="1.3740%" y="1461" width="0.0116%" height="15" fill="rgb(232,229,15)" fg:x="2373" fg:w="20"/><text x="1.6240%" y="1471.50"></text></g><g><title>boids.exe`regex_automata::meta::strategy::new(regex_automata::meta::regex::RegexInfo*, ref$&lt;slice2$&lt;ref$ (20 samples, 0.01%)</title><rect x="1.3740%" y="1445" width="0.0116%" height="15" fill="rgb(254,30,23)" fg:x="2373" fg:w="20"/><text x="1.6240%" y="1455.50"></text></g><g><title>boids.exe`regex_automata::meta::strategy::Core::new(regex_automata::meta::regex::RegexInfo, enum2$&lt;core::option::Option&lt;regex_automata::util::prefilter::Prefilter&gt; &gt;, ref$&lt;slice2$&lt;ref$ (20 samples, 0.01%)</title><rect x="1.3740%" y="1429" width="0.0116%" height="15" fill="rgb(235,160,14)" fg:x="2373" fg:w="20"/><text x="1.6240%" y="1439.50"></text></g><g><title>boids.exe`bevy_app::app::App::init_resource (41 samples, 0.02%)</title><rect x="1.3624%" y="2197" width="0.0237%" height="15" fill="rgb(212,155,44)" fg:x="2353" fg:w="41"/><text x="1.6124%" y="2207.50"></text></g><g><title>boids.exe`bevy_app::sub_app::SubApp::init_resource (41 samples, 0.02%)</title><rect x="1.3624%" y="2181" width="0.0237%" height="15" fill="rgb(226,2,50)" fg:x="2353" fg:w="41"/><text x="1.6124%" y="2191.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::init_resource (41 samples, 0.02%)</title><rect x="1.3624%" y="2165" width="0.0237%" height="15" fill="rgb(234,177,6)" fg:x="2353" fg:w="41"/><text x="1.6124%" y="2175.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::components_registrator (41 samples, 0.02%)</title><rect x="1.3624%" y="2149" width="0.0237%" height="15" fill="rgb(217,24,9)" fg:x="2353" fg:w="41"/><text x="1.6124%" y="2159.50"></text></g><g><title>boids.exe`bevy_app::app::App::add_plugins&lt;tuple$&lt;bevy_app::plugin::sealed::PluginsTupleMarker,bevy_app::plugin::sealed::PluginMarker,bevy_app::plugin::sealed::PluginMarker,bevy_app::plugin::sealed::PluginMarker,bevy_app::plugin::sealed::PluginMarker,bevy_app::plugin::sealed::PluginMarker,bevy_app::plugin::sealed::PluginMarker,bevy_app::plugin::sealed::PluginMarker,bevy_app::plugin::sealed::PluginMarker,bevy_app::plugin::sealed::PluginMarker,bevy_app::plugin::sealed::PluginMarker,bevy_app::plugin::sealed::PluginMarker&gt;,tuple$&lt;bevy_render::view::window::WindowRenderPlugin,bevy_render::camera::CameraPlugin,bevy_render::view::ViewPlugin,bevy_render::mesh::MeshPlugin,bevy_render::globals::GlobalsPlugin,bevy_render::mesh::MorphPlugin,bevy_render::batching::gpu_preprocessing::BatchingPlugin,bevy_render::sync_world::SyncWorldPlugin,bevy_render::storage::StoragePlugin,bevy_render::gpu_readback::GpuReadbackPlugin,bevy_render::experimental::occlusion_culling::OcclusionCullingPlugin&gt; &gt;(tuple$ (41 samples, 0.02%)</title><rect x="1.3624%" y="2133" width="0.0237%" height="15" fill="rgb(220,13,46)" fg:x="2353" fg:w="41"/><text x="1.6124%" y="2143.50"></text></g><g><title>boids.exe`bevy_app::plugin::sealed::impl$13::add_to_app(tuple$ (41 samples, 0.02%)</title><rect x="1.3624%" y="2117" width="0.0237%" height="15" fill="rgb(239,221,27)" fg:x="2353" fg:w="41"/><text x="1.6124%" y="2127.50"></text></g><g><title>boids.exe`bevy_app::plugin::sealed::impl$0::add_to_app (41 samples, 0.02%)</title><rect x="1.3624%" y="2101" width="0.0237%" height="15" fill="rgb(222,198,25)" fg:x="2353" fg:w="41"/><text x="1.6124%" y="2111.50"></text></g><g><title>boids.exe`bevy_app::app::App::add_boxed_plugin(alloc::boxed::Box&lt;dyn$ (41 samples, 0.02%)</title><rect x="1.3624%" y="2085" width="0.0237%" height="15" fill="rgb(211,99,13)" fg:x="2353" fg:w="41"/><text x="1.6124%" y="2095.50"></text></g><g><title>boids.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe (41 samples, 0.02%)</title><rect x="1.3624%" y="2069" width="0.0237%" height="15" fill="rgb(232,111,31)" fg:x="2353" fg:w="41"/><text x="1.6124%" y="2079.50"></text></g><g><title>boids.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe (41 samples, 0.02%)</title><rect x="1.3624%" y="2053" width="0.0237%" height="15" fill="rgb(245,82,37)" fg:x="2353" fg:w="41"/><text x="1.6124%" y="2063.50"></text></g><g><title>boids.exe`std::panicking::try::do_call (41 samples, 0.02%)</title><rect x="1.3624%" y="2037" width="0.0237%" height="15" fill="rgb(227,149,46)" fg:x="2353" fg:w="41"/><text x="1.6124%" y="2047.50"></text></g><g><title>boids.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe (41 samples, 0.02%)</title><rect x="1.3624%" y="2021" width="0.0237%" height="15" fill="rgb(218,36,50)" fg:x="2353" fg:w="41"/><text x="1.6124%" y="2031.50"></text></g><g><title>boids.exe`core::ops::function::FnOnce::call_once (41 samples, 0.02%)</title><rect x="1.3624%" y="2005" width="0.0237%" height="15" fill="rgb(226,80,48)" fg:x="2353" fg:w="41"/><text x="1.6124%" y="2015.50"></text></g><g><title>boids.exe`bevy_app::app::impl$2::add_boxed_plugin::closure$0 (41 samples, 0.02%)</title><rect x="1.3624%" y="1989" width="0.0237%" height="15" fill="rgb(238,224,15)" fg:x="2353" fg:w="41"/><text x="1.6124%" y="1999.50"></text></g><g><title>boids.exe`bevy_render::view::window::impl$0::build (28 samples, 0.02%)</title><rect x="1.3699%" y="1973" width="0.0162%" height="15" fill="rgb(241,136,10)" fg:x="2366" fg:w="28"/><text x="1.6199%" y="1983.50"></text></g><g><title>boids.exe`bevy_app::app::App::add_plugins (28 samples, 0.02%)</title><rect x="1.3699%" y="1957" width="0.0162%" height="15" fill="rgb(208,32,45)" fg:x="2366" fg:w="28"/><text x="1.6199%" y="1967.50"></text></g><g><title>boids.exe`bevy_app::plugin::sealed::impl$0::add_to_app (28 samples, 0.02%)</title><rect x="1.3699%" y="1941" width="0.0162%" height="15" fill="rgb(207,135,9)" fg:x="2366" fg:w="28"/><text x="1.6199%" y="1951.50"></text></g><g><title>boids.exe`bevy_app::app::App::add_boxed_plugin(alloc::boxed::Box&lt;dyn$ (28 samples, 0.02%)</title><rect x="1.3699%" y="1925" width="0.0162%" height="15" fill="rgb(206,86,44)" fg:x="2366" fg:w="28"/><text x="1.6199%" y="1935.50"></text></g><g><title>boids.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe (28 samples, 0.02%)</title><rect x="1.3699%" y="1909" width="0.0162%" height="15" fill="rgb(245,177,15)" fg:x="2366" fg:w="28"/><text x="1.6199%" y="1919.50"></text></g><g><title>boids.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe (28 samples, 0.02%)</title><rect x="1.3699%" y="1893" width="0.0162%" height="15" fill="rgb(206,64,50)" fg:x="2366" fg:w="28"/><text x="1.6199%" y="1903.50"></text></g><g><title>boids.exe`std::panicking::try::do_call (28 samples, 0.02%)</title><rect x="1.3699%" y="1877" width="0.0162%" height="15" fill="rgb(234,36,40)" fg:x="2366" fg:w="28"/><text x="1.6199%" y="1887.50"></text></g><g><title>boids.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe (28 samples, 0.02%)</title><rect x="1.3699%" y="1861" width="0.0162%" height="15" fill="rgb(213,64,8)" fg:x="2366" fg:w="28"/><text x="1.6199%" y="1871.50"></text></g><g><title>boids.exe`core::ops::function::FnOnce::call_once (28 samples, 0.02%)</title><rect x="1.3699%" y="1845" width="0.0162%" height="15" fill="rgb(210,75,36)" fg:x="2366" fg:w="28"/><text x="1.6199%" y="1855.50"></text></g><g><title>boids.exe`bevy_app::app::impl$2::add_boxed_plugin::closure$0 (28 samples, 0.02%)</title><rect x="1.3699%" y="1829" width="0.0162%" height="15" fill="rgb(229,88,21)" fg:x="2366" fg:w="28"/><text x="1.6199%" y="1839.50"></text></g><g><title>boids.exe`bevy_render::view::window::screenshot::impl$1::build (28 samples, 0.02%)</title><rect x="1.3699%" y="1813" width="0.0162%" height="15" fill="rgb(252,204,47)" fg:x="2366" fg:w="28"/><text x="1.6199%" y="1823.50"></text></g><g><title>`0x7FF865F6959A (24 samples, 0.01%)</title><rect x="1.3896%" y="1829" width="0.0139%" height="15" fill="rgb(208,77,27)" fg:x="2400" fg:w="24"/><text x="1.6396%" y="1839.50"></text></g><g><title>boids.exe`ash::instance::Instance::create_device(ash::vk::definitions::PhysicalDevice, ash::vk::definitions::DeviceCreateInfo*, enum2$&lt;core::option::Option&lt;ref$ (41 samples, 0.02%)</title><rect x="1.3890%" y="1909" width="0.0237%" height="15" fill="rgb(221,76,26)" fg:x="2399" fg:w="41"/><text x="1.6390%" y="1919.50"></text></g><g><title>boids.exe`ash::vk::enums::Result::assume_init_on_success(ash::vk::enums::Result, core::mem::maybe_uninit::MaybeUninit (41 samples, 0.02%)</title><rect x="1.3890%" y="1893" width="0.0237%" height="15" fill="rgb(225,139,18)" fg:x="2399" fg:w="41"/><text x="1.6390%" y="1903.50"></text></g><g><title>boids.exe`ash::vk::enums::Result::result (41 samples, 0.02%)</title><rect x="1.3890%" y="1877" width="0.0237%" height="15" fill="rgb(230,137,11)" fg:x="2399" fg:w="41"/><text x="1.6390%" y="1887.50"></text></g><g><title>boids.exe`ash::vk::enums::Result::result_with_success(ash::vk::enums::Result, tuple$ (41 samples, 0.02%)</title><rect x="1.3890%" y="1861" width="0.0237%" height="15" fill="rgb(212,28,1)" fg:x="2399" fg:w="41"/><text x="1.6390%" y="1871.50"></text></g><g><title>`0x7FF865F81725 (41 samples, 0.02%)</title><rect x="1.3890%" y="1845" width="0.0237%" height="15" fill="rgb(248,164,17)" fg:x="2399" fg:w="41"/><text x="1.6390%" y="1855.50"></text></g><g><title>boids.exe`enum2$&lt;core::result::Result&lt;wgpu_hal::dynamic::adapter::DynOpenDevice,wgpu_hal::DeviceError&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;wgpu_hal::dynamic::adapter::DynOpenDevice,wgpu_hal::DeviceError&gt; &gt;, enum2$&lt;wgpu_core::device::DeviceError&gt; (*) (42 samples, 0.02%)</title><rect x="1.3890%" y="1973" width="0.0243%" height="15" fill="rgb(222,171,42)" fg:x="2399" fg:w="42"/><text x="1.6390%" y="1983.50"></text></g><g><title>boids.exe`wgpu_hal::dynamic::adapter::impl$1::open&lt;wgpu_hal::vulkan::Adapter&gt;(wgpu_hal::vulkan::Adapter*, wgpu_types::Features, wgpu_types::Limits*, enum2$ (42 samples, 0.02%)</title><rect x="1.3890%" y="1957" width="0.0243%" height="15" fill="rgb(243,84,45)" fg:x="2399" fg:w="42"/><text x="1.6390%" y="1967.50"></text></g><g><title>boids.exe`enum2$&lt;core::result::Result&lt;wgpu_hal::OpenDevice&lt;wgpu_hal::vulkan::Api&gt;,wgpu_hal::DeviceError&gt; &gt;::map(enum2$&lt;core::result::Result&lt;wgpu_hal::OpenDevice&lt;wgpu_hal::vulkan::Api&gt;,wgpu_hal::DeviceError&gt; &gt;, wgpu_hal::dynamic::adapter::impl$1::open::closure_env$0 (42 samples, 0.02%)</title><rect x="1.3890%" y="1941" width="0.0243%" height="15" fill="rgb(252,49,23)" fg:x="2399" fg:w="42"/><text x="1.6390%" y="1951.50"></text></g><g><title>boids.exe`wgpu_hal::vulkan::adapter::impl$5::open(wgpu_hal::vulkan::Adapter*, wgpu_types::Features, wgpu_types::Limits*, enum2$ (42 samples, 0.02%)</title><rect x="1.3890%" y="1925" width="0.0243%" height="15" fill="rgb(215,19,7)" fg:x="2399" fg:w="42"/><text x="1.6390%" y="1935.50"></text></g><g><title>boids.exe`wgpu::api::adapter::Adapter::request_device(wgpu_types::DeviceDescriptor&lt;enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;*, enum2$&lt;core::option::Option&lt;ref$ (52 samples, 0.03%)</title><rect x="1.3890%" y="2085" width="0.0301%" height="15" fill="rgb(238,81,41)" fg:x="2399" fg:w="52"/><text x="1.6390%" y="2095.50"></text></g><g><title>boids.exe`wgpu::backend::wgpu_core::impl$11::request_device(wgpu::backend::wgpu_core::CoreAdapter*, wgpu_types::DeviceDescriptor&lt;enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;*, enum2$&lt;core::option::Option&lt;ref$ (52 samples, 0.03%)</title><rect x="1.3890%" y="2069" width="0.0301%" height="15" fill="rgb(210,199,37)" fg:x="2399" fg:w="52"/><text x="1.6390%" y="2079.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(wgpu_types::DeviceDescriptor&lt;enum2$&lt;core::option::Option&lt;enum2$&lt;alloc::borrow::Cow (52 samples, 0.03%)</title><rect x="1.3890%" y="2053" width="0.0301%" height="15" fill="rgb(244,192,49)" fg:x="2399" fg:w="52"/><text x="1.6390%" y="2063.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(enum2$&lt;core::option::Option&lt;enum2$&lt;alloc::borrow::Cow (52 samples, 0.03%)</title><rect x="1.3890%" y="2037" width="0.0301%" height="15" fill="rgb(226,211,11)" fg:x="2399" fg:w="52"/><text x="1.6390%" y="2047.50"></text></g><g><title>boids.exe`wgpu_core::global::Global::adapter_request_device(wgpu_core::id::Id&lt;enum2$&lt;wgpu_core::id::markers::Adapter&gt; &gt;, wgpu_types::DeviceDescriptor&lt;enum2$&lt;core::option::Option&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt; &gt; &gt; &gt;*, enum2$&lt;core::option::Option&lt;ref$&lt;std::path::Path&gt; &gt; &gt;, enum2$&lt;core::option::Option&lt;wgpu_core::id::Id&lt;enum2$&lt;wgpu_core::id::markers::Device&gt; &gt; &gt; &gt;, enum2$&lt;core::option::Option&lt;wgpu_core::id::Id&lt;enum2$ (52 samples, 0.03%)</title><rect x="1.3890%" y="2021" width="0.0301%" height="15" fill="rgb(236,162,54)" fg:x="2399" fg:w="52"/><text x="1.6390%" y="2031.50"></text></g><g><title>boids.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;tuple$&lt;alloc::sync::Arc&lt;wgpu_core::device::resource::Device,alloc::alloc::Global&gt;,alloc::sync::Arc&lt;wgpu_core::device::queue::Queue,alloc::alloc::Global&gt; &gt;,enum2$ (52 samples, 0.03%)</title><rect x="1.3890%" y="2005" width="0.0301%" height="15" fill="rgb(220,229,9)" fg:x="2399" fg:w="52"/><text x="1.6390%" y="2015.50"></text></g><g><title>boids.exe`wgpu_core::instance::Adapter::create_device_and_queue(alloc::sync::Arc&lt;wgpu_core::instance::Adapter,alloc::alloc::Global&gt;*, wgpu_types::DeviceDescriptor&lt;enum2$&lt;core::option::Option&lt;enum2$&lt;alloc::borrow::Cow&lt;str$&gt; &gt; &gt; &gt; &gt;*, wgpu_types::instance::InstanceFlags, enum2$&lt;core::option::Option&lt;ref$ (52 samples, 0.03%)</title><rect x="1.3890%" y="1989" width="0.0301%" height="15" fill="rgb(250,87,22)" fg:x="2399" fg:w="52"/><text x="1.6390%" y="1999.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(alloc::vec::into_iter::IntoIter (27 samples, 0.02%)</title><rect x="1.4191%" y="1989" width="0.0156%" height="15" fill="rgb(239,43,17)" fg:x="2451" fg:w="27"/><text x="1.6691%" y="1999.50"></text></g><g><title>boids.exe`alloc::vec::into_iter::impl$15::drop(alloc::vec::into_iter::IntoIter (27 samples, 0.02%)</title><rect x="1.4191%" y="1973" width="0.0156%" height="15" fill="rgb(231,177,25)" fg:x="2451" fg:w="27"/><text x="1.6691%" y="1983.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(alloc::vec::into_iter::impl$15::drop::DropGuard (27 samples, 0.02%)</title><rect x="1.4191%" y="1957" width="0.0156%" height="15" fill="rgb(219,179,1)" fg:x="2451" fg:w="27"/><text x="1.6691%" y="1967.50"></text></g><g><title>boids.exe`alloc::vec::into_iter::impl$15::drop::impl$0::drop(alloc::vec::into_iter::impl$15::drop::DropGuard (27 samples, 0.02%)</title><rect x="1.4191%" y="1941" width="0.0156%" height="15" fill="rgb(238,219,53)" fg:x="2451" fg:w="27"/><text x="1.6691%" y="1951.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (27 samples, 0.02%)</title><rect x="1.4191%" y="1925" width="0.0156%" height="15" fill="rgb(232,167,36)" fg:x="2451" fg:w="27"/><text x="1.6691%" y="1935.50"></text></g><g><title>boids.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (27 samples, 0.02%)</title><rect x="1.4191%" y="1909" width="0.0156%" height="15" fill="rgb(244,19,51)" fg:x="2451" fg:w="27"/><text x="1.6691%" y="1919.50"></text></g><g><title>boids.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (27 samples, 0.02%)</title><rect x="1.4191%" y="1893" width="0.0156%" height="15" fill="rgb(224,6,22)" fg:x="2451" fg:w="27"/><text x="1.6691%" y="1903.50"></text></g><g><title>boids.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::current_memory (27 samples, 0.02%)</title><rect x="1.4191%" y="1877" width="0.0156%" height="15" fill="rgb(224,145,5)" fg:x="2451" fg:w="27"/><text x="1.6691%" y="1887.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place&lt;slice2$&lt;wgpu_hal::dynamic::instance::DynExposedAdapter&gt; &gt;(ptr_mut$&lt;slice2$ (27 samples, 0.02%)</title><rect x="1.4191%" y="1861" width="0.0156%" height="15" fill="rgb(234,130,49)" fg:x="2451" fg:w="27"/><text x="1.6691%" y="1871.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place (27 samples, 0.02%)</title><rect x="1.4191%" y="1845" width="0.0156%" height="15" fill="rgb(254,6,2)" fg:x="2451" fg:w="27"/><text x="1.6691%" y="1855.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(alloc::boxed::Box&lt;dyn$ (27 samples, 0.02%)</title><rect x="1.4191%" y="1829" width="0.0156%" height="15" fill="rgb(208,96,46)" fg:x="2451" fg:w="27"/><text x="1.6691%" y="1839.50"></text></g><g><title>boids.exe`alloc::boxed::impl$8::drop(alloc::boxed::Box&lt;dyn$ (27 samples, 0.02%)</title><rect x="1.4191%" y="1813" width="0.0156%" height="15" fill="rgb(239,3,39)" fg:x="2451" fg:w="27"/><text x="1.6691%" y="1823.50"></text></g><g><title>boids.exe`core::alloc::layout::Layout::for_value_raw(ptr_const$&lt;dyn$ (27 samples, 0.02%)</title><rect x="1.4191%" y="1797" width="0.0156%" height="15" fill="rgb(233,210,1)" fg:x="2451" fg:w="27"/><text x="1.6691%" y="1807.50"></text></g><g><title>boids.exe`core::mem::size_of_val_raw(ptr_const$&lt;dyn$ (27 samples, 0.02%)</title><rect x="1.4191%" y="1781" width="0.0156%" height="15" fill="rgb(244,137,37)" fg:x="2451" fg:w="27"/><text x="1.6691%" y="1791.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place&lt;wgpu_hal::dx12::Adapter&gt; (27 samples, 0.02%)</title><rect x="1.4191%" y="1765" width="0.0156%" height="15" fill="rgb(240,136,2)" fg:x="2451" fg:w="27"/><text x="1.6691%" y="1775.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(alloc::sync::Arc (27 samples, 0.02%)</title><rect x="1.4191%" y="1749" width="0.0156%" height="15" fill="rgb(239,18,37)" fg:x="2451" fg:w="27"/><text x="1.6691%" y="1759.50"></text></g><g><title>boids.exe`alloc::sync::impl$38::drop(alloc::sync::Arc (27 samples, 0.02%)</title><rect x="1.4191%" y="1733" width="0.0156%" height="15" fill="rgb(218,185,22)" fg:x="2451" fg:w="27"/><text x="1.6691%" y="1743.50"></text></g><g><title>boids.exe`alloc::sync::Arc&lt;wgpu_hal::dx12::D3D12Lib,alloc::alloc::Global&gt;::inner (27 samples, 0.02%)</title><rect x="1.4191%" y="1717" width="0.0156%" height="15" fill="rgb(225,218,4)" fg:x="2451" fg:w="27"/><text x="1.6691%" y="1727.50"></text></g><g><title>boids.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;wgpu_hal::dx12::D3D12Lib&gt; &gt;::as_ref (27 samples, 0.02%)</title><rect x="1.4191%" y="1701" width="0.0156%" height="15" fill="rgb(230,182,32)" fg:x="2451" fg:w="27"/><text x="1.6691%" y="1711.50"></text></g><g><title>`0x7FF853BC93C0 (27 samples, 0.02%)</title><rect x="1.4191%" y="1685" width="0.0156%" height="15" fill="rgb(242,56,43)" fg:x="2451" fg:w="27"/><text x="1.6691%" y="1695.50"></text></g><g><title>`0x7FF885CC5ADD (27 samples, 0.02%)</title><rect x="1.4191%" y="1669" width="0.0156%" height="15" fill="rgb(233,99,24)" fg:x="2451" fg:w="27"/><text x="1.6691%" y="1679.50"></text></g><g><title>boids.exe`wgpu_hal::dx12::D3D12Lib::create_device(enum2$ (18 samples, 0.01%)</title><rect x="1.4348%" y="1765" width="0.0104%" height="15" fill="rgb(234,209,42)" fg:x="2478" fg:w="18"/><text x="1.6848%" y="1775.50"></text></g><g><title>boids.exe`windows_result::hresult::HRESULT::ok (18 samples, 0.01%)</title><rect x="1.4348%" y="1749" width="0.0104%" height="15" fill="rgb(227,7,12)" fg:x="2478" fg:w="18"/><text x="1.6848%" y="1759.50"></text></g><g><title>boids.exe`windows_result::hresult::HRESULT::is_ok (18 samples, 0.01%)</title><rect x="1.4348%" y="1733" width="0.0104%" height="15" fill="rgb(245,203,43)" fg:x="2478" fg:w="18"/><text x="1.6848%" y="1743.50"></text></g><g><title>`0x7FF885CC63CE (18 samples, 0.01%)</title><rect x="1.4348%" y="1717" width="0.0104%" height="15" fill="rgb(238,205,33)" fg:x="2478" fg:w="18"/><text x="1.6848%" y="1727.50"></text></g><g><title>`0x7FF885CC6C6B (18 samples, 0.01%)</title><rect x="1.4348%" y="1701" width="0.0104%" height="15" fill="rgb(231,56,7)" fg:x="2478" fg:w="18"/><text x="1.6848%" y="1711.50"></text></g><g><title>`0x7FF853BD1B16 (18 samples, 0.01%)</title><rect x="1.4348%" y="1685" width="0.0104%" height="15" fill="rgb(244,186,29)" fg:x="2478" fg:w="18"/><text x="1.6848%" y="1695.50"></text></g><g><title>boids.exe`alloc::vec::spec_extend::impl$0::spec_extend(alloc::vec::Vec&lt;wgpu_hal::ExposedAdapter&lt;wgpu_hal::dx12::Api&gt;,alloc::alloc::Global&gt;*, core::iter::adapters::filter_map::FilterMap&lt;alloc::vec::into_iter::IntoIter&lt;enum2$ (19 samples, 0.01%)</title><rect x="1.4348%" y="1877" width="0.0110%" height="15" fill="rgb(234,111,31)" fg:x="2478" fg:w="19"/><text x="1.6848%" y="1887.50"></text></g><g><title>boids.exe`alloc::vec::Vec&lt;wgpu_hal::ExposedAdapter&lt;wgpu_hal::dx12::Api&gt;,alloc::alloc::Global&gt;::extend_desugared(core::iter::adapters::filter_map::FilterMap&lt;alloc::vec::into_iter::IntoIter&lt;enum2$ (19 samples, 0.01%)</title><rect x="1.4348%" y="1861" width="0.0110%" height="15" fill="rgb(241,149,10)" fg:x="2478" fg:w="19"/><text x="1.6848%" y="1871.50"></text></g><g><title>boids.exe`core::iter::adapters::filter_map::impl$2::next(core::iter::adapters::filter_map::FilterMap&lt;alloc::vec::into_iter::IntoIter&lt;enum2$ (19 samples, 0.01%)</title><rect x="1.4348%" y="1845" width="0.0110%" height="15" fill="rgb(249,206,44)" fg:x="2478" fg:w="19"/><text x="1.6848%" y="1855.50"></text></g><g><title>boids.exe`core::iter::traits::iterator::Iterator::find_map(alloc::vec::into_iter::IntoIter&lt;enum2$ (19 samples, 0.01%)</title><rect x="1.4348%" y="1829" width="0.0110%" height="15" fill="rgb(251,153,30)" fg:x="2478" fg:w="19"/><text x="1.6848%" y="1839.50"></text></g><g><title>boids.exe`alloc::vec::into_iter::impl$5::try_fold(alloc::vec::into_iter::IntoIter&lt;enum2$&lt;wgpu_hal::auxil::dxgi::factory::DxgiAdapter&gt;,alloc::alloc::Global&gt;*, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::find_map::check::closure_env$0&lt;enum2$&lt;wgpu_hal::auxil::dxgi::factory::DxgiAdapter&gt;,wgpu_hal::ExposedAdapter&lt;wgpu_hal::dx12::Api&gt;,ref_mut$ (19 samples, 0.01%)</title><rect x="1.4348%" y="1813" width="0.0110%" height="15" fill="rgb(239,152,38)" fg:x="2478" fg:w="19"/><text x="1.6848%" y="1823.50"></text></g><g><title>boids.exe`core::iter::traits::iterator::Iterator::find_map::check::closure$0(core::iter::traits::iterator::Iterator::find_map::check::closure_env$0&lt;enum2$&lt;wgpu_hal::auxil::dxgi::factory::DxgiAdapter&gt;,wgpu_hal::ExposedAdapter&lt;wgpu_hal::dx12::Api&gt;,ref_mut$&lt;wgpu_hal::dx12::instance::impl$0::enumerate_adapters::closure_env$0&gt; &gt;*, tuple$&lt;&gt;, enum2$ (19 samples, 0.01%)</title><rect x="1.4348%" y="1797" width="0.0110%" height="15" fill="rgb(249,139,47)" fg:x="2478" fg:w="19"/><text x="1.6848%" y="1807.50"></text></g><g><title>boids.exe`wgpu_hal::dx12::Adapter::expose(enum2$&lt;wgpu_hal::auxil::dxgi::factory::DxgiAdapter&gt;, alloc::sync::Arc&lt;wgpu_hal::dx12::D3D12Lib,alloc::alloc::Global&gt;*, wgpu_types::instance::InstanceFlags, enum2$&lt;core::option::Option&lt;alloc::sync::Arc (19 samples, 0.01%)</title><rect x="1.4348%" y="1781" width="0.0110%" height="15" fill="rgb(244,64,35)" fg:x="2478" fg:w="19"/><text x="1.6848%" y="1791.50"></text></g><g><title>`0x7FF853BC6D89 (37 samples, 0.02%)</title><rect x="1.4527%" y="1669" width="0.0214%" height="15" fill="rgb(216,46,15)" fg:x="2509" fg:w="37"/><text x="1.7027%" y="1679.50"></text></g><g><title>`0x7FF853C4A9B6 (19 samples, 0.01%)</title><rect x="1.4631%" y="1653" width="0.0110%" height="15" fill="rgb(250,74,19)" fg:x="2527" fg:w="19"/><text x="1.7131%" y="1663.50"></text></g><g><title>`0x7FF853C49260 (19 samples, 0.01%)</title><rect x="1.4631%" y="1637" width="0.0110%" height="15" fill="rgb(249,42,33)" fg:x="2527" fg:w="19"/><text x="1.7131%" y="1647.50"></text></g><g><title>`0x7FFFD8A47998 (19 samples, 0.01%)</title><rect x="1.4631%" y="1621" width="0.0110%" height="15" fill="rgb(242,149,17)" fg:x="2527" fg:w="19"/><text x="1.7131%" y="1631.50"></text></g><g><title>`0x7FF853BD05CE (38 samples, 0.02%)</title><rect x="1.4527%" y="1701" width="0.0220%" height="15" fill="rgb(244,29,21)" fg:x="2509" fg:w="38"/><text x="1.7027%" y="1711.50"></text></g><g><title>`0x7FF853BC9B61 (38 samples, 0.02%)</title><rect x="1.4527%" y="1685" width="0.0220%" height="15" fill="rgb(220,130,37)" fg:x="2509" fg:w="38"/><text x="1.7027%" y="1695.50"></text></g><g><title>`0x7FFFD8C0AA48 (18 samples, 0.01%)</title><rect x="1.4759%" y="1573" width="0.0104%" height="15" fill="rgb(211,67,2)" fg:x="2549" fg:w="18"/><text x="1.7259%" y="1583.50"></text></g><g><title>`0x7FFFD8BB40C3 (18 samples, 0.01%)</title><rect x="1.4759%" y="1557" width="0.0104%" height="15" fill="rgb(235,68,52)" fg:x="2549" fg:w="18"/><text x="1.7259%" y="1567.50"></text></g><g><title>`0x7FFFD8BDD2C7 (18 samples, 0.01%)</title><rect x="1.4759%" y="1541" width="0.0104%" height="15" fill="rgb(246,142,3)" fg:x="2549" fg:w="18"/><text x="1.7259%" y="1551.50"></text></g><g><title>`0x7FFFD8A7958A (21 samples, 0.01%)</title><rect x="1.4753%" y="1589" width="0.0122%" height="15" fill="rgb(241,25,7)" fg:x="2548" fg:w="21"/><text x="1.7253%" y="1599.50"></text></g><g><title>`0x7FFFD8A3A14A (37 samples, 0.02%)</title><rect x="1.4921%" y="1541" width="0.0214%" height="15" fill="rgb(242,119,39)" fg:x="2577" fg:w="37"/><text x="1.7421%" y="1551.50"></text></g><g><title>`0x7FFFD8A3B2E3 (35 samples, 0.02%)</title><rect x="1.4933%" y="1525" width="0.0203%" height="15" fill="rgb(241,98,45)" fg:x="2579" fg:w="35"/><text x="1.7433%" y="1535.50"></text></g><g><title>`0x7FFFD9F9622B (30 samples, 0.02%)</title><rect x="1.4961%" y="1509" width="0.0174%" height="15" fill="rgb(254,28,30)" fg:x="2584" fg:w="30"/><text x="1.7461%" y="1519.50"></text></g><g><title>`0x7FFFD9F983F7 (25 samples, 0.01%)</title><rect x="1.4990%" y="1493" width="0.0145%" height="15" fill="rgb(241,142,54)" fg:x="2589" fg:w="25"/><text x="1.7490%" y="1503.50"></text></g><g><title>`0x7FFFD8A79A6E (53 samples, 0.03%)</title><rect x="1.4875%" y="1589" width="0.0307%" height="15" fill="rgb(222,85,15)" fg:x="2569" fg:w="53"/><text x="1.7375%" y="1599.50"></text></g><g><title>`0x7FFFD8AB1167 (53 samples, 0.03%)</title><rect x="1.4875%" y="1573" width="0.0307%" height="15" fill="rgb(210,85,47)" fg:x="2569" fg:w="53"/><text x="1.7375%" y="1583.50"></text></g><g><title>`0x7FFFD8A39B74 (49 samples, 0.03%)</title><rect x="1.4898%" y="1557" width="0.0284%" height="15" fill="rgb(224,206,25)" fg:x="2573" fg:w="49"/><text x="1.7398%" y="1567.50"></text></g><g><title>`0x7FFFD8A3A14A (29 samples, 0.02%)</title><rect x="1.5216%" y="1525" width="0.0168%" height="15" fill="rgb(243,201,19)" fg:x="2628" fg:w="29"/><text x="1.7716%" y="1535.50"></text></g><g><title>`0x7FFFD8A3B2E3 (27 samples, 0.02%)</title><rect x="1.5228%" y="1509" width="0.0156%" height="15" fill="rgb(236,59,4)" fg:x="2630" fg:w="27"/><text x="1.7728%" y="1519.50"></text></g><g><title>`0x7FFFD9F9622B (22 samples, 0.01%)</title><rect x="1.5257%" y="1493" width="0.0127%" height="15" fill="rgb(254,179,45)" fg:x="2635" fg:w="22"/><text x="1.7757%" y="1503.50"></text></g><g><title>`0x7FFFD9F983F7 (19 samples, 0.01%)</title><rect x="1.5274%" y="1477" width="0.0110%" height="15" fill="rgb(226,14,10)" fg:x="2638" fg:w="19"/><text x="1.7774%" y="1487.50"></text></g><g><title>`0x7FFFD8A81339 (39 samples, 0.02%)</title><rect x="1.5210%" y="1573" width="0.0226%" height="15" fill="rgb(244,27,41)" fg:x="2627" fg:w="39"/><text x="1.7710%" y="1583.50"></text></g><g><title>`0x7FFFD8A39797 (39 samples, 0.02%)</title><rect x="1.5210%" y="1557" width="0.0226%" height="15" fill="rgb(235,35,32)" fg:x="2627" fg:w="39"/><text x="1.7710%" y="1567.50"></text></g><g><title>`0x7FFFD8A39B74 (39 samples, 0.02%)</title><rect x="1.5210%" y="1541" width="0.0226%" height="15" fill="rgb(218,68,31)" fg:x="2627" fg:w="39"/><text x="1.7710%" y="1551.50"></text></g><g><title>`0x7FFFD8A3A14A (28 samples, 0.02%)</title><rect x="1.5436%" y="1525" width="0.0162%" height="15" fill="rgb(207,120,37)" fg:x="2666" fg:w="28"/><text x="1.7936%" y="1535.50"></text></g><g><title>`0x7FFFD8A3B2E3 (26 samples, 0.02%)</title><rect x="1.5448%" y="1509" width="0.0151%" height="15" fill="rgb(227,98,0)" fg:x="2668" fg:w="26"/><text x="1.7948%" y="1519.50"></text></g><g><title>`0x7FFFD9F9622B (21 samples, 0.01%)</title><rect x="1.5477%" y="1493" width="0.0122%" height="15" fill="rgb(207,7,3)" fg:x="2673" fg:w="21"/><text x="1.7977%" y="1503.50"></text></g><g><title>`0x7FFFD9F983F7 (20 samples, 0.01%)</title><rect x="1.5483%" y="1477" width="0.0116%" height="15" fill="rgb(206,98,19)" fg:x="2674" fg:w="20"/><text x="1.7983%" y="1487.50"></text></g><g><title>`0x7FFFD8A79E84 (76 samples, 0.04%)</title><rect x="1.5210%" y="1589" width="0.0440%" height="15" fill="rgb(217,5,26)" fg:x="2627" fg:w="76"/><text x="1.7710%" y="1599.50"></text></g><g><title>`0x7FFFD8A81377 (37 samples, 0.02%)</title><rect x="1.5436%" y="1573" width="0.0214%" height="15" fill="rgb(235,190,38)" fg:x="2666" fg:w="37"/><text x="1.7936%" y="1583.50"></text></g><g><title>`0x7FFFD8A39797 (37 samples, 0.02%)</title><rect x="1.5436%" y="1557" width="0.0214%" height="15" fill="rgb(247,86,24)" fg:x="2666" fg:w="37"/><text x="1.7936%" y="1567.50"></text></g><g><title>`0x7FFFD8A39B74 (37 samples, 0.02%)</title><rect x="1.5436%" y="1541" width="0.0214%" height="15" fill="rgb(205,101,16)" fg:x="2666" fg:w="37"/><text x="1.7936%" y="1551.50"></text></g><g><title>`0x7FF853C119DB (158 samples, 0.09%)</title><rect x="1.4753%" y="1637" width="0.0915%" height="15" fill="rgb(246,168,33)" fg:x="2548" fg:w="158"/><text x="1.7253%" y="1647.50"></text></g><g><title>`0x7FF853C4BE81 (158 samples, 0.09%)</title><rect x="1.4753%" y="1621" width="0.0915%" height="15" fill="rgb(231,114,1)" fg:x="2548" fg:w="158"/><text x="1.7253%" y="1631.50"></text></g><g><title>`0x7FFFD8B0AB84 (158 samples, 0.09%)</title><rect x="1.4753%" y="1605" width="0.0915%" height="15" fill="rgb(207,184,53)" fg:x="2548" fg:w="158"/><text x="1.7253%" y="1615.50"></text></g><g><title>`0x7FF853C13630 (19 samples, 0.01%)</title><rect x="1.5691%" y="1637" width="0.0110%" height="15" fill="rgb(224,95,51)" fg:x="2710" fg:w="19"/><text x="1.8191%" y="1647.50"></text></g><g><title>boids.exe`wgpu_hal::dx12::D3D12Lib::create_device(enum2$ (233 samples, 0.13%)</title><rect x="1.4458%" y="1797" width="0.1349%" height="15" fill="rgb(212,188,45)" fg:x="2497" fg:w="233"/><text x="1.6958%" y="1807.50"></text></g><g><title>boids.exe`windows_result::hresult::HRESULT::ok (233 samples, 0.13%)</title><rect x="1.4458%" y="1781" width="0.1349%" height="15" fill="rgb(223,154,38)" fg:x="2497" fg:w="233"/><text x="1.6958%" y="1791.50"></text></g><g><title>boids.exe`windows_result::hresult::HRESULT::is_ok (233 samples, 0.13%)</title><rect x="1.4458%" y="1765" width="0.1349%" height="15" fill="rgb(251,22,52)" fg:x="2497" fg:w="233"/><text x="1.6958%" y="1775.50"></text></g><g><title>`0x7FF885CC63CE (233 samples, 0.13%)</title><rect x="1.4458%" y="1749" width="0.1349%" height="15" fill="rgb(229,209,22)" fg:x="2497" fg:w="233"/><text x="1.6958%" y="1759.50"></text></g><g><title>`0x7FF885CC6C6B (225 samples, 0.13%)</title><rect x="1.4504%" y="1733" width="0.1303%" height="15" fill="rgb(234,138,34)" fg:x="2505" fg:w="225"/><text x="1.7004%" y="1743.50"></text></g><g><title>`0x7FF853BD1B16 (225 samples, 0.13%)</title><rect x="1.4504%" y="1717" width="0.1303%" height="15" fill="rgb(212,95,11)" fg:x="2505" fg:w="225"/><text x="1.7004%" y="1727.50"></text></g><g><title>`0x7FF853BD0C9D (183 samples, 0.11%)</title><rect x="1.4747%" y="1701" width="0.1060%" height="15" fill="rgb(240,179,47)" fg:x="2547" fg:w="183"/><text x="1.7247%" y="1711.50"></text></g><g><title>`0x7FF853BD0F6A (183 samples, 0.11%)</title><rect x="1.4747%" y="1685" width="0.1060%" height="15" fill="rgb(240,163,11)" fg:x="2547" fg:w="183"/><text x="1.7247%" y="1695.50"></text></g><g><title>`0x7FF885CC5DFE (183 samples, 0.11%)</title><rect x="1.4747%" y="1669" width="0.1060%" height="15" fill="rgb(236,37,12)" fg:x="2547" fg:w="183"/><text x="1.7247%" y="1679.50"></text></g><g><title>`0x7FF853BC6AEF (183 samples, 0.11%)</title><rect x="1.4747%" y="1653" width="0.1060%" height="15" fill="rgb(232,164,16)" fg:x="2547" fg:w="183"/><text x="1.7247%" y="1663.50"></text></g><g><title>boids.exe`wgpu_hal::dynamic::instance::impl$2::enumerate_adapters&lt;wgpu_hal::dx12::Instance&gt;(wgpu_hal::dx12::Instance*, enum2$&lt;core::option::Option&lt;ref$&lt;dyn$ (254 samples, 0.15%)</title><rect x="1.4348%" y="1989" width="0.1471%" height="15" fill="rgb(244,205,15)" fg:x="2478" fg:w="254"/><text x="1.6848%" y="1999.50"></text></g><g><title>boids.exe`alloc::vec::impl$16::into_iter(alloc::vec::Vec&lt;wgpu_hal::ExposedAdapter (254 samples, 0.15%)</title><rect x="1.4348%" y="1973" width="0.1471%" height="15" fill="rgb(223,117,47)" fg:x="2478" fg:w="254"/><text x="1.6848%" y="1983.50"></text></g><g><title>boids.exe`core::mem::manually_drop::ManuallyDrop&lt;alloc::vec::Vec&lt;wgpu_hal::ExposedAdapter&lt;wgpu_hal::dx12::Api&gt;,alloc::alloc::Global&gt; &gt;::new(alloc::vec::Vec&lt;wgpu_hal::ExposedAdapter (254 samples, 0.15%)</title><rect x="1.4348%" y="1957" width="0.1471%" height="15" fill="rgb(244,107,35)" fg:x="2478" fg:w="254"/><text x="1.6848%" y="1967.50"></text></g><g><title>boids.exe`wgpu_hal::dx12::instance::impl$0::enumerate_adapters(wgpu_hal::dx12::Instance*, enum2$&lt;core::option::Option&lt;ref$ (254 samples, 0.15%)</title><rect x="1.4348%" y="1941" width="0.1471%" height="15" fill="rgb(205,140,8)" fg:x="2478" fg:w="254"/><text x="1.6848%" y="1951.50"></text></g><g><title>boids.exe`alloc::vec::in_place_collect::impl$1::from_iter&lt;wgpu_hal::ExposedAdapter&lt;wgpu_hal::dx12::Api&gt;,core::iter::adapters::filter_map::FilterMap&lt;alloc::vec::into_iter::IntoIter&lt;enum2$&lt;wgpu_hal::auxil::dxgi::factory::DxgiAdapter&gt;,alloc::alloc::Global&gt;,wgpu_hal::dx12::instance::impl$0::enumerate_adapters::closure_env$0&gt; &gt;(core::iter::adapters::filter_map::FilterMap&lt;alloc::vec::into_iter::IntoIter&lt;enum2$ (254 samples, 0.15%)</title><rect x="1.4348%" y="1925" width="0.1471%" height="15" fill="rgb(228,84,46)" fg:x="2478" fg:w="254"/><text x="1.6848%" y="1935.50"></text></g><g><title>boids.exe`alloc::vec::spec_from_iter_nested::impl$0::from_iter(core::iter::adapters::filter_map::FilterMap&lt;alloc::vec::into_iter::IntoIter&lt;enum2$ (254 samples, 0.15%)</title><rect x="1.4348%" y="1909" width="0.1471%" height="15" fill="rgb(254,188,9)" fg:x="2478" fg:w="254"/><text x="1.6848%" y="1919.50"></text></g><g><title>boids.exe`alloc::vec::spec_from_iter_nested::impl$0::from_iter(core::iter::adapters::filter_map::FilterMap&lt;alloc::vec::into_iter::IntoIter&lt;enum2$ (254 samples, 0.15%)</title><rect x="1.4348%" y="1893" width="0.1471%" height="15" fill="rgb(206,112,54)" fg:x="2478" fg:w="254"/><text x="1.6848%" y="1903.50"></text></g><g><title>boids.exe`core::iter::adapters::filter_map::impl$2::next(core::iter::adapters::filter_map::FilterMap&lt;alloc::vec::into_iter::IntoIter&lt;enum2$ (235 samples, 0.14%)</title><rect x="1.4458%" y="1877" width="0.1361%" height="15" fill="rgb(216,84,49)" fg:x="2497" fg:w="235"/><text x="1.6958%" y="1887.50"></text></g><g><title>boids.exe`core::iter::traits::iterator::Iterator::find_map(alloc::vec::into_iter::IntoIter&lt;enum2$ (235 samples, 0.14%)</title><rect x="1.4458%" y="1861" width="0.1361%" height="15" fill="rgb(214,194,35)" fg:x="2497" fg:w="235"/><text x="1.6958%" y="1871.50"></text></g><g><title>boids.exe`alloc::vec::into_iter::impl$5::try_fold(alloc::vec::into_iter::IntoIter&lt;enum2$&lt;wgpu_hal::auxil::dxgi::factory::DxgiAdapter&gt;,alloc::alloc::Global&gt;*, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::find_map::check::closure_env$0&lt;enum2$&lt;wgpu_hal::auxil::dxgi::factory::DxgiAdapter&gt;,wgpu_hal::ExposedAdapter&lt;wgpu_hal::dx12::Api&gt;,ref_mut$ (235 samples, 0.14%)</title><rect x="1.4458%" y="1845" width="0.1361%" height="15" fill="rgb(249,28,3)" fg:x="2497" fg:w="235"/><text x="1.6958%" y="1855.50"></text></g><g><title>boids.exe`core::iter::traits::iterator::Iterator::find_map::check::closure$0(core::iter::traits::iterator::Iterator::find_map::check::closure_env$0&lt;enum2$&lt;wgpu_hal::auxil::dxgi::factory::DxgiAdapter&gt;,wgpu_hal::ExposedAdapter&lt;wgpu_hal::dx12::Api&gt;,ref_mut$&lt;wgpu_hal::dx12::instance::impl$0::enumerate_adapters::closure_env$0&gt; &gt;*, tuple$&lt;&gt;, enum2$ (235 samples, 0.14%)</title><rect x="1.4458%" y="1829" width="0.1361%" height="15" fill="rgb(222,56,52)" fg:x="2497" fg:w="235"/><text x="1.6958%" y="1839.50"></text></g><g><title>boids.exe`wgpu_hal::dx12::Adapter::expose(enum2$&lt;wgpu_hal::auxil::dxgi::factory::DxgiAdapter&gt;, alloc::sync::Arc&lt;wgpu_hal::dx12::D3D12Lib,alloc::alloc::Global&gt;*, wgpu_types::instance::InstanceFlags, enum2$&lt;core::option::Option&lt;alloc::sync::Arc (235 samples, 0.14%)</title><rect x="1.4458%" y="1813" width="0.1361%" height="15" fill="rgb(245,217,50)" fg:x="2497" fg:w="235"/><text x="1.6958%" y="1823.50"></text></g><g><title>boids.exe`bevy_render::renderer::initialize_renderer::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (340 samples, 0.20%)</title><rect x="1.3890%" y="2117" width="0.1969%" height="15" fill="rgb(213,201,24)" fg:x="2399" fg:w="340"/><text x="1.6390%" y="2127.50"></text></g><g><title>boids.exe`core::future::into_future::impl$0::into_future(enum2$ (340 samples, 0.20%)</title><rect x="1.3890%" y="2101" width="0.1969%" height="15" fill="rgb(248,116,28)" fg:x="2399" fg:w="340"/><text x="1.6390%" y="2111.50"></text></g><g><title>boids.exe`wgpu::api::instance::Instance::request_adapter(wgpu_types::RequestAdapterOptions&lt;ref$ (288 samples, 0.17%)</title><rect x="1.4191%" y="2085" width="0.1668%" height="15" fill="rgb(219,72,43)" fg:x="2451" fg:w="288"/><text x="1.6691%" y="2095.50"></text></g><g><title>boids.exe`wgpu::backend::wgpu_core::impl$10::request_adapter(wgpu::backend::wgpu_core::ContextWgpuCore*, wgpu_types::RequestAdapterOptions&lt;ref$ (288 samples, 0.17%)</title><rect x="1.4191%" y="2069" width="0.1668%" height="15" fill="rgb(209,138,14)" fg:x="2451" fg:w="288"/><text x="1.6691%" y="2079.50"></text></g><g><title>boids.exe`enum2$&lt;core::result::Result&lt;wgpu_core::id::Id&lt;enum2$&lt;wgpu_core::id::markers::Adapter&gt; &gt;,enum2$&lt;wgpu_core::instance::RequestAdapterError&gt; &gt; &gt;::map(enum2$&lt;core::result::Result&lt;wgpu_core::id::Id&lt;enum2$&lt;wgpu_core::id::markers::Adapter&gt; &gt;,enum2$ (288 samples, 0.17%)</title><rect x="1.4191%" y="2053" width="0.1668%" height="15" fill="rgb(222,18,33)" fg:x="2451" fg:w="288"/><text x="1.6691%" y="2063.50"></text></g><g><title>boids.exe`wgpu_core::global::Global::request_adapter(wgpu_types::RequestAdapterOptions&lt;wgpu_core::id::Id&lt;enum2$&lt;wgpu_core::id::markers::Surface&gt; &gt; &gt;*, wgpu_types::Backends, enum2$&lt;core::option::Option&lt;wgpu_core::id::Id&lt;enum2$ (288 samples, 0.17%)</title><rect x="1.4191%" y="2037" width="0.1668%" height="15" fill="rgb(213,199,7)" fg:x="2451" fg:w="288"/><text x="1.6691%" y="2047.50"></text></g><g><title>boids.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;wgpu_core::instance::Adapter,enum2$ (288 samples, 0.17%)</title><rect x="1.4191%" y="2021" width="0.1668%" height="15" fill="rgb(250,110,10)" fg:x="2451" fg:w="288"/><text x="1.6691%" y="2031.50"></text></g><g><title>boids.exe`wgpu_core::instance::Instance::request_adapter(wgpu_types::RequestAdapterOptions&lt;ref$ (288 samples, 0.17%)</title><rect x="1.4191%" y="2005" width="0.1668%" height="15" fill="rgb(248,123,6)" fg:x="2451" fg:w="288"/><text x="1.6691%" y="2015.50"></text></g><g><title>`0x7FF825334F01 (19 samples, 0.01%)</title><rect x="1.5888%" y="1797" width="0.0110%" height="15" fill="rgb(206,91,31)" fg:x="2744" fg:w="19"/><text x="1.8388%" y="1807.50"></text></g><g><title>`0x7FF8253500DB (42 samples, 0.02%)</title><rect x="1.5888%" y="1877" width="0.0243%" height="15" fill="rgb(211,154,13)" fg:x="2744" fg:w="42"/><text x="1.8388%" y="1887.50"></text></g><g><title>`0x7FF8253354B8 (42 samples, 0.02%)</title><rect x="1.5888%" y="1861" width="0.0243%" height="15" fill="rgb(225,148,7)" fg:x="2744" fg:w="42"/><text x="1.8388%" y="1871.50"></text></g><g><title>`0x7FF885303453 (42 samples, 0.02%)</title><rect x="1.5888%" y="1845" width="0.0243%" height="15" fill="rgb(220,160,43)" fg:x="2744" fg:w="42"/><text x="1.8388%" y="1855.50"></text></g><g><title>`0x7FF885300F5C (42 samples, 0.02%)</title><rect x="1.5888%" y="1829" width="0.0243%" height="15" fill="rgb(213,52,39)" fg:x="2744" fg:w="42"/><text x="1.8388%" y="1839.50"></text></g><g><title>`0x7FF863F6C49C (42 samples, 0.02%)</title><rect x="1.5888%" y="1813" width="0.0243%" height="15" fill="rgb(243,137,7)" fg:x="2744" fg:w="42"/><text x="1.8388%" y="1823.50"></text></g><g><title>`0x7FF825334F25 (23 samples, 0.01%)</title><rect x="1.5998%" y="1797" width="0.0133%" height="15" fill="rgb(230,79,13)" fg:x="2763" fg:w="23"/><text x="1.8498%" y="1807.50"></text></g><g><title>boids.exe`glow::gl46::struct_commands::GlFns::load_with(glow::native::impl$3::from_loader_function_cstr::closure_env$0&lt;glow::native::impl$3::from_loader_function::closure_env$0 (22 samples, 0.01%)</title><rect x="1.6183%" y="1861" width="0.0127%" height="15" fill="rgb(247,105,23)" fg:x="2795" fg:w="22"/><text x="1.8683%" y="1871.50"></text></g><g><title>boids.exe`glow::gl46::struct_commands::GlFns::load_all_with_dyn(ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;ptr_const$&lt;i8&gt; &gt;,assoc$&lt;Output,ptr_mut$ (22 samples, 0.01%)</title><rect x="1.6183%" y="1845" width="0.0127%" height="15" fill="rgb(223,179,41)" fg:x="2795" fg:w="22"/><text x="1.8683%" y="1855.50"></text></g><g><title>boids.exe`glow::native::Context::from_loader_function_cstr&lt;glow::native::impl$3::from_loader_function::closure_env$0&lt;wgpu_hal::gles::wgl::impl$14::init::closure_env$5&gt; &gt;(glow::native::impl$3::from_loader_function::closure_env$0 (23 samples, 0.01%)</title><rect x="1.6183%" y="1877" width="0.0133%" height="15" fill="rgb(218,9,34)" fg:x="2795" fg:w="23"/><text x="1.8683%" y="1887.50"></text></g><g><title>`0x7FF825124808 (19 samples, 0.01%)</title><rect x="1.6415%" y="1781" width="0.0110%" height="15" fill="rgb(222,106,8)" fg:x="2835" fg:w="19"/><text x="1.8915%" y="1791.50"></text></g><g><title>`0x7FF825334F01 (29 samples, 0.02%)</title><rect x="1.6363%" y="1813" width="0.0168%" height="15" fill="rgb(211,220,0)" fg:x="2826" fg:w="29"/><text x="1.8863%" y="1823.50"></text></g><g><title>`0x7FF825124731 (22 samples, 0.01%)</title><rect x="1.6403%" y="1797" width="0.0127%" height="15" fill="rgb(229,52,16)" fg:x="2833" fg:w="22"/><text x="1.8903%" y="1807.50"></text></g><g><title>boids.exe`wgpu_core::instance::impl$0::new::init(wgpu_hal::gles::Api, wgpu_types::instance::InstanceDescriptor*, alloc::vec::Vec&lt;tuple$&lt;wgpu_types::Backend,alloc::boxed::Box&lt;dyn$ (126 samples, 0.07%)</title><rect x="1.5888%" y="1909" width="0.0730%" height="15" fill="rgb(212,155,18)" fg:x="2744" fg:w="126"/><text x="1.8388%" y="1919.50"></text></g><g><title>boids.exe`wgpu_hal::gles::wgl::impl$14::init (126 samples, 0.07%)</title><rect x="1.5888%" y="1893" width="0.0730%" height="15" fill="rgb(242,21,14)" fg:x="2744" fg:w="126"/><text x="1.8388%" y="1903.50"></text></g><g><title>boids.exe`windows::Win32::Graphics::OpenGL::wglCreateContext (44 samples, 0.03%)</title><rect x="1.6363%" y="1877" width="0.0255%" height="15" fill="rgb(222,19,48)" fg:x="2826" fg:w="44"/><text x="1.8863%" y="1887.50"></text></g><g><title>`0x7FF885303453 (44 samples, 0.03%)</title><rect x="1.6363%" y="1861" width="0.0255%" height="15" fill="rgb(232,45,27)" fg:x="2826" fg:w="44"/><text x="1.8863%" y="1871.50"></text></g><g><title>`0x7FF885300F5C (44 samples, 0.03%)</title><rect x="1.6363%" y="1845" width="0.0255%" height="15" fill="rgb(249,103,42)" fg:x="2826" fg:w="44"/><text x="1.8863%" y="1855.50"></text></g><g><title>`0x7FF863F6C49C (44 samples, 0.03%)</title><rect x="1.6363%" y="1829" width="0.0255%" height="15" fill="rgb(246,81,33)" fg:x="2826" fg:w="44"/><text x="1.8863%" y="1839.50"></text></g><g><title>`0x7FF817187398 (26 samples, 0.02%)</title><rect x="1.6727%" y="1717" width="0.0151%" height="15" fill="rgb(252,33,42)" fg:x="2889" fg:w="26"/><text x="1.9227%" y="1727.50"></text></g><g><title>`0x7FF81726FF36 (26 samples, 0.02%)</title><rect x="1.6727%" y="1701" width="0.0151%" height="15" fill="rgb(209,212,41)" fg:x="2889" fg:w="26"/><text x="1.9227%" y="1711.50"></text></g><g><title>`0x7FF817290D6E (26 samples, 0.02%)</title><rect x="1.6727%" y="1685" width="0.0151%" height="15" fill="rgb(207,154,6)" fg:x="2889" fg:w="26"/><text x="1.9227%" y="1695.50"></text></g><g><title>`0x7FF81729112B (24 samples, 0.01%)</title><rect x="1.6739%" y="1669" width="0.0139%" height="15" fill="rgb(223,64,47)" fg:x="2891" fg:w="24"/><text x="1.9239%" y="1679.50"></text></g><g><title>`0x7FF8172E4F78 (23 samples, 0.01%)</title><rect x="1.6930%" y="1653" width="0.0133%" height="15" fill="rgb(211,161,38)" fg:x="2924" fg:w="23"/><text x="1.9430%" y="1663.50"></text></g><g><title>`0x7FF817289143 (23 samples, 0.01%)</title><rect x="1.6930%" y="1637" width="0.0133%" height="15" fill="rgb(219,138,40)" fg:x="2924" fg:w="23"/><text x="1.9430%" y="1647.50"></text></g><g><title>`0x7FF8172B5BD7 (23 samples, 0.01%)</title><rect x="1.6930%" y="1621" width="0.0133%" height="15" fill="rgb(241,228,46)" fg:x="2924" fg:w="23"/><text x="1.9430%" y="1631.50"></text></g><g><title>`0x7FF817168EB6 (25 samples, 0.01%)</title><rect x="1.6930%" y="1669" width="0.0145%" height="15" fill="rgb(223,209,38)" fg:x="2924" fg:w="25"/><text x="1.9430%" y="1679.50"></text></g><g><title>`0x7FF817187486 (51 samples, 0.03%)</title><rect x="1.6878%" y="1717" width="0.0295%" height="15" fill="rgb(236,164,45)" fg:x="2915" fg:w="51"/><text x="1.9378%" y="1727.50"></text></g><g><title>`0x7FF81717736D (51 samples, 0.03%)</title><rect x="1.6878%" y="1701" width="0.0295%" height="15" fill="rgb(231,15,5)" fg:x="2915" fg:w="51"/><text x="1.9378%" y="1711.50"></text></g><g><title>`0x7FF817177A54 (42 samples, 0.02%)</title><rect x="1.6930%" y="1685" width="0.0243%" height="15" fill="rgb(252,35,15)" fg:x="2924" fg:w="42"/><text x="1.9430%" y="1695.50"></text></g><g><title>`0x7FF865F77DAD (92 samples, 0.05%)</title><rect x="1.6722%" y="1749" width="0.0533%" height="15" fill="rgb(248,181,18)" fg:x="2888" fg:w="92"/><text x="1.9222%" y="1759.50"></text></g><g><title>`0x7FF8171870C5 (91 samples, 0.05%)</title><rect x="1.6727%" y="1733" width="0.0527%" height="15" fill="rgb(233,39,42)" fg:x="2889" fg:w="91"/><text x="1.9227%" y="1743.50"></text></g><g><title>`0x7FF865F81F88 (97 samples, 0.06%)</title><rect x="1.6704%" y="1813" width="0.0562%" height="15" fill="rgb(238,110,33)" fg:x="2885" fg:w="97"/><text x="1.9204%" y="1823.50"></text></g><g><title>`0x7FF865F60382 (94 samples, 0.05%)</title><rect x="1.6722%" y="1797" width="0.0544%" height="15" fill="rgb(233,195,10)" fg:x="2888" fg:w="94"/><text x="1.9222%" y="1807.50"></text></g><g><title>`0x7FF8172380F0 (94 samples, 0.05%)</title><rect x="1.6722%" y="1781" width="0.0544%" height="15" fill="rgb(254,105,3)" fg:x="2888" fg:w="94"/><text x="1.9222%" y="1791.50"></text></g><g><title>`0x7FF884341580 (94 samples, 0.05%)</title><rect x="1.6722%" y="1765" width="0.0544%" height="15" fill="rgb(221,225,9)" fg:x="2888" fg:w="94"/><text x="1.9222%" y="1775.50"></text></g><g><title>boids.exe`ash::entry::Entry::create_instance(ash::vk::definitions::InstanceCreateInfo*, enum2$&lt;core::option::Option&lt;ref$ (114 samples, 0.07%)</title><rect x="1.6617%" y="1877" width="0.0660%" height="15" fill="rgb(224,227,45)" fg:x="2870" fg:w="114"/><text x="1.9117%" y="1887.50"></text></g><g><title>boids.exe`ash::vk::enums::Result::assume_init_on_success(ash::vk::enums::Result, core::mem::maybe_uninit::MaybeUninit (114 samples, 0.07%)</title><rect x="1.6617%" y="1861" width="0.0660%" height="15" fill="rgb(229,198,43)" fg:x="2870" fg:w="114"/><text x="1.9117%" y="1871.50"></text></g><g><title>boids.exe`ash::vk::enums::Result::result (114 samples, 0.07%)</title><rect x="1.6617%" y="1845" width="0.0660%" height="15" fill="rgb(206,209,35)" fg:x="2870" fg:w="114"/><text x="1.9117%" y="1855.50"></text></g><g><title>boids.exe`ash::vk::enums::Result::result_with_success(ash::vk::enums::Result, tuple$ (114 samples, 0.07%)</title><rect x="1.6617%" y="1829" width="0.0660%" height="15" fill="rgb(245,195,53)" fg:x="2870" fg:w="114"/><text x="1.9117%" y="1839.50"></text></g><g><title>`0x7FF865F6335E (19 samples, 0.01%)</title><rect x="1.7376%" y="1717" width="0.0110%" height="15" fill="rgb(240,92,26)" fg:x="3001" fg:w="19"/><text x="1.9876%" y="1727.50"></text></g><g><title>`0x7FF865F610CD (19 samples, 0.01%)</title><rect x="1.7376%" y="1701" width="0.0110%" height="15" fill="rgb(207,40,23)" fg:x="3001" fg:w="19"/><text x="1.9876%" y="1711.50"></text></g><g><title>`0x7FF865F8D3C4 (18 samples, 0.01%)</title><rect x="1.7382%" y="1685" width="0.0104%" height="15" fill="rgb(223,111,35)" fg:x="3002" fg:w="18"/><text x="1.9882%" y="1695.50"></text></g><g><title>`0x7FF865F8C727 (18 samples, 0.01%)</title><rect x="1.7382%" y="1669" width="0.0104%" height="15" fill="rgb(229,147,28)" fg:x="3002" fg:w="18"/><text x="1.9882%" y="1679.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place&lt;tuple$&lt;enum2$&lt;bevy_asset::id::UntypedAssetId&gt;,bevy_asset::server::info::AssetInfo&gt; &gt;(tuple$&lt;enum2$ (18 samples, 0.01%)</title><rect x="1.7382%" y="1653" width="0.0104%" height="15" fill="rgb(211,29,28)" fg:x="3002" fg:w="18"/><text x="1.9882%" y="1663.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place (18 samples, 0.01%)</title><rect x="1.7382%" y="1637" width="0.0104%" height="15" fill="rgb(228,72,33)" fg:x="3002" fg:w="18"/><text x="1.9882%" y="1647.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(alloc::vec::Vec (18 samples, 0.01%)</title><rect x="1.7382%" y="1621" width="0.0104%" height="15" fill="rgb(205,214,31)" fg:x="3002" fg:w="18"/><text x="1.9882%" y="1631.50"></text></g><g><title>boids.exe`alloc::vec::impl$25::drop(alloc::vec::Vec (18 samples, 0.01%)</title><rect x="1.7382%" y="1605" width="0.0104%" height="15" fill="rgb(224,111,15)" fg:x="3002" fg:w="18"/><text x="1.9882%" y="1615.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(ptr_mut$&lt;slice2$ (18 samples, 0.01%)</title><rect x="1.7382%" y="1589" width="0.0104%" height="15" fill="rgb(253,21,26)" fg:x="3002" fg:w="18"/><text x="1.9882%" y="1599.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place&lt;bevy_asset::assets::Assets&lt;bevy_asset::assets::LoadedUntypedAsset&gt; &gt;(bevy_asset::assets::Assets (18 samples, 0.01%)</title><rect x="1.7382%" y="1573" width="0.0104%" height="15" fill="rgb(245,139,43)" fg:x="3002" fg:w="18"/><text x="1.9882%" y="1583.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::get_resource_or_init&lt;bevy_ecs::event::registry::EventRegistry&gt; (18 samples, 0.01%)</title><rect x="1.7382%" y="1557" width="0.0104%" height="15" fill="rgb(252,170,7)" fg:x="3002" fg:w="18"/><text x="1.9882%" y="1567.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::components_registrator (18 samples, 0.01%)</title><rect x="1.7382%" y="1541" width="0.0104%" height="15" fill="rgb(231,118,14)" fg:x="3002" fg:w="18"/><text x="1.9882%" y="1551.50"></text></g><g><title>boids.exe`bevy_ecs::component::ComponentsRegistrator::register_resource_with(core::any::TypeId, bevy_ecs::component::impl$18::register_resource::closure_env$0 (18 samples, 0.01%)</title><rect x="1.7382%" y="1525" width="0.0104%" height="15" fill="rgb(238,83,0)" fg:x="3002" fg:w="18"/><text x="1.9882%" y="1535.50"></text></g><g><title>`0x7FF865F78615 (40 samples, 0.02%)</title><rect x="1.7376%" y="1749" width="0.0232%" height="15" fill="rgb(221,39,39)" fg:x="3001" fg:w="40"/><text x="1.9876%" y="1759.50"></text></g><g><title>`0x7FF865F725CF (40 samples, 0.02%)</title><rect x="1.7376%" y="1733" width="0.0232%" height="15" fill="rgb(222,119,46)" fg:x="3001" fg:w="40"/><text x="1.9876%" y="1743.50"></text></g><g><title>`0x7FF865F63502 (20 samples, 0.01%)</title><rect x="1.7492%" y="1717" width="0.0116%" height="15" fill="rgb(222,165,49)" fg:x="3021" fg:w="20"/><text x="1.9992%" y="1727.50"></text></g><g><title>`0x7FF865F743C2 (20 samples, 0.01%)</title><rect x="1.7492%" y="1701" width="0.0116%" height="15" fill="rgb(219,113,52)" fg:x="3021" fg:w="20"/><text x="1.9992%" y="1711.50"></text></g><g><title>`0x7FF865F72508 (20 samples, 0.01%)</title><rect x="1.7492%" y="1685" width="0.0116%" height="15" fill="rgb(214,7,15)" fg:x="3021" fg:w="20"/><text x="1.9992%" y="1695.50"></text></g><g><title>`0x7FF89AB7B3D2 (20 samples, 0.01%)</title><rect x="1.7492%" y="1669" width="0.0116%" height="15" fill="rgb(235,32,4)" fg:x="3021" fg:w="20"/><text x="1.9992%" y="1679.50"></text></g><g><title>`0x7FF89D8DA76A (20 samples, 0.01%)</title><rect x="1.7492%" y="1653" width="0.0116%" height="15" fill="rgb(238,90,54)" fg:x="3021" fg:w="20"/><text x="1.9992%" y="1663.50"></text></g><g><title>`0x7FF89D8C90CC (20 samples, 0.01%)</title><rect x="1.7492%" y="1637" width="0.0116%" height="15" fill="rgb(213,208,19)" fg:x="3021" fg:w="20"/><text x="1.9992%" y="1647.50"></text></g><g><title>boids.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;alloc::vec::Vec&lt;ref$ (55 samples, 0.03%)</title><rect x="1.7318%" y="1877" width="0.0318%" height="15" fill="rgb(233,156,4)" fg:x="2991" fg:w="55"/><text x="1.9818%" y="1887.50"></text></g><g><title>boids.exe`wgpu_hal::vulkan::Instance::desired_extensions (55 samples, 0.03%)</title><rect x="1.7318%" y="1861" width="0.0318%" height="15" fill="rgb(207,194,5)" fg:x="2991" fg:w="55"/><text x="1.9818%" y="1871.50"></text></g><g><title>boids.exe`wgpu_hal::vulkan::Instance::enumerate_instance_extension_properties(ash::entry::Entry*, enum2$&lt;core::option::Option&lt;ref$ (55 samples, 0.03%)</title><rect x="1.7318%" y="1845" width="0.0318%" height="15" fill="rgb(206,111,30)" fg:x="2991" fg:w="55"/><text x="1.9818%" y="1855.50"></text></g><g><title>boids.exe`enum2$&lt;core::result::Result&lt;alloc::vec::Vec&lt;ash::vk::definitions::ExtensionProperties,alloc::alloc::Global&gt;,ash::vk::enums::Result&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;alloc::vec::Vec (55 samples, 0.03%)</title><rect x="1.7318%" y="1829" width="0.0318%" height="15" fill="rgb(243,70,54)" fg:x="2991" fg:w="55"/><text x="1.9818%" y="1839.50"></text></g><g><title>boids.exe`ash::prelude::read_into_uninitialized_vector&lt;u32,ash::vk::definitions::ExtensionProperties,ash::entry::impl$0::enumerate_instance_extension_properties::closure_env$0&gt; (55 samples, 0.03%)</title><rect x="1.7318%" y="1813" width="0.0318%" height="15" fill="rgb(242,28,8)" fg:x="2991" fg:w="55"/><text x="1.9818%" y="1823.50"></text></g><g><title>boids.exe`ash::vk::enums::Result::result (48 samples, 0.03%)</title><rect x="1.7359%" y="1797" width="0.0278%" height="15" fill="rgb(219,106,18)" fg:x="2998" fg:w="48"/><text x="1.9859%" y="1807.50"></text></g><g><title>boids.exe`ash::vk::enums::Result::result_with_success(ash::vk::enums::Result, tuple$ (48 samples, 0.03%)</title><rect x="1.7359%" y="1781" width="0.0278%" height="15" fill="rgb(244,222,10)" fg:x="2998" fg:w="48"/><text x="1.9859%" y="1791.50"></text></g><g><title>`0x7FF865F8393C (45 samples, 0.03%)</title><rect x="1.7376%" y="1765" width="0.0261%" height="15" fill="rgb(236,179,52)" fg:x="3001" fg:w="45"/><text x="1.9876%" y="1775.50"></text></g><g><title>boids.exe`enum2$&lt;core::result::Result&lt;alloc::vec::Vec&lt;ash::vk::definitions::LayerProperties,alloc::alloc::Global&gt;,ash::vk::enums::Result&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;alloc::vec::Vec (29 samples, 0.02%)</title><rect x="1.7637%" y="1877" width="0.0168%" height="15" fill="rgb(213,23,39)" fg:x="3046" fg:w="29"/><text x="2.0137%" y="1887.50"></text></g><g><title>boids.exe`ash::prelude::read_into_uninitialized_vector&lt;u32,ash::vk::definitions::LayerProperties,ash::entry::impl$0::enumerate_instance_layer_properties::closure_env$0&gt; (29 samples, 0.02%)</title><rect x="1.7637%" y="1861" width="0.0168%" height="15" fill="rgb(238,48,10)" fg:x="3046" fg:w="29"/><text x="2.0137%" y="1871.50"></text></g><g><title>boids.exe`bevy_render::impl$3::build (753 samples, 0.44%)</title><rect x="1.3624%" y="2213" width="0.4360%" height="15" fill="rgb(251,196,23)" fg:x="2353" fg:w="753"/><text x="1.6124%" y="2223.50"></text></g><g><title>boids.exe`futures_lite::future::block_on(enum2$ (707 samples, 0.41%)</title><rect x="1.3890%" y="2197" width="0.4094%" height="15" fill="rgb(250,152,24)" fg:x="2399" fg:w="707"/><text x="1.6390%" y="2207.50"></text></g><g><title>boids.exe`std::thread::local::LocalKey&lt;core::cell::RefCell&lt;tuple$&lt;parking::Parker,core::task::wake::Waker&gt; &gt; &gt;::with&lt;core::cell::RefCell&lt;tuple$&lt;parking::Parker,core::task::wake::Waker&gt; &gt;,futures_lite::future::block_on::closure_env$0&lt;tuple$&lt;&gt;,enum2$&lt;bevy_render::impl$3::build::async_block_env$0&gt; &gt;,tuple$&lt;&gt; &gt;(futures_lite::future::block_on::closure_env$0&lt;tuple$&lt;&gt;,enum2$ (707 samples, 0.41%)</title><rect x="1.3890%" y="2181" width="0.4094%" height="15" fill="rgb(209,150,17)" fg:x="2399" fg:w="707"/><text x="1.6390%" y="2191.50"></text></g><g><title>boids.exe`std::thread::local::LocalKey&lt;core::cell::RefCell&lt;tuple$&lt;parking::Parker,core::task::wake::Waker&gt; &gt; &gt;::try_with(futures_lite::future::block_on::closure_env$0&lt;tuple$&lt;&gt;,enum2$ (707 samples, 0.41%)</title><rect x="1.3890%" y="2165" width="0.4094%" height="15" fill="rgb(234,202,34)" fg:x="2399" fg:w="707"/><text x="1.6390%" y="2175.50"></text></g><g><title>boids.exe`futures_lite::future::block_on::closure$0(futures_lite::future::block_on::closure_env$0&lt;tuple$&lt;&gt;,enum2$&lt;bevy_render::impl$3::build::async_block_env$0&gt; &gt;, core::cell::RefCell&lt;tuple$ (707 samples, 0.41%)</title><rect x="1.3890%" y="2149" width="0.4094%" height="15" fill="rgb(253,148,53)" fg:x="2399" fg:w="707"/><text x="1.6390%" y="2159.50"></text></g><g><title>boids.exe`bevy_render::impl$3::build::async_block$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (707 samples, 0.41%)</title><rect x="1.3890%" y="2133" width="0.4094%" height="15" fill="rgb(218,129,16)" fg:x="2399" fg:w="707"/><text x="1.6390%" y="2143.50"></text></g><g><title>boids.exe`wgpu::api::instance::Instance::new (367 samples, 0.21%)</title><rect x="1.5859%" y="2117" width="0.2125%" height="15" fill="rgb(216,85,19)" fg:x="2739" fg:w="367"/><text x="1.8359%" y="2127.50"></text></g><g><title>boids.exe`wgpu::backend::wgpu_core::impl$10::new (367 samples, 0.21%)</title><rect x="1.5859%" y="2101" width="0.2125%" height="15" fill="rgb(235,228,7)" fg:x="2739" fg:w="367"/><text x="1.8359%" y="2111.50"></text></g><g><title>boids.exe`alloc::sync::Arc&lt;wgpu_core::global::Global,alloc::alloc::Global&gt;::new (367 samples, 0.21%)</title><rect x="1.5859%" y="2085" width="0.2125%" height="15" fill="rgb(245,175,0)" fg:x="2739" fg:w="367"/><text x="1.8359%" y="2095.50"></text></g><g><title>boids.exe`wgpu_core::global::Global::new(ref$ (367 samples, 0.21%)</title><rect x="1.5859%" y="2069" width="0.2125%" height="15" fill="rgb(208,168,36)" fg:x="2739" fg:w="367"/><text x="1.8359%" y="2079.50"></text></g><g><title>boids.exe`wgpu_core::registry::Registry&lt;alloc::sync::Arc&lt;wgpu_core::instance::Surface,alloc::alloc::Global&gt; &gt;::new (367 samples, 0.21%)</title><rect x="1.5859%" y="2053" width="0.2125%" height="15" fill="rgb(246,171,24)" fg:x="2739" fg:w="367"/><text x="1.8359%" y="2063.50"></text></g><g><title>boids.exe`alloc::sync::Arc&lt;wgpu_core::identity::IdentityManager&lt;enum2$&lt;wgpu_core::id::markers::Surface&gt; &gt;,alloc::alloc::Global&gt;::new(wgpu_core::identity::IdentityManager&lt;enum2$ (367 samples, 0.21%)</title><rect x="1.5859%" y="2037" width="0.2125%" height="15" fill="rgb(215,142,24)" fg:x="2739" fg:w="367"/><text x="1.8359%" y="2047.50"></text></g><g><title>boids.exe`alloc::boxed::impl$0::new(alloc::sync::ArcInner&lt;wgpu_core::identity::IdentityManager&lt;enum2$ (367 samples, 0.21%)</title><rect x="1.5859%" y="2021" width="0.2125%" height="15" fill="rgb(250,187,7)" fg:x="2739" fg:w="367"/><text x="1.8359%" y="2031.50"></text></g><g><title>boids.exe`alloc::alloc::exchange_malloc (367 samples, 0.21%)</title><rect x="1.5859%" y="2005" width="0.2125%" height="15" fill="rgb(228,66,33)" fg:x="2739" fg:w="367"/><text x="1.8359%" y="2015.50"></text></g><g><title>boids.exe`alloc::alloc::impl$1::allocate (367 samples, 0.21%)</title><rect x="1.5859%" y="1989" width="0.2125%" height="15" fill="rgb(234,215,21)" fg:x="2739" fg:w="367"/><text x="1.8359%" y="1999.50"></text></g><g><title>boids.exe`alloc::alloc::Global::alloc_impl (367 samples, 0.21%)</title><rect x="1.5859%" y="1973" width="0.2125%" height="15" fill="rgb(222,191,20)" fg:x="2739" fg:w="367"/><text x="1.8359%" y="1983.50"></text></g><g><title>boids.exe`alloc::alloc::alloc (367 samples, 0.21%)</title><rect x="1.5859%" y="1957" width="0.2125%" height="15" fill="rgb(245,79,54)" fg:x="2739" fg:w="367"/><text x="1.8359%" y="1967.50"></text></g><g><title>boids.exe`core::ptr::read_volatile (367 samples, 0.21%)</title><rect x="1.5859%" y="1941" width="0.2125%" height="15" fill="rgb(240,10,37)" fg:x="2739" fg:w="367"/><text x="1.8359%" y="1951.50"></text></g><g><title>boids.exe`wgpu_core::instance::Instance::new(ref$ (367 samples, 0.21%)</title><rect x="1.5859%" y="1925" width="0.2125%" height="15" fill="rgb(214,192,32)" fg:x="2739" fg:w="367"/><text x="1.8359%" y="1935.50"></text></g><g><title>boids.exe`wgpu_core::instance::impl$0::new::init(wgpu_hal::vulkan::Api, wgpu_types::instance::InstanceDescriptor*, alloc::vec::Vec&lt;tuple$&lt;wgpu_types::Backend,alloc::boxed::Box&lt;dyn$ (236 samples, 0.14%)</title><rect x="1.6617%" y="1909" width="0.1366%" height="15" fill="rgb(209,36,54)" fg:x="2870" fg:w="236"/><text x="1.9117%" y="1919.50"></text></g><g><title>boids.exe`wgpu_hal::vulkan::instance::impl$5::init (236 samples, 0.14%)</title><rect x="1.6617%" y="1893" width="0.1366%" height="15" fill="rgb(220,10,11)" fg:x="2870" fg:w="236"/><text x="1.9117%" y="1903.50"></text></g><g><title>boids.exe`wgpu_hal::vulkan::Instance::enumerate_instance_extension_properties(ash::entry::Entry*, enum2$&lt;core::option::Option&lt;ref$ (26 samples, 0.02%)</title><rect x="1.7833%" y="1877" width="0.0151%" height="15" fill="rgb(221,106,17)" fg:x="3080" fg:w="26"/><text x="2.0333%" y="1887.50"></text></g><g><title>boids.exe`enum2$&lt;core::result::Result&lt;alloc::vec::Vec&lt;ash::vk::definitions::ExtensionProperties,alloc::alloc::Global&gt;,ash::vk::enums::Result&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;alloc::vec::Vec (26 samples, 0.02%)</title><rect x="1.7833%" y="1861" width="0.0151%" height="15" fill="rgb(251,142,44)" fg:x="3080" fg:w="26"/><text x="2.0333%" y="1871.50"></text></g><g><title>boids.exe`ash::prelude::read_into_uninitialized_vector&lt;u32,ash::vk::definitions::ExtensionProperties,ash::entry::impl$0::enumerate_instance_extension_properties::closure_env$0&gt; (26 samples, 0.02%)</title><rect x="1.7833%" y="1845" width="0.0151%" height="15" fill="rgb(238,13,15)" fg:x="3080" fg:w="26"/><text x="2.0333%" y="1855.50"></text></g><g><title>boids.exe`bevy_app::app::App::add_plugins (2,923 samples, 1.69%)</title><rect x="0.1361%" y="2357" width="1.6924%" height="15" fill="rgb(208,107,27)" fg:x="235" fg:w="2923"/><text x="0.3861%" y="2367.50"></text></g><g><title>boids.exe`bevy_app::plugin_group::PluginGroupBuilder::finish (2,923 samples, 1.69%)</title><rect x="0.1361%" y="2341" width="1.6924%" height="15" fill="rgb(205,136,37)" fg:x="235" fg:w="2923"/><text x="0.3861%" y="2351.50"></text></g><g><title>boids.exe`bevy_app::app::App::add_boxed_plugin(alloc::boxed::Box&lt;dyn$ (2,923 samples, 1.69%)</title><rect x="0.1361%" y="2325" width="1.6924%" height="15" fill="rgb(250,205,27)" fg:x="235" fg:w="2923"/><text x="0.3861%" y="2335.50"></text></g><g><title>boids.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe (2,923 samples, 1.69%)</title><rect x="0.1361%" y="2309" width="1.6924%" height="15" fill="rgb(210,80,43)" fg:x="235" fg:w="2923"/><text x="0.3861%" y="2319.50"></text></g><g><title>boids.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe (2,923 samples, 1.69%)</title><rect x="0.1361%" y="2293" width="1.6924%" height="15" fill="rgb(247,160,36)" fg:x="235" fg:w="2923"/><text x="0.3861%" y="2303.50"></text></g><g><title>boids.exe`std::panicking::try::do_call (2,923 samples, 1.69%)</title><rect x="0.1361%" y="2277" width="1.6924%" height="15" fill="rgb(234,13,49)" fg:x="235" fg:w="2923"/><text x="0.3861%" y="2287.50"></text></g><g><title>boids.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe (2,923 samples, 1.69%)</title><rect x="0.1361%" y="2261" width="1.6924%" height="15" fill="rgb(234,122,0)" fg:x="235" fg:w="2923"/><text x="0.3861%" y="2271.50"></text></g><g><title>boids.exe`core::ops::function::FnOnce::call_once (2,923 samples, 1.69%)</title><rect x="0.1361%" y="2245" width="1.6924%" height="15" fill="rgb(207,146,38)" fg:x="235" fg:w="2923"/><text x="0.3861%" y="2255.50"></text></g><g><title>boids.exe`bevy_app::app::impl$2::add_boxed_plugin::closure$0 (2,923 samples, 1.69%)</title><rect x="0.1361%" y="2229" width="1.6924%" height="15" fill="rgb(207,177,25)" fg:x="235" fg:w="2923"/><text x="0.3861%" y="2239.50"></text></g><g><title>boids.exe`bevy_winit::impl$0::build&lt;bevy_winit::WakeUp&gt;(bevy_winit::WinitPlugin (18 samples, 0.01%)</title><rect x="1.8181%" y="2213" width="0.0104%" height="15" fill="rgb(211,178,42)" fg:x="3140" fg:w="18"/><text x="2.0681%" y="2223.50"></text></g><g><title>boids.exe`enum2$&lt;core::result::Result&lt;regex_automata::nfa::thompson::nfa::NFA,regex_automata::nfa::thompson::error::BuildError&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;regex_automata::nfa::thompson::nfa::NFA,regex_automata::nfa::thompson::error::BuildError&gt; &gt;, regex_automata::meta::error::BuildError (*) (19 samples, 0.01%)</title><rect x="1.8476%" y="1733" width="0.0110%" height="15" fill="rgb(230,69,54)" fg:x="3191" fg:w="19"/><text x="2.0976%" y="1743.50"></text></g><g><title>boids.exe`regex_automata::nfa::thompson::compiler::Compiler::compile&lt;ref$&lt;regex_syntax::hir::Hir&gt; &gt;(ref$&lt;slice2$&lt;ref$ (19 samples, 0.01%)</title><rect x="1.8476%" y="1717" width="0.0110%" height="15" fill="rgb(214,135,41)" fg:x="3191" fg:w="19"/><text x="2.0976%" y="1727.50"></text></g><g><title>boids.exe`bevy_render::render_resource::pipeline_cache::get_capabilities (32 samples, 0.02%)</title><rect x="1.8407%" y="2037" width="0.0185%" height="15" fill="rgb(237,67,25)" fg:x="3179" fg:w="32"/><text x="2.0907%" y="2047.50"></text></g><g><title>boids.exe`naga::valid::Capabilities::set (32 samples, 0.02%)</title><rect x="1.8407%" y="2021" width="0.0185%" height="15" fill="rgb(222,189,50)" fg:x="3179" fg:w="32"/><text x="2.0907%" y="2031.50"></text></g><g><title>boids.exe`naga::valid::_::InternalBitFlags::set (32 samples, 0.02%)</title><rect x="1.8407%" y="2005" width="0.0185%" height="15" fill="rgb(245,148,34)" fg:x="3179" fg:w="32"/><text x="2.0907%" y="2015.50"></text></g><g><title>boids.exe`naga_oil::compose::Composer::non_validating (32 samples, 0.02%)</title><rect x="1.8407%" y="1989" width="0.0185%" height="15" fill="rgb(222,29,6)" fg:x="3179" fg:w="32"/><text x="2.0907%" y="1999.50"></text></g><g><title>boids.exe`naga_oil::compose::impl$5::default (32 samples, 0.02%)</title><rect x="1.8407%" y="1973" width="0.0185%" height="15" fill="rgb(221,189,43)" fg:x="3179" fg:w="32"/><text x="2.0907%" y="1983.50"></text></g><g><title>boids.exe`naga_oil::compose::preprocess::impl$0::default (22 samples, 0.01%)</title><rect x="1.8464%" y="1957" width="0.0127%" height="15" fill="rgb(207,36,27)" fg:x="3189" fg:w="22"/><text x="2.0964%" y="1967.50"></text></g><g><title>boids.exe`enum2$&lt;core::result::Result&lt;regex::regex::string::Regex,enum2$&lt;regex::error::Error&gt; &gt; &gt;::unwrap(enum2$&lt;core::result::Result&lt;regex::regex::string::Regex,enum2$ (22 samples, 0.01%)</title><rect x="1.8464%" y="1941" width="0.0127%" height="15" fill="rgb(217,90,24)" fg:x="3189" fg:w="22"/><text x="2.0964%" y="1951.50"></text></g><g><title>boids.exe`regex::regex::string::Regex::new(ref$ (22 samples, 0.01%)</title><rect x="1.8464%" y="1925" width="0.0127%" height="15" fill="rgb(224,66,35)" fg:x="3189" fg:w="22"/><text x="2.0964%" y="1935.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place (22 samples, 0.01%)</title><rect x="1.8464%" y="1909" width="0.0127%" height="15" fill="rgb(221,13,50)" fg:x="3189" fg:w="22"/><text x="2.0964%" y="1919.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place (22 samples, 0.01%)</title><rect x="1.8464%" y="1893" width="0.0127%" height="15" fill="rgb(236,68,49)" fg:x="3189" fg:w="22"/><text x="2.0964%" y="1903.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(alloc::vec::Vec (22 samples, 0.01%)</title><rect x="1.8464%" y="1877" width="0.0127%" height="15" fill="rgb(229,146,28)" fg:x="3189" fg:w="22"/><text x="2.0964%" y="1887.50"></text></g><g><title>boids.exe`alloc::vec::impl$25::drop(alloc::vec::Vec (22 samples, 0.01%)</title><rect x="1.8464%" y="1861" width="0.0127%" height="15" fill="rgb(225,31,38)" fg:x="3189" fg:w="22"/><text x="2.0964%" y="1871.50"></text></g><g><title>boids.exe`regex::builders::Builder::build_one_string (22 samples, 0.01%)</title><rect x="1.8464%" y="1845" width="0.0127%" height="15" fill="rgb(250,208,3)" fg:x="3189" fg:w="22"/><text x="2.0964%" y="1855.50"></text></g><g><title>boids.exe`regex_automata::meta::regex::Builder::build(ref$ (22 samples, 0.01%)</title><rect x="1.8464%" y="1829" width="0.0127%" height="15" fill="rgb(246,54,23)" fg:x="3189" fg:w="22"/><text x="2.0964%" y="1839.50"></text></g><g><title>boids.exe`regex_automata::meta::regex::Builder::build_many(ref$&lt;slice2$&lt;ref$ (22 samples, 0.01%)</title><rect x="1.8464%" y="1813" width="0.0127%" height="15" fill="rgb(243,76,11)" fg:x="3189" fg:w="22"/><text x="2.0964%" y="1823.50"></text></g><g><title>boids.exe`regex_automata::meta::regex::Builder::build_many_from_hir(ref$&lt;slice2$ (20 samples, 0.01%)</title><rect x="1.8476%" y="1797" width="0.0116%" height="15" fill="rgb(245,21,50)" fg:x="3191" fg:w="20"/><text x="2.0976%" y="1807.50"></text></g><g><title>boids.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;alloc::sync::Arc&lt;dyn$ (20 samples, 0.01%)</title><rect x="1.8476%" y="1781" width="0.0116%" height="15" fill="rgb(228,9,43)" fg:x="3191" fg:w="20"/><text x="2.0976%" y="1791.50"></text></g><g><title>boids.exe`regex_automata::meta::strategy::new(regex_automata::meta::regex::RegexInfo*, ref$&lt;slice2$&lt;ref$ (20 samples, 0.01%)</title><rect x="1.8476%" y="1765" width="0.0116%" height="15" fill="rgb(208,100,47)" fg:x="3191" fg:w="20"/><text x="2.0976%" y="1775.50"></text></g><g><title>boids.exe`regex_automata::meta::strategy::Core::new(regex_automata::meta::regex::RegexInfo, enum2$&lt;core::option::Option&lt;regex_automata::util::prefilter::Prefilter&gt; &gt;, ref$&lt;slice2$&lt;ref$ (20 samples, 0.01%)</title><rect x="1.8476%" y="1749" width="0.0116%" height="15" fill="rgb(232,26,8)" fg:x="3191" fg:w="20"/><text x="2.0976%" y="1759.50"></text></g><g><title>boids.exe`bevy_app::sub_app::SubApp::insert_resource (61 samples, 0.04%)</title><rect x="1.8407%" y="2149" width="0.0353%" height="15" fill="rgb(216,166,38)" fg:x="3179" fg:w="61"/><text x="2.0907%" y="2159.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::insert_resource (61 samples, 0.04%)</title><rect x="1.8407%" y="2133" width="0.0353%" height="15" fill="rgb(251,202,51)" fg:x="3179" fg:w="61"/><text x="2.0907%" y="2143.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::insert_resource_with_caller(bevy_render::render_resource::pipeline_cache::PipelineCache, bevy_ecs::change_detection::MaybeLocation&lt;ref$ (61 samples, 0.04%)</title><rect x="1.8407%" y="2117" width="0.0353%" height="15" fill="rgb(254,216,34)" fg:x="3179" fg:w="61"/><text x="2.0907%" y="2127.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::components_registrator (61 samples, 0.04%)</title><rect x="1.8407%" y="2101" width="0.0353%" height="15" fill="rgb(251,32,27)" fg:x="3179" fg:w="61"/><text x="2.0907%" y="2111.50"></text></g><g><title>boids.exe`bevy_ecs::component::ComponentsRegistrator::new (61 samples, 0.04%)</title><rect x="1.8407%" y="2085" width="0.0353%" height="15" fill="rgb(208,127,28)" fg:x="3179" fg:w="61"/><text x="2.0907%" y="2095.50"></text></g><g><title>boids.exe`bevy_render::render_resource::pipeline_cache::PipelineCache::new (61 samples, 0.04%)</title><rect x="1.8407%" y="2069" width="0.0353%" height="15" fill="rgb(224,137,22)" fg:x="3179" fg:w="61"/><text x="2.0907%" y="2079.50"></text></g><g><title>boids.exe`bevy_render::render_resource::pipeline_cache::ShaderCache::new (61 samples, 0.04%)</title><rect x="1.8407%" y="2053" width="0.0353%" height="15" fill="rgb(254,70,32)" fg:x="3179" fg:w="61"/><text x="2.0907%" y="2063.50"></text></g><g><title>boids.exe`naga_oil::compose::Composer::with_capabilities (29 samples, 0.02%)</title><rect x="1.8592%" y="2037" width="0.0168%" height="15" fill="rgb(229,75,37)" fg:x="3211" fg:w="29"/><text x="2.1092%" y="2047.50"></text></g><g><title>boids.exe`naga_oil::compose::impl$5::default (28 samples, 0.02%)</title><rect x="1.8598%" y="2021" width="0.0162%" height="15" fill="rgb(252,64,23)" fg:x="3212" fg:w="28"/><text x="2.1098%" y="2031.50"></text></g><g><title>boids.exe`naga_oil::compose::preprocess::impl$0::default (19 samples, 0.01%)</title><rect x="1.8650%" y="2005" width="0.0110%" height="15" fill="rgb(232,162,48)" fg:x="3221" fg:w="19"/><text x="2.1150%" y="2015.50"></text></g><g><title>boids.exe`enum2$&lt;core::result::Result&lt;regex::regex::string::Regex,enum2$&lt;regex::error::Error&gt; &gt; &gt;::unwrap(enum2$&lt;core::result::Result&lt;regex::regex::string::Regex,enum2$ (19 samples, 0.01%)</title><rect x="1.8650%" y="1989" width="0.0110%" height="15" fill="rgb(246,160,12)" fg:x="3221" fg:w="19"/><text x="2.1150%" y="1999.50"></text></g><g><title>boids.exe`regex::regex::string::Regex::new(ref$ (19 samples, 0.01%)</title><rect x="1.8650%" y="1973" width="0.0110%" height="15" fill="rgb(247,166,0)" fg:x="3221" fg:w="19"/><text x="2.1150%" y="1983.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place (19 samples, 0.01%)</title><rect x="1.8650%" y="1957" width="0.0110%" height="15" fill="rgb(249,219,21)" fg:x="3221" fg:w="19"/><text x="2.1150%" y="1967.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place (19 samples, 0.01%)</title><rect x="1.8650%" y="1941" width="0.0110%" height="15" fill="rgb(205,209,3)" fg:x="3221" fg:w="19"/><text x="2.1150%" y="1951.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(alloc::vec::Vec (19 samples, 0.01%)</title><rect x="1.8650%" y="1925" width="0.0110%" height="15" fill="rgb(243,44,1)" fg:x="3221" fg:w="19"/><text x="2.1150%" y="1935.50"></text></g><g><title>boids.exe`alloc::vec::impl$25::drop(alloc::vec::Vec (19 samples, 0.01%)</title><rect x="1.8650%" y="1909" width="0.0110%" height="15" fill="rgb(206,159,16)" fg:x="3221" fg:w="19"/><text x="2.1150%" y="1919.50"></text></g><g><title>boids.exe`regex::builders::Builder::build_one_string (19 samples, 0.01%)</title><rect x="1.8650%" y="1893" width="0.0110%" height="15" fill="rgb(244,77,30)" fg:x="3221" fg:w="19"/><text x="2.1150%" y="1903.50"></text></g><g><title>boids.exe`regex_automata::meta::regex::Builder::build(ref$ (19 samples, 0.01%)</title><rect x="1.8650%" y="1877" width="0.0110%" height="15" fill="rgb(218,69,12)" fg:x="3221" fg:w="19"/><text x="2.1150%" y="1887.50"></text></g><g><title>boids.exe`regex_automata::meta::regex::Builder::build_many(ref$&lt;slice2$&lt;ref$ (19 samples, 0.01%)</title><rect x="1.8650%" y="1861" width="0.0110%" height="15" fill="rgb(212,87,7)" fg:x="3221" fg:w="19"/><text x="2.1150%" y="1871.50"></text></g><g><title>boids.exe`bevy_render::impl$3::finish (64 samples, 0.04%)</title><rect x="1.8407%" y="2165" width="0.0371%" height="15" fill="rgb(245,114,25)" fg:x="3179" fg:w="64"/><text x="2.0907%" y="2175.50"></text></g><g><title>boids.exe`bevy_app::app::App::finish (82 samples, 0.05%)</title><rect x="1.8343%" y="2213" width="0.0475%" height="15" fill="rgb(210,61,42)" fg:x="3168" fg:w="82"/><text x="2.0843%" y="2223.50"></text></g><g><title>boids.exe`core::slice::iter::impl$182::next(core::slice::iter::Iter&lt;alloc::boxed::Box&lt;dyn$ (82 samples, 0.05%)</title><rect x="1.8343%" y="2197" width="0.0475%" height="15" fill="rgb(211,52,33)" fg:x="3168" fg:w="82"/><text x="2.0843%" y="2207.50"></text></g><g><title>boids.exe`core::ptr::non_null::NonNull&lt;alloc::boxed::Box&lt;dyn$&lt;bevy_app::plugin::Plugin&gt;,alloc::alloc::Global&gt; &gt;::add(core::ptr::non_null::NonNull&lt;alloc::boxed::Box&lt;dyn$ (82 samples, 0.05%)</title><rect x="1.8343%" y="2181" width="0.0475%" height="15" fill="rgb(234,58,33)" fg:x="3168" fg:w="82"/><text x="2.0843%" y="2191.50"></text></g><g><title>`0x7FF89D65293F (129 samples, 0.07%)</title><rect x="1.8829%" y="2149" width="0.0747%" height="15" fill="rgb(220,115,36)" fg:x="3252" fg:w="129"/><text x="2.1329%" y="2159.50"></text></g><g><title>`0x7FF89B511524 (129 samples, 0.07%)</title><rect x="1.8829%" y="2133" width="0.0747%" height="15" fill="rgb(243,153,54)" fg:x="3252" fg:w="129"/><text x="2.1329%" y="2143.50"></text></g><g><title>`0x7FF89D65280C (130 samples, 0.08%)</title><rect x="1.8829%" y="2165" width="0.0753%" height="15" fill="rgb(251,47,18)" fg:x="3252" fg:w="130"/><text x="2.1329%" y="2175.50"></text></g><g><title>`0x7FF865F4A129 (29 samples, 0.02%)</title><rect x="1.9767%" y="565" width="0.0168%" height="15" fill="rgb(242,102,42)" fg:x="3414" fg:w="29"/><text x="2.2267%" y="575.50"></text></g><g><title>`0x7FF817188D36 (29 samples, 0.02%)</title><rect x="1.9767%" y="549" width="0.0168%" height="15" fill="rgb(234,31,38)" fg:x="3414" fg:w="29"/><text x="2.2267%" y="559.50"></text></g><g><title>`0x7FF817188165 (24 samples, 0.01%)</title><rect x="1.9796%" y="533" width="0.0139%" height="15" fill="rgb(221,117,51)" fg:x="3419" fg:w="24"/><text x="2.2296%" y="543.50"></text></g><g><title>`0x7FF8172929EE (24 samples, 0.01%)</title><rect x="1.9796%" y="517" width="0.0139%" height="15" fill="rgb(212,20,18)" fg:x="3419" fg:w="24"/><text x="2.2296%" y="527.50"></text></g><g><title>`0x7FF817290F30 (22 samples, 0.01%)</title><rect x="1.9808%" y="501" width="0.0127%" height="15" fill="rgb(245,133,36)" fg:x="3421" fg:w="22"/><text x="2.2308%" y="511.50"></text></g><g><title>`0x7FF8172E10F4 (22 samples, 0.01%)</title><rect x="1.9808%" y="485" width="0.0127%" height="15" fill="rgb(212,6,19)" fg:x="3421" fg:w="22"/><text x="2.2308%" y="495.50"></text></g><g><title>`0x7FF8172E1858 (19 samples, 0.01%)</title><rect x="1.9825%" y="469" width="0.0110%" height="15" fill="rgb(218,1,36)" fg:x="3424" fg:w="19"/><text x="2.2325%" y="479.50"></text></g><g><title>`0x7FF853BC93C0 (19 samples, 0.01%)</title><rect x="1.9825%" y="453" width="0.0110%" height="15" fill="rgb(246,84,54)" fg:x="3424" fg:w="19"/><text x="2.2325%" y="463.50"></text></g><g><title>`0x7FF865F82DDE (30 samples, 0.02%)</title><rect x="1.9767%" y="613" width="0.0174%" height="15" fill="rgb(242,110,6)" fg:x="3414" fg:w="30"/><text x="2.2267%" y="623.50"></text></g><g><title>`0x7FF8172383BE (30 samples, 0.02%)</title><rect x="1.9767%" y="597" width="0.0174%" height="15" fill="rgb(214,47,5)" fg:x="3414" fg:w="30"/><text x="2.2267%" y="607.50"></text></g><g><title>`0x7FF8843418DB (30 samples, 0.02%)</title><rect x="1.9767%" y="581" width="0.0174%" height="15" fill="rgb(218,159,25)" fg:x="3414" fg:w="30"/><text x="2.2267%" y="591.50"></text></g><g><title>boids.exe`alloc::sync::Arc&lt;wgpu_hal::vulkan::InstanceShared,alloc::alloc::Global&gt;::drop_slow&lt;wgpu_hal::vulkan::InstanceShared,alloc::alloc::Global&gt; (53 samples, 0.03%)</title><rect x="1.9761%" y="677" width="0.0307%" height="15" fill="rgb(215,211,28)" fg:x="3413" fg:w="53"/><text x="2.2261%" y="687.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place (52 samples, 0.03%)</title><rect x="1.9767%" y="661" width="0.0301%" height="15" fill="rgb(238,59,32)" fg:x="3414" fg:w="52"/><text x="2.2267%" y="671.50"></text></g><g><title>boids.exe`wgpu_hal::vulkan::instance::impl$4::drop (52 samples, 0.03%)</title><rect x="1.9767%" y="645" width="0.0301%" height="15" fill="rgb(226,82,3)" fg:x="3414" fg:w="52"/><text x="2.2267%" y="655.50"></text></g><g><title>boids.exe`enum2$&lt;core::option::Option&lt;wgpu_hal::vulkan::DebugUtils&gt; &gt;::inspect(enum2$&lt;core::option::Option (52 samples, 0.03%)</title><rect x="1.9767%" y="629" width="0.0301%" height="15" fill="rgb(240,164,32)" fg:x="3414" fg:w="52"/><text x="2.2267%" y="639.50"></text></g><g><title>`0x7FF865F82ECF (21 samples, 0.01%)</title><rect x="1.9947%" y="613" width="0.0122%" height="15" fill="rgb(232,46,7)" fg:x="3445" fg:w="21"/><text x="2.2447%" y="623.50"></text></g><g><title>`0x7FF865F7491F (21 samples, 0.01%)</title><rect x="1.9947%" y="597" width="0.0122%" height="15" fill="rgb(229,129,53)" fg:x="3445" fg:w="21"/><text x="2.2447%" y="607.50"></text></g><g><title>`0x7FF865F5EFF3 (21 samples, 0.01%)</title><rect x="1.9947%" y="581" width="0.0122%" height="15" fill="rgb(234,188,29)" fg:x="3445" fg:w="21"/><text x="2.2447%" y="591.50"></text></g><g><title>`0x7FF89AB8E40E (21 samples, 0.01%)</title><rect x="1.9947%" y="565" width="0.0122%" height="15" fill="rgb(246,141,4)" fg:x="3445" fg:w="21"/><text x="2.2447%" y="575.50"></text></g><g><title>`0x7FF89D8DD415 (20 samples, 0.01%)</title><rect x="1.9953%" y="549" width="0.0116%" height="15" fill="rgb(229,23,39)" fg:x="3446" fg:w="20"/><text x="2.2453%" y="559.50"></text></g><g><title>`0x7FF89D8DD49E (20 samples, 0.01%)</title><rect x="1.9953%" y="533" width="0.0116%" height="15" fill="rgb(206,12,3)" fg:x="3446" fg:w="20"/><text x="2.2453%" y="543.50"></text></g><g><title>`0x7FF89D91B4FF (20 samples, 0.01%)</title><rect x="1.9953%" y="517" width="0.0116%" height="15" fill="rgb(252,226,20)" fg:x="3446" fg:w="20"/><text x="2.2453%" y="527.50"></text></g><g><title>`0x7FF89D91BAC6 (20 samples, 0.01%)</title><rect x="1.9953%" y="501" width="0.0116%" height="15" fill="rgb(216,123,35)" fg:x="3446" fg:w="20"/><text x="2.2453%" y="511.50"></text></g><g><title>`0x7FF89D8D8BAF (20 samples, 0.01%)</title><rect x="1.9953%" y="485" width="0.0116%" height="15" fill="rgb(212,68,40)" fg:x="3446" fg:w="20"/><text x="2.2453%" y="495.50"></text></g><g><title>`0x7FF819DFF32E (20 samples, 0.01%)</title><rect x="1.9953%" y="469" width="0.0116%" height="15" fill="rgb(254,125,32)" fg:x="3446" fg:w="20"/><text x="2.2453%" y="479.50"></text></g><g><title>`0x7FF819DFF20D (20 samples, 0.01%)</title><rect x="1.9953%" y="453" width="0.0116%" height="15" fill="rgb(253,97,22)" fg:x="3446" fg:w="20"/><text x="2.2453%" y="463.50"></text></g><g><title>`0x7FF819DFEBBB (20 samples, 0.01%)</title><rect x="1.9953%" y="437" width="0.0116%" height="15" fill="rgb(241,101,14)" fg:x="3446" fg:w="20"/><text x="2.2453%" y="447.50"></text></g><g><title>`0x7FF819E2A35B (20 samples, 0.01%)</title><rect x="1.9953%" y="421" width="0.0116%" height="15" fill="rgb(238,103,29)" fg:x="3446" fg:w="20"/><text x="2.2453%" y="431.50"></text></g><g><title>`0x7FF819E2A1DD (20 samples, 0.01%)</title><rect x="1.9953%" y="405" width="0.0116%" height="15" fill="rgb(233,195,47)" fg:x="3446" fg:w="20"/><text x="2.2453%" y="415.50"></text></g><g><title>`0x7FF819E2A25E (20 samples, 0.01%)</title><rect x="1.9953%" y="389" width="0.0116%" height="15" fill="rgb(246,218,30)" fg:x="3446" fg:w="20"/><text x="2.2453%" y="399.50"></text></g><g><title>`0x7FF819E36221 (20 samples, 0.01%)</title><rect x="1.9953%" y="373" width="0.0116%" height="15" fill="rgb(219,145,47)" fg:x="3446" fg:w="20"/><text x="2.2453%" y="383.50"></text></g><g><title>`0x7FF819E35EF5 (20 samples, 0.01%)</title><rect x="1.9953%" y="357" width="0.0116%" height="15" fill="rgb(243,12,26)" fg:x="3446" fg:w="20"/><text x="2.2453%" y="367.50"></text></g><g><title>`0x7FF819E36146 (20 samples, 0.01%)</title><rect x="1.9953%" y="341" width="0.0116%" height="15" fill="rgb(214,87,16)" fg:x="3446" fg:w="20"/><text x="2.2453%" y="351.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(alloc::sync::Weak&lt;wgpu::backend::wgpu_core::CoreBindGroup,ref$ (68 samples, 0.04%)</title><rect x="1.9686%" y="949" width="0.0394%" height="15" fill="rgb(208,99,42)" fg:x="3400" fg:w="68"/><text x="2.2186%" y="959.50"></text></g><g><title>boids.exe`alloc::sync::impl$48::drop(alloc::sync::Weak&lt;wgpu::backend::wgpu_core::CoreBindGroup,ref$ (68 samples, 0.04%)</title><rect x="1.9686%" y="933" width="0.0394%" height="15" fill="rgb(253,99,2)" fg:x="3400" fg:w="68"/><text x="2.2186%" y="943.50"></text></g><g><title>boids.exe`alloc::sync::Weak&lt;wgpu::backend::wgpu_core::CoreBindGroup,ref$&lt;alloc::alloc::Global&gt; &gt;::inner (68 samples, 0.04%)</title><rect x="1.9686%" y="917" width="0.0394%" height="15" fill="rgb(220,168,23)" fg:x="3400" fg:w="68"/><text x="2.2186%" y="927.50"></text></g><g><title>boids.exe`alloc::rc::is_dangling(alloc::sync::ArcInner (68 samples, 0.04%)</title><rect x="1.9686%" y="901" width="0.0394%" height="15" fill="rgb(242,38,24)" fg:x="3400" fg:w="68"/><text x="2.2186%" y="911.50"></text></g><g><title>boids.exe`alloc::sync::Arc&lt;wgpu_core::global::Global,alloc::alloc::Global&gt;::drop_slow&lt;wgpu_core::global::Global,alloc::alloc::Global&gt; (68 samples, 0.04%)</title><rect x="1.9686%" y="885" width="0.0394%" height="15" fill="rgb(225,182,9)" fg:x="3400" fg:w="68"/><text x="2.2186%" y="895.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place (68 samples, 0.04%)</title><rect x="1.9686%" y="869" width="0.0394%" height="15" fill="rgb(243,178,37)" fg:x="3400" fg:w="68"/><text x="2.2186%" y="879.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place (68 samples, 0.04%)</title><rect x="1.9686%" y="853" width="0.0394%" height="15" fill="rgb(232,139,19)" fg:x="3400" fg:w="68"/><text x="2.2186%" y="863.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;tuple$&lt;wgpu_types::Backend,alloc::boxed::Box&lt;dyn$ (68 samples, 0.04%)</title><rect x="1.9686%" y="837" width="0.0394%" height="15" fill="rgb(225,201,24)" fg:x="3400" fg:w="68"/><text x="2.2186%" y="847.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec&lt;tuple$&lt;wgpu_types::Backend,alloc::boxed::Box&lt;dyn$ (68 samples, 0.04%)</title><rect x="1.9686%" y="821" width="0.0394%" height="15" fill="rgb(221,47,46)" fg:x="3400" fg:w="68"/><text x="2.2186%" y="831.50"></text></g><g><title>boids.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec&lt;tuple$&lt;wgpu_types::Backend,alloc::boxed::Box&lt;dyn$ (68 samples, 0.04%)</title><rect x="1.9686%" y="805" width="0.0394%" height="15" fill="rgb(249,23,13)" fg:x="3400" fg:w="68"/><text x="2.2186%" y="815.50"></text></g><g><title>boids.exe`alloc::vec::impl$25::drop&lt;tuple$&lt;wgpu_types::Backend,alloc::boxed::Box&lt;dyn$&lt;wgpu_hal::dynamic::instance::DynInstance&gt;,alloc::alloc::Global&gt; &gt;,alloc::alloc::Global&gt;(alloc::vec::Vec&lt;tuple$&lt;wgpu_types::Backend,alloc::boxed::Box&lt;dyn$ (68 samples, 0.04%)</title><rect x="1.9686%" y="789" width="0.0394%" height="15" fill="rgb(219,9,5)" fg:x="3400" fg:w="68"/><text x="2.2186%" y="799.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(ptr_mut$&lt;slice2$&lt;tuple$&lt;wgpu_types::Backend,alloc::boxed::Box&lt;dyn$ (68 samples, 0.04%)</title><rect x="1.9686%" y="773" width="0.0394%" height="15" fill="rgb(254,171,16)" fg:x="3400" fg:w="68"/><text x="2.2186%" y="783.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(tuple$&lt;wgpu_types::Backend,alloc::boxed::Box&lt;dyn$ (68 samples, 0.04%)</title><rect x="1.9686%" y="757" width="0.0394%" height="15" fill="rgb(230,171,20)" fg:x="3400" fg:w="68"/><text x="2.2186%" y="767.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(alloc::boxed::Box&lt;dyn$ (68 samples, 0.04%)</title><rect x="1.9686%" y="741" width="0.0394%" height="15" fill="rgb(210,71,41)" fg:x="3400" fg:w="68"/><text x="2.2186%" y="751.50"></text></g><g><title>boids.exe`alloc::boxed::impl$8::drop(alloc::boxed::Box&lt;dyn$ (68 samples, 0.04%)</title><rect x="1.9686%" y="725" width="0.0394%" height="15" fill="rgb(206,173,20)" fg:x="3400" fg:w="68"/><text x="2.2186%" y="735.50"></text></g><g><title>boids.exe`core::alloc::layout::Layout::for_value_raw(ptr_const$&lt;dyn$ (68 samples, 0.04%)</title><rect x="1.9686%" y="709" width="0.0394%" height="15" fill="rgb(233,88,34)" fg:x="3400" fg:w="68"/><text x="2.2186%" y="719.50"></text></g><g><title>boids.exe`core::mem::size_of_val_raw(ptr_const$&lt;dyn$ (68 samples, 0.04%)</title><rect x="1.9686%" y="693" width="0.0394%" height="15" fill="rgb(223,209,46)" fg:x="3400" fg:w="68"/><text x="2.2186%" y="703.50"></text></g><g><title>boids.exe`alloc::sync::Arc&lt;wgpu::backend::wgpu_core::CoreBindGroup,alloc::alloc::Global&gt;::drop_slow&lt;wgpu::backend::wgpu_core::CoreBindGroup,alloc::alloc::Global&gt; (83 samples, 0.05%)</title><rect x="1.9686%" y="965" width="0.0481%" height="15" fill="rgb(250,43,18)" fg:x="3400" fg:w="83"/><text x="2.2186%" y="975.50"></text></g><g><title>boids.exe`bevy_ecs::component::ComponentDescriptor::drop_ptr&lt;bevy_render::pipelined_rendering::RenderAppChannels&gt;(bevy_ptr::OwningPtr (126 samples, 0.07%)</title><rect x="1.9640%" y="1445" width="0.0730%" height="15" fill="rgb(208,13,10)" fg:x="3392" fg:w="126"/><text x="2.2140%" y="1455.50"></text></g><g><title>boids.exe`bevy_ptr::OwningPtr&lt;bevy_ptr::Aligned&gt;::drop_as(bevy_ptr::OwningPtr (126 samples, 0.07%)</title><rect x="1.9640%" y="1429" width="0.0730%" height="15" fill="rgb(212,200,36)" fg:x="3392" fg:w="126"/><text x="2.2140%" y="1439.50"></text></g><g><title>boids.exe`core::ptr::mut_ptr::impl$0::drop_in_place (126 samples, 0.07%)</title><rect x="1.9640%" y="1413" width="0.0730%" height="15" fill="rgb(225,90,30)" fg:x="3392" fg:w="126"/><text x="2.2140%" y="1423.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place (126 samples, 0.07%)</title><rect x="1.9640%" y="1397" width="0.0730%" height="15" fill="rgb(236,182,39)" fg:x="3392" fg:w="126"/><text x="2.2140%" y="1407.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(async_channel::Sender (126 samples, 0.07%)</title><rect x="1.9640%" y="1381" width="0.0730%" height="15" fill="rgb(212,144,35)" fg:x="3392" fg:w="126"/><text x="2.2140%" y="1391.50"></text></g><g><title>boids.exe`async_channel::impl$2::drop(async_channel::Sender (126 samples, 0.07%)</title><rect x="1.9640%" y="1365" width="0.0730%" height="15" fill="rgb(228,63,44)" fg:x="3392" fg:w="126"/><text x="2.2140%" y="1375.50"></text></g><g><title>boids.exe`alloc::sync::impl$30::deref(alloc::sync::Arc&lt;async_channel::Channel (126 samples, 0.07%)</title><rect x="1.9640%" y="1349" width="0.0730%" height="15" fill="rgb(228,109,6)" fg:x="3392" fg:w="126"/><text x="2.2140%" y="1359.50"></text></g><g><title>boids.exe`alloc::sync::Arc&lt;async_channel::Channel&lt;bevy_app::sub_app::SubApp&gt;,alloc::alloc::Global&gt;::inner (126 samples, 0.07%)</title><rect x="1.9640%" y="1333" width="0.0730%" height="15" fill="rgb(238,117,24)" fg:x="3392" fg:w="126"/><text x="2.2140%" y="1343.50"></text></g><g><title>boids.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;async_channel::Channel&lt;bevy_app::sub_app::SubApp&gt; &gt; &gt;::as_ref (126 samples, 0.07%)</title><rect x="1.9640%" y="1317" width="0.0730%" height="15" fill="rgb(242,26,26)" fg:x="3392" fg:w="126"/><text x="2.2140%" y="1327.50"></text></g><g><title>boids.exe`bevy_render::pipelined_rendering::impl$1::drop (126 samples, 0.07%)</title><rect x="1.9640%" y="1301" width="0.0730%" height="15" fill="rgb(221,92,48)" fg:x="3392" fg:w="126"/><text x="2.2140%" y="1311.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(enum2$&lt;core::option::Option (126 samples, 0.07%)</title><rect x="1.9640%" y="1285" width="0.0730%" height="15" fill="rgb(209,209,32)" fg:x="3392" fg:w="126"/><text x="2.2140%" y="1295.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place&lt;bevy_app::sub_app::SubApp&gt; (126 samples, 0.07%)</title><rect x="1.9640%" y="1269" width="0.0730%" height="15" fill="rgb(221,70,22)" fg:x="3392" fg:w="126"/><text x="2.2140%" y="1279.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place (126 samples, 0.07%)</title><rect x="1.9640%" y="1253" width="0.0730%" height="15" fill="rgb(248,145,5)" fg:x="3392" fg:w="126"/><text x="2.2140%" y="1263.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place&lt;bevy_ecs::storage::Storages&gt; (126 samples, 0.07%)</title><rect x="1.9640%" y="1237" width="0.0730%" height="15" fill="rgb(226,116,26)" fg:x="3392" fg:w="126"/><text x="2.2140%" y="1247.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place&lt;bevy_ecs::storage::resource::Resources&lt;true&gt; &gt;(bevy_ecs::storage::resource::Resources (123 samples, 0.07%)</title><rect x="1.9657%" y="1221" width="0.0712%" height="15" fill="rgb(244,5,17)" fg:x="3395" fg:w="123"/><text x="2.2157%" y="1231.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(bevy_ecs::storage::sparse_set::SparseSet&lt;bevy_ecs::component::ComponentId,bevy_ecs::storage::resource::ResourceData (123 samples, 0.07%)</title><rect x="1.9657%" y="1205" width="0.0712%" height="15" fill="rgb(252,159,33)" fg:x="3395" fg:w="123"/><text x="2.2157%" y="1215.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;bevy_ecs::storage::resource::ResourceData (123 samples, 0.07%)</title><rect x="1.9657%" y="1189" width="0.0712%" height="15" fill="rgb(206,71,0)" fg:x="3395" fg:w="123"/><text x="2.2157%" y="1199.50"></text></g><g><title>boids.exe`alloc::vec::impl$25::drop(alloc::vec::Vec&lt;bevy_ecs::storage::resource::ResourceData (123 samples, 0.07%)</title><rect x="1.9657%" y="1173" width="0.0712%" height="15" fill="rgb(233,118,54)" fg:x="3395" fg:w="123"/><text x="2.2157%" y="1183.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(ptr_mut$&lt;slice2$&lt;bevy_ecs::storage::resource::ResourceData (123 samples, 0.07%)</title><rect x="1.9657%" y="1157" width="0.0712%" height="15" fill="rgb(234,83,48)" fg:x="3395" fg:w="123"/><text x="2.2157%" y="1167.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(bevy_ecs::storage::resource::ResourceData (123 samples, 0.07%)</title><rect x="1.9657%" y="1141" width="0.0712%" height="15" fill="rgb(228,3,54)" fg:x="3395" fg:w="123"/><text x="2.2157%" y="1151.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place (123 samples, 0.07%)</title><rect x="1.9657%" y="1125" width="0.0712%" height="15" fill="rgb(226,155,13)" fg:x="3395" fg:w="123"/><text x="2.2157%" y="1135.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(alloc::vec::Vec (123 samples, 0.07%)</title><rect x="1.9657%" y="1109" width="0.0712%" height="15" fill="rgb(241,28,37)" fg:x="3395" fg:w="123"/><text x="2.2157%" y="1119.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (123 samples, 0.07%)</title><rect x="1.9657%" y="1093" width="0.0712%" height="15" fill="rgb(233,93,10)" fg:x="3395" fg:w="123"/><text x="2.2157%" y="1103.50"></text></g><g><title>boids.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (123 samples, 0.07%)</title><rect x="1.9657%" y="1077" width="0.0712%" height="15" fill="rgb(225,113,19)" fg:x="3395" fg:w="123"/><text x="2.2157%" y="1087.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place&lt;bevy_ecs::storage::blob_vec::BlobVec&gt; (122 samples, 0.07%)</title><rect x="1.9663%" y="1061" width="0.0706%" height="15" fill="rgb(241,2,18)" fg:x="3396" fg:w="122"/><text x="2.2163%" y="1071.50"></text></g><g><title>boids.exe`bevy_ecs::storage::blob_vec::impl$2::drop (122 samples, 0.07%)</title><rect x="1.9663%" y="1045" width="0.0706%" height="15" fill="rgb(228,207,21)" fg:x="3396" fg:w="122"/><text x="2.2163%" y="1055.50"></text></g><g><title>boids.exe`bevy_ecs::storage::blob_vec::BlobVec::clear (122 samples, 0.07%)</title><rect x="1.9663%" y="1029" width="0.0706%" height="15" fill="rgb(213,211,35)" fg:x="3396" fg:w="122"/><text x="2.2163%" y="1039.50"></text></g><g><title>boids.exe`core::iter::range::impl$6::next(core::ops::range::Range (122 samples, 0.07%)</title><rect x="1.9663%" y="1013" width="0.0706%" height="15" fill="rgb(209,83,10)" fg:x="3396" fg:w="122"/><text x="2.2163%" y="1023.50"></text></g><g><title>boids.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (122 samples, 0.07%)</title><rect x="1.9663%" y="997" width="0.0706%" height="15" fill="rgb(209,164,1)" fg:x="3396" fg:w="122"/><text x="2.2163%" y="1007.50"></text></g><g><title>boids.exe`core::cmp::impls::impl$58::lt (122 samples, 0.07%)</title><rect x="1.9663%" y="981" width="0.0706%" height="15" fill="rgb(213,184,43)" fg:x="3396" fg:w="122"/><text x="2.2163%" y="991.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place&lt;bevy_ecs::storage::Storages&gt; (138 samples, 0.08%)</title><rect x="1.9588%" y="1717" width="0.0799%" height="15" fill="rgb(231,61,34)" fg:x="3383" fg:w="138"/><text x="2.2088%" y="1727.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place&lt;bevy_ecs::storage::resource::Resources&lt;true&gt; &gt;(bevy_ecs::storage::resource::Resources (133 samples, 0.08%)</title><rect x="1.9617%" y="1701" width="0.0770%" height="15" fill="rgb(235,75,3)" fg:x="3388" fg:w="133"/><text x="2.2117%" y="1711.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(bevy_ecs::storage::sparse_set::SparseSet&lt;bevy_ecs::component::ComponentId,bevy_ecs::storage::resource::ResourceData (133 samples, 0.08%)</title><rect x="1.9617%" y="1685" width="0.0770%" height="15" fill="rgb(220,106,47)" fg:x="3388" fg:w="133"/><text x="2.2117%" y="1695.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;bevy_ecs::storage::resource::ResourceData (133 samples, 0.08%)</title><rect x="1.9617%" y="1669" width="0.0770%" height="15" fill="rgb(210,196,33)" fg:x="3388" fg:w="133"/><text x="2.2117%" y="1679.50"></text></g><g><title>boids.exe`alloc::vec::impl$25::drop(alloc::vec::Vec&lt;bevy_ecs::storage::resource::ResourceData (133 samples, 0.08%)</title><rect x="1.9617%" y="1653" width="0.0770%" height="15" fill="rgb(229,154,42)" fg:x="3388" fg:w="133"/><text x="2.2117%" y="1663.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(ptr_mut$&lt;slice2$&lt;bevy_ecs::storage::resource::ResourceData (133 samples, 0.08%)</title><rect x="1.9617%" y="1637" width="0.0770%" height="15" fill="rgb(228,114,26)" fg:x="3388" fg:w="133"/><text x="2.2117%" y="1647.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(bevy_ecs::storage::resource::ResourceData (133 samples, 0.08%)</title><rect x="1.9617%" y="1621" width="0.0770%" height="15" fill="rgb(208,144,1)" fg:x="3388" fg:w="133"/><text x="2.2117%" y="1631.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place (133 samples, 0.08%)</title><rect x="1.9617%" y="1605" width="0.0770%" height="15" fill="rgb(239,112,37)" fg:x="3388" fg:w="133"/><text x="2.2117%" y="1615.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(alloc::vec::Vec (133 samples, 0.08%)</title><rect x="1.9617%" y="1589" width="0.0770%" height="15" fill="rgb(210,96,50)" fg:x="3388" fg:w="133"/><text x="2.2117%" y="1599.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (133 samples, 0.08%)</title><rect x="1.9617%" y="1573" width="0.0770%" height="15" fill="rgb(222,178,2)" fg:x="3388" fg:w="133"/><text x="2.2117%" y="1583.50"></text></g><g><title>boids.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (133 samples, 0.08%)</title><rect x="1.9617%" y="1557" width="0.0770%" height="15" fill="rgb(226,74,18)" fg:x="3388" fg:w="133"/><text x="2.2117%" y="1567.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place&lt;bevy_ecs::storage::blob_vec::BlobVec&gt; (133 samples, 0.08%)</title><rect x="1.9617%" y="1541" width="0.0770%" height="15" fill="rgb(225,67,54)" fg:x="3388" fg:w="133"/><text x="2.2117%" y="1551.50"></text></g><g><title>boids.exe`bevy_ecs::storage::blob_vec::impl$2::drop (133 samples, 0.08%)</title><rect x="1.9617%" y="1525" width="0.0770%" height="15" fill="rgb(251,92,32)" fg:x="3388" fg:w="133"/><text x="2.2117%" y="1535.50"></text></g><g><title>boids.exe`bevy_ecs::storage::blob_vec::BlobVec::clear (133 samples, 0.08%)</title><rect x="1.9617%" y="1509" width="0.0770%" height="15" fill="rgb(228,149,22)" fg:x="3388" fg:w="133"/><text x="2.2117%" y="1519.50"></text></g><g><title>boids.exe`core::iter::range::impl$6::next(core::ops::range::Range (133 samples, 0.08%)</title><rect x="1.9617%" y="1493" width="0.0770%" height="15" fill="rgb(243,54,13)" fg:x="3388" fg:w="133"/><text x="2.2117%" y="1503.50"></text></g><g><title>boids.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (133 samples, 0.08%)</title><rect x="1.9617%" y="1477" width="0.0770%" height="15" fill="rgb(243,180,28)" fg:x="3388" fg:w="133"/><text x="2.2117%" y="1487.50"></text></g><g><title>boids.exe`core::cmp::impls::impl$58::lt (133 samples, 0.08%)</title><rect x="1.9617%" y="1461" width="0.0770%" height="15" fill="rgb(208,167,24)" fg:x="3388" fg:w="133"/><text x="2.2117%" y="1471.50"></text></g><g><title>boids.exe`bevy_winit::state::winit_runner&lt;bevy_winit::WakeUp&gt;(bevy_app::app::App, winit::event_loop::EventLoop (140 samples, 0.08%)</title><rect x="1.9582%" y="1813" width="0.0811%" height="15" fill="rgb(245,73,45)" fg:x="3382" fg:w="140"/><text x="2.2082%" y="1823.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place&lt;bevy_winit::state::WinitAppRunnerState&lt;bevy_winit::WakeUp&gt; &gt;(bevy_winit::state::WinitAppRunnerState (140 samples, 0.08%)</title><rect x="1.9582%" y="1797" width="0.0811%" height="15" fill="rgb(237,203,48)" fg:x="3382" fg:w="140"/><text x="2.2082%" y="1807.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place&lt;bevy_app::app::App&gt; (140 samples, 0.08%)</title><rect x="1.9582%" y="1781" width="0.0811%" height="15" fill="rgb(211,197,16)" fg:x="3382" fg:w="140"/><text x="2.2082%" y="1791.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place (140 samples, 0.08%)</title><rect x="1.9582%" y="1765" width="0.0811%" height="15" fill="rgb(243,99,51)" fg:x="3382" fg:w="140"/><text x="2.2082%" y="1775.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place (140 samples, 0.08%)</title><rect x="1.9582%" y="1749" width="0.0811%" height="15" fill="rgb(215,123,29)" fg:x="3382" fg:w="140"/><text x="2.2082%" y="1759.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place (139 samples, 0.08%)</title><rect x="1.9588%" y="1733" width="0.0805%" height="15" fill="rgb(239,186,37)" fg:x="3383" fg:w="139"/><text x="2.2088%" y="1743.50"></text></g><g><title>boids.exe`std::panic::resume_unwind (142 samples, 0.08%)</title><rect x="1.9582%" y="2165" width="0.0822%" height="15" fill="rgb(252,136,39)" fg:x="3382" fg:w="142"/><text x="2.2082%" y="2175.50"></text></g><g><title>boids.exe`std::panicking::rust_panic_without_hook (142 samples, 0.08%)</title><rect x="1.9582%" y="2149" width="0.0822%" height="15" fill="rgb(223,213,32)" fg:x="3382" fg:w="142"/><text x="2.2082%" y="2159.50"></text></g><g><title>boids.exe`std::panicking::rust_panic (142 samples, 0.08%)</title><rect x="1.9582%" y="2133" width="0.0822%" height="15" fill="rgb(233,115,5)" fg:x="3382" fg:w="142"/><text x="2.2082%" y="2143.50"></text></g><g><title>boids.exe`panic_unwind::__rust_start_panic (142 samples, 0.08%)</title><rect x="1.9582%" y="2117" width="0.0822%" height="15" fill="rgb(207,226,44)" fg:x="3382" fg:w="142"/><text x="2.2082%" y="2127.50"></text></g><g><title>boids.exe`panic_unwind::imp::panic (142 samples, 0.08%)</title><rect x="1.9582%" y="2101" width="0.0822%" height="15" fill="rgb(208,126,0)" fg:x="3382" fg:w="142"/><text x="2.2082%" y="2111.50"></text></g><g><title>`0x7FF87D145267 (142 samples, 0.08%)</title><rect x="1.9582%" y="2085" width="0.0822%" height="15" fill="rgb(244,66,21)" fg:x="3382" fg:w="142"/><text x="2.2082%" y="2095.50"></text></g><g><title>`0x7FF89ABB01DC (142 samples, 0.08%)</title><rect x="1.9582%" y="2069" width="0.0822%" height="15" fill="rgb(222,97,12)" fg:x="3382" fg:w="142"/><text x="2.2082%" y="2079.50"></text></g><g><title>`0x7FF89D904975 (142 samples, 0.08%)</title><rect x="1.9582%" y="2053" width="0.0822%" height="15" fill="rgb(219,213,19)" fg:x="3382" fg:w="142"/><text x="2.2082%" y="2063.50"></text></g><g><title>`0x7FF89D8CE8A6 (142 samples, 0.08%)</title><rect x="1.9582%" y="2037" width="0.0822%" height="15" fill="rgb(252,169,30)" fg:x="3382" fg:w="142"/><text x="2.2082%" y="2047.50"></text></g><g><title>`0x7FF89D955E1F (142 samples, 0.08%)</title><rect x="1.9582%" y="2021" width="0.0822%" height="15" fill="rgb(206,32,51)" fg:x="3382" fg:w="142"/><text x="2.2082%" y="2031.50"></text></g><g><title>`0x7FF87D14F541 (142 samples, 0.08%)</title><rect x="1.9582%" y="2005" width="0.0822%" height="15" fill="rgb(250,172,42)" fg:x="3382" fg:w="142"/><text x="2.2082%" y="2015.50"></text></g><g><title>`0x7FF87D142D90 (142 samples, 0.08%)</title><rect x="1.9582%" y="1989" width="0.0822%" height="15" fill="rgb(209,34,43)" fg:x="3382" fg:w="142"/><text x="2.2082%" y="1999.50"></text></g><g><title>`0x7FF87D141D00 (142 samples, 0.08%)</title><rect x="1.9582%" y="1973" width="0.0822%" height="15" fill="rgb(223,11,35)" fg:x="3382" fg:w="142"/><text x="2.2082%" y="1983.50"></text></g><g><title>`0x7FF87D1418E5 (142 samples, 0.08%)</title><rect x="1.9582%" y="1957" width="0.0822%" height="15" fill="rgb(251,219,26)" fg:x="3382" fg:w="142"/><text x="2.2082%" y="1967.50"></text></g><g><title>`0x7FF87D14F0CA (142 samples, 0.08%)</title><rect x="1.9582%" y="1941" width="0.0822%" height="15" fill="rgb(231,119,3)" fg:x="3382" fg:w="142"/><text x="2.2082%" y="1951.50"></text></g><g><title>`0x7FF89D8D0194 (142 samples, 0.08%)</title><rect x="1.9582%" y="1925" width="0.0822%" height="15" fill="rgb(216,97,11)" fg:x="3382" fg:w="142"/><text x="2.2082%" y="1935.50"></text></g><g><title>`0x7FF89D955E9F (142 samples, 0.08%)</title><rect x="1.9582%" y="1909" width="0.0822%" height="15" fill="rgb(223,59,9)" fg:x="3382" fg:w="142"/><text x="2.2082%" y="1919.50"></text></g><g><title>`0x7FF87D14F541 (142 samples, 0.08%)</title><rect x="1.9582%" y="1893" width="0.0822%" height="15" fill="rgb(233,93,31)" fg:x="3382" fg:w="142"/><text x="2.2082%" y="1903.50"></text></g><g><title>`0x7FF87D142C94 (142 samples, 0.08%)</title><rect x="1.9582%" y="1877" width="0.0822%" height="15" fill="rgb(239,81,33)" fg:x="3382" fg:w="142"/><text x="2.2082%" y="1887.50"></text></g><g><title>`0x7FF87D14EC04 (142 samples, 0.08%)</title><rect x="1.9582%" y="1861" width="0.0822%" height="15" fill="rgb(213,120,34)" fg:x="3382" fg:w="142"/><text x="2.2082%" y="1871.50"></text></g><g><title>`0x7FF87D143A86 (142 samples, 0.08%)</title><rect x="1.9582%" y="1845" width="0.0822%" height="15" fill="rgb(243,49,53)" fg:x="3382" fg:w="142"/><text x="2.2082%" y="1855.50"></text></g><g><title>`0x7FF87D14F730 (142 samples, 0.08%)</title><rect x="1.9582%" y="1829" width="0.0822%" height="15" fill="rgb(247,216,33)" fg:x="3382" fg:w="142"/><text x="2.2082%" y="1839.50"></text></g><g><title>`0x7FF89B511724 (22 samples, 0.01%)</title><rect x="2.0427%" y="2053" width="0.0127%" height="15" fill="rgb(226,26,14)" fg:x="3528" fg:w="22"/><text x="2.2927%" y="2063.50"></text></g><g><title>`0x7FF89D648771 (38 samples, 0.02%)</title><rect x="2.0404%" y="2101" width="0.0220%" height="15" fill="rgb(215,49,53)" fg:x="3524" fg:w="38"/><text x="2.2904%" y="2111.50"></text></g><g><title>`0x7FF89D648EB8 (38 samples, 0.02%)</title><rect x="2.0404%" y="2085" width="0.0220%" height="15" fill="rgb(245,162,40)" fg:x="3524" fg:w="38"/><text x="2.2904%" y="2095.50"></text></g><g><title>boids.exe`winit::platform_impl::windows::event_loop::thread_event_target_callback (34 samples, 0.02%)</title><rect x="2.0427%" y="2069" width="0.0197%" height="15" fill="rgb(229,68,17)" fg:x="3528" fg:w="34"/><text x="2.2927%" y="2079.50"></text></g><g><title>`0x7FF89D646D29 (25 samples, 0.01%)</title><rect x="2.0642%" y="1877" width="0.0145%" height="15" fill="rgb(213,182,10)" fg:x="3565" fg:w="25"/><text x="2.3142%" y="1887.50"></text></g><g><title>`0x7FF89D6470C5 (25 samples, 0.01%)</title><rect x="2.0642%" y="1861" width="0.0145%" height="15" fill="rgb(245,125,30)" fg:x="3565" fg:w="25"/><text x="2.3142%" y="1871.50"></text></g><g><title>`0x7FF89B5115A4 (25 samples, 0.01%)</title><rect x="2.0642%" y="1845" width="0.0145%" height="15" fill="rgb(232,202,2)" fg:x="3565" fg:w="25"/><text x="2.3142%" y="1855.50"></text></g><g><title>boids.exe`concurrent_queue::ConcurrentQueue&lt;async_task::task::FallibleTask&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,tuple$&lt;&gt; &gt; &gt;::is_empty (27 samples, 0.02%)</title><rect x="2.0862%" y="1205" width="0.0156%" height="15" fill="rgb(237,140,51)" fg:x="3603" fg:w="27"/><text x="2.3362%" y="1215.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::executor::multi_threaded::Context::tick_executor (27 samples, 0.02%)</title><rect x="2.0862%" y="1189" width="0.0156%" height="15" fill="rgb(236,157,25)" fg:x="3603" fg:w="27"/><text x="2.3362%" y="1199.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::executor::multi_threaded::ExecutorState::tick (27 samples, 0.02%)</title><rect x="2.0862%" y="1173" width="0.0156%" height="15" fill="rgb(219,209,0)" fg:x="3603" fg:w="27"/><text x="2.3362%" y="1183.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::executor::multi_threaded::ExecutorState::spawn_system_tasks (27 samples, 0.02%)</title><rect x="2.0862%" y="1157" width="0.0156%" height="15" fill="rgb(240,116,54)" fg:x="3603" fg:w="27"/><text x="2.3362%" y="1167.50"></text></g><g><title>boids.exe`bevy_render::extract (36 samples, 0.02%)</title><rect x="2.0844%" y="1397" width="0.0208%" height="15" fill="rgb(216,10,36)" fg:x="3600" fg:w="36"/><text x="2.3344%" y="1407.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::run_schedule (34 samples, 0.02%)</title><rect x="2.0856%" y="1381" width="0.0197%" height="15" fill="rgb(222,72,44)" fg:x="3602" fg:w="34"/><text x="2.3356%" y="1391.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::schedule_scope(bevy_render::ExtractSchedule, bevy_ecs::world::impl$4::run_schedule::closure_env$0 (34 samples, 0.02%)</title><rect x="2.0856%" y="1365" width="0.0197%" height="15" fill="rgb(232,159,9)" fg:x="3602" fg:w="34"/><text x="2.3356%" y="1375.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::try_schedule_scope(bevy_render::ExtractSchedule, bevy_ecs::world::impl$4::run_schedule::closure_env$0 (34 samples, 0.02%)</title><rect x="2.0856%" y="1349" width="0.0197%" height="15" fill="rgb(210,39,32)" fg:x="3602" fg:w="34"/><text x="2.3356%" y="1359.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::resource_mut (33 samples, 0.02%)</title><rect x="2.0862%" y="1333" width="0.0191%" height="15" fill="rgb(216,194,45)" fg:x="3603" fg:w="33"/><text x="2.3362%" y="1343.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::get_resource_mut (33 samples, 0.02%)</title><rect x="2.0862%" y="1317" width="0.0191%" height="15" fill="rgb(218,18,35)" fg:x="3603" fg:w="33"/><text x="2.3362%" y="1327.50"></text></g><g><title>boids.exe`bevy_ecs::world::unsafe_world_cell::UnsafeWorldCell::get_resource_mut (33 samples, 0.02%)</title><rect x="2.0862%" y="1301" width="0.0191%" height="15" fill="rgb(207,83,51)" fg:x="3603" fg:w="33"/><text x="2.3362%" y="1311.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::schedule::Schedule::run (33 samples, 0.02%)</title><rect x="2.0862%" y="1285" width="0.0191%" height="15" fill="rgb(225,63,43)" fg:x="3603" fg:w="33"/><text x="2.3362%" y="1295.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::executor::multi_threaded::impl$2::run(bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor*, bevy_ecs::schedule::executor::SystemSchedule*, bevy_ecs::world::World*, enum2$&lt;core::option::Option&lt;ref$&lt;fixedbitset::FixedBitSet&gt; &gt; &gt;, void (*)(bevy_ecs::error::bevy_error::BevyError, enum2$ (33 samples, 0.02%)</title><rect x="2.0862%" y="1269" width="0.0191%" height="15" fill="rgb(207,57,36)" fg:x="3603" fg:w="33"/><text x="2.3362%" y="1279.50"></text></g><g><title>boids.exe`bevy_tasks::usages::ComputeTaskPool::get_or_init(bevy_tasks::task_pool::TaskPool (*) (33 samples, 0.02%)</title><rect x="2.0862%" y="1253" width="0.0191%" height="15" fill="rgb(216,99,33)" fg:x="3603" fg:w="33"/><text x="2.3362%" y="1263.50"></text></g><g><title>boids.exe`std::thread::local::LocalKey&lt;alloc::sync::Arc&lt;bevy_tasks::thread_executor::ThreadExecutor,alloc::alloc::Global&gt; &gt;::with(bevy_tasks::task_pool::impl$2::scope_with_executor::closure_env$0&lt;bevy_ecs::schedule::executor::multi_threaded::impl$2::run::closure_env$1,tuple$ (33 samples, 0.02%)</title><rect x="2.0862%" y="1237" width="0.0191%" height="15" fill="rgb(225,42,16)" fg:x="3603" fg:w="33"/><text x="2.3362%" y="1247.50"></text></g><g><title>boids.exe`bevy_tasks::task_pool::TaskPool::scope_with_executor_inner&lt;bevy_ecs::schedule::executor::multi_threaded::impl$2::run::closure_env$1,tuple$&lt;&gt; &gt; (33 samples, 0.02%)</title><rect x="2.0862%" y="1221" width="0.0191%" height="15" fill="rgb(220,201,45)" fg:x="3603" fg:w="33"/><text x="2.3362%" y="1231.50"></text></g><g><title>boids.exe`bevy_ecs::change_detection::impl$58::deref_mut(bevy_ecs::change_detection::Mut (52 samples, 0.03%)</title><rect x="2.0844%" y="1429" width="0.0301%" height="15" fill="rgb(225,33,4)" fg:x="3600" fg:w="52"/><text x="2.3344%" y="1439.50"></text></g><g><title>boids.exe`bevy_ecs::change_detection::impl$57::set_changed(bevy_ecs::change_detection::Mut (52 samples, 0.03%)</title><rect x="2.0844%" y="1413" width="0.0301%" height="15" fill="rgb(224,33,50)" fg:x="3600" fg:w="52"/><text x="2.3344%" y="1423.50"></text></g><g><title>boids.exe`bevy_app::sub_app::SubApp::update (55 samples, 0.03%)</title><rect x="2.0844%" y="1573" width="0.0318%" height="15" fill="rgb(246,198,51)" fg:x="3600" fg:w="55"/><text x="2.3344%" y="1583.50"></text></g><g><title>boids.exe`bevy_app::sub_app::SubApp::run_default_schedule (55 samples, 0.03%)</title><rect x="2.0844%" y="1557" width="0.0318%" height="15" fill="rgb(205,22,4)" fg:x="3600" fg:w="55"/><text x="2.3344%" y="1567.50"></text></g><g><title>boids.exe`bevy_app::sub_app::SubApp::is_building_plugins (55 samples, 0.03%)</title><rect x="2.0844%" y="1541" width="0.0318%" height="15" fill="rgb(206,3,8)" fg:x="3600" fg:w="55"/><text x="2.3344%" y="1551.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::resource_scope&lt;bevy_ecs::schedule::executor::multi_threaded::MainThreadExecutor,tuple$&lt;&gt;,bevy_render::pipelined_rendering::renderer_extract::closure_env$0&gt; (55 samples, 0.03%)</title><rect x="2.0844%" y="1525" width="0.0318%" height="15" fill="rgb(251,23,15)" fg:x="3600" fg:w="55"/><text x="2.3344%" y="1535.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::try_resource_scope (55 samples, 0.03%)</title><rect x="2.0844%" y="1509" width="0.0318%" height="15" fill="rgb(252,88,28)" fg:x="3600" fg:w="55"/><text x="2.3344%" y="1519.50"></text></g><g><title>boids.exe`bevy_render::pipelined_rendering::renderer_extract::closure$0(bevy_render::pipelined_rendering::renderer_extract::closure_env$0, bevy_ecs::world::World*, bevy_ecs::change_detection::Mut (55 samples, 0.03%)</title><rect x="2.0844%" y="1493" width="0.0318%" height="15" fill="rgb(212,127,14)" fg:x="3600" fg:w="55"/><text x="2.3344%" y="1503.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::resource_scope (55 samples, 0.03%)</title><rect x="2.0844%" y="1477" width="0.0318%" height="15" fill="rgb(247,145,37)" fg:x="3600" fg:w="55"/><text x="2.3344%" y="1487.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::try_resource_scope (55 samples, 0.03%)</title><rect x="2.0844%" y="1461" width="0.0318%" height="15" fill="rgb(209,117,53)" fg:x="3600" fg:w="55"/><text x="2.3344%" y="1471.50"></text></g><g><title>boids.exe`bevy_render::pipelined_rendering::renderer_extract::closure$0::closure$0(bevy_render::pipelined_rendering::renderer_extract::closure$0::closure_env$0, bevy_ecs::world::World*, bevy_ecs::change_detection::Mut (55 samples, 0.03%)</title><rect x="2.0844%" y="1445" width="0.0318%" height="15" fill="rgb(212,90,42)" fg:x="3600" fg:w="55"/><text x="2.3344%" y="1455.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::executor::multi_threaded::ExecutorState::spawn_system_tasks (23 samples, 0.01%)</title><rect x="2.1215%" y="949" width="0.0133%" height="15" fill="rgb(218,164,37)" fg:x="3664" fg:w="23"/><text x="2.3715%" y="959.50"></text></g><g><title>boids.exe`concurrent_queue::ConcurrentQueue&lt;async_task::task::FallibleTask&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,tuple$&lt;&gt; &gt; &gt;::is_empty (26 samples, 0.02%)</title><rect x="2.1203%" y="997" width="0.0151%" height="15" fill="rgb(246,65,34)" fg:x="3662" fg:w="26"/><text x="2.3703%" y="1007.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::executor::multi_threaded::Context::tick_executor (26 samples, 0.02%)</title><rect x="2.1203%" y="981" width="0.0151%" height="15" fill="rgb(231,100,33)" fg:x="3662" fg:w="26"/><text x="2.3703%" y="991.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::executor::multi_threaded::ExecutorState::tick (24 samples, 0.01%)</title><rect x="2.1215%" y="965" width="0.0139%" height="15" fill="rgb(228,126,14)" fg:x="3664" fg:w="24"/><text x="2.3715%" y="975.50"></text></g><g><title>boids.exe`bevy_ecs::system::commands::_::impl$0::apply (20 samples, 0.01%)</title><rect x="2.1429%" y="565" width="0.0116%" height="15" fill="rgb(215,173,21)" fg:x="3701" fg:w="20"/><text x="2.3929%" y="575.50"></text></g><g><title>boids.exe`bevy_ecs::world::command_queue::RawCommandQueue::apply_or_drop_queued(enum2$&lt;core::option::Option&lt;core::ptr::non_null::NonNull (19 samples, 0.01%)</title><rect x="2.1435%" y="549" width="0.0110%" height="15" fill="rgb(210,6,40)" fg:x="3702" fg:w="19"/><text x="2.3935%" y="559.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::executor::multi_threaded::apply_deferred(fixedbitset::FixedBitSet*, ref$&lt;slice2$&lt;bevy_utils::syncunsafecell::SyncUnsafeCell&lt;alloc::boxed::Box&lt;dyn$&lt;bevy_ecs::system::system::System&lt;assoc$&lt;In,tuple$&lt;&gt; &gt;,assoc$&lt;Out,enum2$&lt;core::result::Result&lt;tuple$ (24 samples, 0.01%)</title><rect x="2.1423%" y="581" width="0.0139%" height="15" fill="rgb(212,48,18)" fg:x="3700" fg:w="24"/><text x="2.3923%" y="591.50"></text></g><g><title>boids.exe`async_task::raw::RawTask&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block_env$0&gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block_env$0&gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$&lt;&gt; &gt;::run&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block_env$0&gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block_env$0&gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$&lt;&gt; &gt;(tuple$ (43 samples, 0.02%)</title><rect x="2.1412%" y="773" width="0.0249%" height="15" fill="rgb(230,214,11)" fg:x="3698" fg:w="43"/><text x="2.3912%" y="783.50"></text></g><g><title>boids.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;async_task::raw::impl$3::run::closure_env$1&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block_env$0&gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block_env$0&gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$ (42 samples, 0.02%)</title><rect x="2.1417%" y="757" width="0.0243%" height="15" fill="rgb(254,105,39)" fg:x="3699" fg:w="42"/><text x="2.3917%" y="767.50"></text></g><g><title>boids.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;async_task::raw::impl$3::run::closure_env$1&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block_env$0&gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block_env$0&gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$ (42 samples, 0.02%)</title><rect x="2.1417%" y="741" width="0.0243%" height="15" fill="rgb(245,158,5)" fg:x="3699" fg:w="42"/><text x="2.3917%" y="751.50"></text></g><g><title>boids.exe`std::panicking::try::do_call (42 samples, 0.02%)</title><rect x="2.1417%" y="725" width="0.0243%" height="15" fill="rgb(249,208,11)" fg:x="3699" fg:w="42"/><text x="2.3917%" y="735.50"></text></g><g><title>boids.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;async_task::raw::impl$3::run::closure_env$1&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block_env$0&gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block_env$0&gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$ (42 samples, 0.02%)</title><rect x="2.1417%" y="709" width="0.0243%" height="15" fill="rgb(210,39,28)" fg:x="3699" fg:w="42"/><text x="2.3917%" y="719.50"></text></g><g><title>boids.exe`core::ops::function::FnOnce::call_once(async_task::raw::impl$3::run::closure_env$1&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block_env$0&gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block_env$0&gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$ (42 samples, 0.02%)</title><rect x="2.1417%" y="693" width="0.0243%" height="15" fill="rgb(211,56,53)" fg:x="3699" fg:w="42"/><text x="2.3917%" y="703.50"></text></g><g><title>boids.exe`async_task::raw::impl$3::run::closure$1(async_task::raw::impl$3::run::closure_env$1&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block_env$0&gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block_env$0&gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$ (42 samples, 0.02%)</title><rect x="2.1417%" y="677" width="0.0243%" height="15" fill="rgb(226,201,30)" fg:x="3699" fg:w="42"/><text x="2.3917%" y="687.50"></text></g><g><title>boids.exe`async_executor::impl$21::poll(core::pin::Pin&lt;ref_mut$&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block_env$0&gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$ (42 samples, 0.02%)</title><rect x="2.1417%" y="661" width="0.0243%" height="15" fill="rgb(239,101,34)" fg:x="3699" fg:w="42"/><text x="2.3917%" y="671.50"></text></g><g><title>boids.exe`futures_lite::future::impl$11::poll(core::pin::Pin&lt;ref_mut$&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$ (42 samples, 0.02%)</title><rect x="2.1417%" y="645" width="0.0243%" height="15" fill="rgb(226,209,5)" fg:x="3699" fg:w="42"/><text x="2.3917%" y="655.50"></text></g><g><title>boids.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;futures_lite::future::impl$11::poll::closure_env$0&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$ (42 samples, 0.02%)</title><rect x="2.1417%" y="629" width="0.0243%" height="15" fill="rgb(250,105,47)" fg:x="3699" fg:w="42"/><text x="2.3917%" y="639.50"></text></g><g><title>boids.exe`core::panic::unwind_safe::impl$28::poll&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block_env$0&gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$ (42 samples, 0.02%)</title><rect x="2.1417%" y="613" width="0.0243%" height="15" fill="rgb(230,72,3)" fg:x="3699" fg:w="42"/><text x="2.3917%" y="623.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (42 samples, 0.02%)</title><rect x="2.1417%" y="597" width="0.0243%" height="15" fill="rgb(232,218,39)" fg:x="3699" fg:w="42"/><text x="2.3917%" y="607.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::executor::multi_threaded::Context::system_completed(unsigned long long, enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;, alloc::boxed::Box&lt;dyn$&lt;bevy_ecs::system::system::System&lt;assoc$&lt;In,tuple$&lt;&gt; &gt;,assoc$&lt;Out,enum2$&lt;core::result::Result&lt;tuple$ (18 samples, 0.01%)</title><rect x="2.1666%" y="581" width="0.0104%" height="15" fill="rgb(248,166,6)" fg:x="3742" fg:w="18"/><text x="2.4166%" y="591.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::executor::multi_threaded::Context::tick_executor (18 samples, 0.01%)</title><rect x="2.1666%" y="565" width="0.0104%" height="15" fill="rgb(247,89,20)" fg:x="3742" fg:w="18"/><text x="2.4166%" y="575.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::executor::multi_threaded::ExecutorState::tick (18 samples, 0.01%)</title><rect x="2.1666%" y="549" width="0.0104%" height="15" fill="rgb(248,130,54)" fg:x="3742" fg:w="18"/><text x="2.4166%" y="559.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::executor::multi_threaded::apply_deferred(fixedbitset::FixedBitSet*, ref$&lt;slice2$&lt;bevy_utils::syncunsafecell::SyncUnsafeCell&lt;alloc::boxed::Box&lt;dyn$&lt;bevy_ecs::system::system::System&lt;assoc$&lt;In,tuple$&lt;&gt; &gt;,assoc$&lt;Out,enum2$&lt;core::result::Result&lt;tuple$ (23 samples, 0.01%)</title><rect x="2.1846%" y="245" width="0.0133%" height="15" fill="rgb(234,196,4)" fg:x="3773" fg:w="23"/><text x="2.4346%" y="255.50"></text></g><g><title>boids.exe`bevy_ecs::system::commands::_::impl$0::apply (23 samples, 0.01%)</title><rect x="2.1846%" y="229" width="0.0133%" height="15" fill="rgb(250,143,31)" fg:x="3773" fg:w="23"/><text x="2.4346%" y="239.50"></text></g><g><title>boids.exe`bevy_ecs::world::command_queue::RawCommandQueue::apply_or_drop_queued(enum2$&lt;core::option::Option&lt;core::ptr::non_null::NonNull (23 samples, 0.01%)</title><rect x="2.1846%" y="213" width="0.0133%" height="15" fill="rgb(211,110,34)" fg:x="3773" fg:w="23"/><text x="2.4346%" y="223.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::resource_mut (32 samples, 0.02%)</title><rect x="2.1846%" y="325" width="0.0185%" height="15" fill="rgb(215,124,48)" fg:x="3773" fg:w="32"/><text x="2.4346%" y="335.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::get_resource_mut (32 samples, 0.02%)</title><rect x="2.1846%" y="309" width="0.0185%" height="15" fill="rgb(216,46,13)" fg:x="3773" fg:w="32"/><text x="2.4346%" y="319.50"></text></g><g><title>boids.exe`bevy_ecs::world::unsafe_world_cell::UnsafeWorldCell::get_resource_mut (32 samples, 0.02%)</title><rect x="2.1846%" y="293" width="0.0185%" height="15" fill="rgb(205,184,25)" fg:x="3773" fg:w="32"/><text x="2.4346%" y="303.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::schedule::Schedule::run (32 samples, 0.02%)</title><rect x="2.1846%" y="277" width="0.0185%" height="15" fill="rgb(228,1,10)" fg:x="3773" fg:w="32"/><text x="2.4346%" y="287.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::executor::multi_threaded::impl$2::run(bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor*, bevy_ecs::schedule::executor::SystemSchedule*, bevy_ecs::world::World*, enum2$&lt;core::option::Option&lt;ref$&lt;fixedbitset::FixedBitSet&gt; &gt; &gt;, void (*)(bevy_ecs::error::bevy_error::BevyError, enum2$ (32 samples, 0.02%)</title><rect x="2.1846%" y="261" width="0.0185%" height="15" fill="rgb(213,116,27)" fg:x="3773" fg:w="32"/><text x="2.4346%" y="271.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::try_schedule_scope&lt;tuple$&lt;&gt;,bevy_ecs::intern::Interned&lt;dyn$&lt;bevy_ecs::schedule::set::ScheduleLabel&gt; &gt;,bevy_ecs::world::impl$4::try_run_schedule::closure_env$0&lt;bevy_ecs::intern::Interned&lt;dyn$&lt;bevy_ecs::schedule::set::ScheduleLabel&gt; &gt; &gt; &gt;(bevy_ecs::intern::Interned&lt;dyn$&lt;bevy_ecs::schedule::set::ScheduleLabel&gt; &gt;, bevy_ecs::world::impl$4::try_run_schedule::closure_env$0&lt;bevy_ecs::intern::Interned&lt;dyn$ (33 samples, 0.02%)</title><rect x="2.1846%" y="341" width="0.0191%" height="15" fill="rgb(241,95,50)" fg:x="3773" fg:w="33"/><text x="2.4346%" y="351.50"></text></g><g><title>boids.exe`egui::context::Context::run&lt;bevy_egui::run_egui_context_pass_loop_system::closure_env$1&gt; (47 samples, 0.03%)</title><rect x="2.1846%" y="357" width="0.0272%" height="15" fill="rgb(238,48,32)" fg:x="3773" fg:w="47"/><text x="2.4346%" y="367.50"></text></g><g><title>boids.exe`bevy_ecs::system::system::System::run_without_applying_deferred&lt;bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;bevy_ecs::system::exclusive_function_system::ExclusiveFunctionSystem&lt;void (*)(),void (*)(ref_mut$&lt;bevy_ecs::world::World&gt;)&gt; &gt; &gt;(bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;bevy_ecs::system::exclusive_function_system::ExclusiveFunctionSystem&lt;void (*)(),void (*)(ref_mut$&lt;bevy_ecs::world::World&gt;)&gt; &gt;*, tuple$ (62 samples, 0.04%)</title><rect x="2.1771%" y="469" width="0.0359%" height="15" fill="rgb(235,113,49)" fg:x="3760" fg:w="62"/><text x="2.4271%" y="479.50"></text></g><g><title>boids.exe`bevy_ecs::system::schedule_system::impl$1::run_unsafe(bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;bevy_ecs::system::exclusive_function_system::ExclusiveFunctionSystem&lt;void (*)(),void (*)(ref_mut$&lt;bevy_ecs::world::World&gt;)&gt; &gt;*, tuple$ (62 samples, 0.04%)</title><rect x="2.1771%" y="453" width="0.0359%" height="15" fill="rgb(205,127,43)" fg:x="3760" fg:w="62"/><text x="2.4271%" y="463.50"></text></g><g><title>boids.exe`bevy_ecs::system::exclusive_function_system::impl$2::run_unsafe(bevy_ecs::system::exclusive_function_system::ExclusiveFunctionSystem&lt;void (*)(),void (*)(ref_mut$&lt;bevy_ecs::world::World&gt;)&gt;*, tuple$ (62 samples, 0.04%)</title><rect x="2.1771%" y="437" width="0.0359%" height="15" fill="rgb(250,162,2)" fg:x="3760" fg:w="62"/><text x="2.4271%" y="447.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::last_change_tick_scope(bevy_ecs::component::Tick, bevy_ecs::system::exclusive_function_system::impl$2::run_unsafe::closure_env$0&lt;void (*)(),void (*)(ref_mut$ (62 samples, 0.04%)</title><rect x="2.1771%" y="421" width="0.0359%" height="15" fill="rgb(220,13,41)" fg:x="3760" fg:w="62"/><text x="2.4271%" y="431.50"></text></g><g><title>boids.exe`bevy_ecs::system::exclusive_function_system::impl$2::run_unsafe::closure$0(bevy_ecs::system::exclusive_function_system::impl$2::run_unsafe::closure_env$0&lt;void (*)(),void (*)(ref_mut$ (62 samples, 0.04%)</title><rect x="2.1771%" y="405" width="0.0359%" height="15" fill="rgb(249,221,25)" fg:x="3760" fg:w="62"/><text x="2.4271%" y="415.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::flush (62 samples, 0.04%)</title><rect x="2.1771%" y="389" width="0.0359%" height="15" fill="rgb(215,208,19)" fg:x="3760" fg:w="62"/><text x="2.4271%" y="399.50"></text></g><g><title>boids.exe`bevy_egui::run_egui_context_pass_loop_system (58 samples, 0.03%)</title><rect x="2.1794%" y="373" width="0.0336%" height="15" fill="rgb(236,175,2)" fg:x="3764" fg:w="58"/><text x="2.4294%" y="383.50"></text></g><g><title>boids.exe`async_task::raw::RawTask&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block_env$1&gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block_env$1&gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$&lt;&gt; &gt;::run&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block_env$1&gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block_env$1&gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$&lt;&gt; &gt;(tuple$ (82 samples, 0.05%)</title><rect x="2.1661%" y="773" width="0.0475%" height="15" fill="rgb(241,52,2)" fg:x="3741" fg:w="82"/><text x="2.4161%" y="783.50"></text></g><g><title>boids.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;async_task::raw::impl$3::run::closure_env$1&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block_env$1&gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block_env$1&gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$ (81 samples, 0.05%)</title><rect x="2.1666%" y="757" width="0.0469%" height="15" fill="rgb(248,140,14)" fg:x="3742" fg:w="81"/><text x="2.4166%" y="767.50"></text></g><g><title>boids.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;async_task::raw::impl$3::run::closure_env$1&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block_env$1&gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block_env$1&gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$ (81 samples, 0.05%)</title><rect x="2.1666%" y="741" width="0.0469%" height="15" fill="rgb(253,22,42)" fg:x="3742" fg:w="81"/><text x="2.4166%" y="751.50"></text></g><g><title>boids.exe`std::panicking::try::do_call (81 samples, 0.05%)</title><rect x="2.1666%" y="725" width="0.0469%" height="15" fill="rgb(234,61,47)" fg:x="3742" fg:w="81"/><text x="2.4166%" y="735.50"></text></g><g><title>boids.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;async_task::raw::impl$3::run::closure_env$1&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block_env$1&gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block_env$1&gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$ (81 samples, 0.05%)</title><rect x="2.1666%" y="709" width="0.0469%" height="15" fill="rgb(208,226,15)" fg:x="3742" fg:w="81"/><text x="2.4166%" y="719.50"></text></g><g><title>boids.exe`core::ops::function::FnOnce::call_once(async_task::raw::impl$3::run::closure_env$1&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block_env$1&gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block_env$1&gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$ (81 samples, 0.05%)</title><rect x="2.1666%" y="693" width="0.0469%" height="15" fill="rgb(217,221,4)" fg:x="3742" fg:w="81"/><text x="2.4166%" y="703.50"></text></g><g><title>boids.exe`async_task::raw::impl$3::run::closure$1(async_task::raw::impl$3::run::closure_env$1&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block_env$1&gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block_env$1&gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$ (81 samples, 0.05%)</title><rect x="2.1666%" y="677" width="0.0469%" height="15" fill="rgb(212,174,34)" fg:x="3742" fg:w="81"/><text x="2.4166%" y="687.50"></text></g><g><title>boids.exe`async_executor::impl$21::poll(core::pin::Pin&lt;ref_mut$&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block_env$1&gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$ (81 samples, 0.05%)</title><rect x="2.1666%" y="661" width="0.0469%" height="15" fill="rgb(253,83,4)" fg:x="3742" fg:w="81"/><text x="2.4166%" y="671.50"></text></g><g><title>boids.exe`futures_lite::future::impl$11::poll(core::pin::Pin&lt;ref_mut$&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$ (81 samples, 0.05%)</title><rect x="2.1666%" y="645" width="0.0469%" height="15" fill="rgb(250,195,49)" fg:x="3742" fg:w="81"/><text x="2.4166%" y="655.50"></text></g><g><title>boids.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;futures_lite::future::impl$11::poll::closure_env$0&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$ (81 samples, 0.05%)</title><rect x="2.1666%" y="629" width="0.0469%" height="15" fill="rgb(241,192,25)" fg:x="3742" fg:w="81"/><text x="2.4166%" y="639.50"></text></g><g><title>boids.exe`core::panic::unwind_safe::impl$28::poll&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block_env$1&gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$ (81 samples, 0.05%)</title><rect x="2.1666%" y="613" width="0.0469%" height="15" fill="rgb(208,124,10)" fg:x="3742" fg:w="81"/><text x="2.4166%" y="623.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block$1(core::pin::Pin&lt;ref_mut$&lt;enum2$ (81 samples, 0.05%)</title><rect x="2.1666%" y="597" width="0.0469%" height="15" fill="rgb(222,33,0)" fg:x="3742" fg:w="81"/><text x="2.4166%" y="607.50"></text></g><g><title>boids.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe (63 samples, 0.04%)</title><rect x="2.1771%" y="581" width="0.0365%" height="15" fill="rgb(234,209,28)" fg:x="3760" fg:w="63"/><text x="2.4271%" y="591.50"></text></g><g><title>boids.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe (63 samples, 0.04%)</title><rect x="2.1771%" y="565" width="0.0365%" height="15" fill="rgb(224,11,23)" fg:x="3760" fg:w="63"/><text x="2.4271%" y="575.50"></text></g><g><title>boids.exe`std::panicking::try::do_call (63 samples, 0.04%)</title><rect x="2.1771%" y="549" width="0.0365%" height="15" fill="rgb(232,99,1)" fg:x="3760" fg:w="63"/><text x="2.4271%" y="559.50"></text></g><g><title>boids.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe (63 samples, 0.04%)</title><rect x="2.1771%" y="533" width="0.0365%" height="15" fill="rgb(237,95,45)" fg:x="3760" fg:w="63"/><text x="2.4271%" y="543.50"></text></g><g><title>boids.exe`core::ops::function::FnOnce::call_once (63 samples, 0.04%)</title><rect x="2.1771%" y="517" width="0.0365%" height="15" fill="rgb(208,109,11)" fg:x="3760" fg:w="63"/><text x="2.4271%" y="527.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block$1::closure$0 (63 samples, 0.04%)</title><rect x="2.1771%" y="501" width="0.0365%" height="15" fill="rgb(216,190,48)" fg:x="3760" fg:w="63"/><text x="2.4271%" y="511.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::executor::__rust_begin_short_backtrace::run(alloc::boxed::Box&lt;dyn$&lt;bevy_ecs::system::system::System&lt;assoc$&lt;In,tuple$&lt;&gt; &gt;,assoc$&lt;Out,enum2$&lt;core::result::Result&lt;tuple$ (63 samples, 0.04%)</title><rect x="2.1771%" y="485" width="0.0365%" height="15" fill="rgb(251,171,36)" fg:x="3760" fg:w="63"/><text x="2.4271%" y="495.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place (25 samples, 0.01%)</title><rect x="2.2211%" y="213" width="0.0145%" height="15" fill="rgb(230,62,22)" fg:x="3836" fg:w="25"/><text x="2.4711%" y="223.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(enum2$&lt;core::option::Option&lt;alloc::sync::Arc (18 samples, 0.01%)</title><rect x="2.2251%" y="197" width="0.0104%" height="15" fill="rgb(225,114,35)" fg:x="3843" fg:w="18"/><text x="2.4751%" y="207.50"></text></g><g><title>boids.exe`epaint::tessellator::Tessellator::tessellate_rect (18 samples, 0.01%)</title><rect x="2.2251%" y="181" width="0.0104%" height="15" fill="rgb(215,118,42)" fg:x="3843" fg:w="18"/><text x="2.4751%" y="191.50"></text></g><g><title>boids.exe`bevy_ecs::system::schedule_system::impl$1::run_unsafe&lt;bevy_ecs::system::function_system::FunctionSystem&lt;void (*)(bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,ref_mut$&lt;bevy_egui::EguiContext&gt;,ref_mut$&lt;bevy_egui::EguiFullOutput&gt;,ref_mut$&lt;bevy_egui::EguiRenderOutput&gt;,ref_mut$&lt;bevy_egui::EguiOutput&gt;,enum2$&lt;core::option::Option&lt;ref_mut$&lt;enum2$&lt;bevy_winit::cursor::CursorIcon&gt; &gt; &gt; &gt;,ref$&lt;bevy_egui::EguiContextSettings&gt; &gt;,tuple$&lt;&gt; &gt;,bevy_ecs::change_detection::ResMut&lt;bevy_egui::EguiClipboard&gt;,bevy_ecs::event::writer::EventWriter&lt;bevy_window::event::RequestRedraw&gt;,bevy_ecs::system::system_param::Local&lt;bevy_platform::collections::hash_map::HashMap&lt;bevy_ecs::entity::Entity,egui::data::output::CursorIcon,bevy_platform::hash::FixedHasher&gt; &gt;,enum2$&lt;core::option::Option&lt;bevy_ecs::system::system_param::NonSend&lt;winit::event_loop::EventLoopProxy&lt;bevy_winit::WakeUp&gt; &gt; &gt; &gt;),void (*)(bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,ref_mut$&lt;bevy_egui::EguiContext&gt;,ref_mut$&lt;bevy_egui::EguiFullOutput&gt;,ref_mut$&lt;bevy_egui::EguiRenderOutput&gt;,ref_mut$&lt;bevy_egui::EguiOutput&gt;,enum2$&lt;core::option::Option&lt;ref_mut$&lt;enum2$&lt;bevy_winit::cursor::CursorIcon&gt; &gt; &gt; &gt;,ref$&lt;bevy_egui::EguiContextSettings&gt; &gt;,tuple$&lt;&gt; &gt;,bevy_ecs::change_detection::ResMut&lt;bevy_egui::EguiClipboard&gt;,bevy_ecs::event::writer::EventWriter&lt;bevy_window::event::RequestRedraw&gt;,bevy_ecs::system::system_param::Local&lt;bevy_platform::collections::hash_map::HashMap&lt;bevy_ecs::entity::Entity,egui::data::output::CursorIcon,bevy_platform::hash::FixedHasher&gt; &gt;,enum2$&lt;core::option::Option&lt;bevy_ecs::system::system_param::NonSend&lt;winit::event_loop::EventLoopProxy&lt;bevy_winit::WakeUp&gt; &gt; &gt; &gt;)&gt; &gt;(bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;bevy_ecs::system::function_system::FunctionSystem&lt;void (*)(bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,ref_mut$&lt;bevy_egui::EguiContext&gt;,ref_mut$&lt;bevy_egui::EguiFullOutput&gt;,ref_mut$&lt;bevy_egui::EguiRenderOutput&gt;,ref_mut$&lt;bevy_egui::EguiOutput&gt;,enum2$&lt;core::option::Option&lt;ref_mut$&lt;enum2$&lt;bevy_winit::cursor::CursorIcon&gt; &gt; &gt; &gt;,ref$&lt;bevy_egui::EguiContextSettings&gt; &gt;,tuple$&lt;&gt; &gt;,bevy_ecs::change_detection::ResMut&lt;bevy_egui::EguiClipboard&gt;,bevy_ecs::event::writer::EventWriter&lt;bevy_window::event::RequestRedraw&gt;,bevy_ecs::system::system_param::Local&lt;bevy_platform::collections::hash_map::HashMap&lt;bevy_ecs::entity::Entity,egui::data::output::CursorIcon,bevy_platform::hash::FixedHasher&gt; &gt;,enum2$&lt;core::option::Option&lt;bevy_ecs::system::system_param::NonSend&lt;winit::event_loop::EventLoopProxy&lt;bevy_winit::WakeUp&gt; &gt; &gt; &gt;),void (*)(bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,ref_mut$&lt;bevy_egui::EguiContext&gt;,ref_mut$&lt;bevy_egui::EguiFullOutput&gt;,ref_mut$&lt;bevy_egui::EguiRenderOutput&gt;,ref_mut$&lt;bevy_egui::EguiOutput&gt;,enum2$&lt;core::option::Option&lt;ref_mut$&lt;enum2$&lt;bevy_winit::cursor::CursorIcon&gt; &gt; &gt; &gt;,ref$&lt;bevy_egui::EguiContextSettings&gt; &gt;,tuple$&lt;&gt; &gt;,bevy_ecs::change_detection::ResMut&lt;bevy_egui::EguiClipboard&gt;,bevy_ecs::event::writer::EventWriter&lt;bevy_window::event::RequestRedraw&gt;,bevy_ecs::system::system_param::Local&lt;bevy_platform::collections::hash_map::HashMap&lt;bevy_ecs::entity::Entity,egui::data::output::CursorIcon,bevy_platform::hash::FixedHasher&gt; &gt;,enum2$&lt;core::option::Option&lt;bevy_ecs::system::system_param::NonSend&lt;winit::event_loop::EventLoopProxy&lt;bevy_winit::WakeUp&gt; &gt; &gt; &gt;)&gt; &gt;*, tuple$ (35 samples, 0.02%)</title><rect x="2.2159%" y="469" width="0.0203%" height="15" fill="rgb(243,119,21)" fg:x="3827" fg:w="35"/><text x="2.4659%" y="479.50"></text></g><g><title>boids.exe`bevy_ecs::system::function_system::impl$7::run_unsafe(bevy_ecs::system::function_system::FunctionSystem&lt;void (*)(bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,ref_mut$&lt;bevy_egui::EguiContext&gt;,ref_mut$&lt;bevy_egui::EguiFullOutput&gt;,ref_mut$&lt;bevy_egui::EguiRenderOutput&gt;,ref_mut$&lt;bevy_egui::EguiOutput&gt;,enum2$&lt;core::option::Option&lt;ref_mut$&lt;enum2$&lt;bevy_winit::cursor::CursorIcon&gt; &gt; &gt; &gt;,ref$&lt;bevy_egui::EguiContextSettings&gt; &gt;,tuple$&lt;&gt; &gt;,bevy_ecs::change_detection::ResMut&lt;bevy_egui::EguiClipboard&gt;,bevy_ecs::event::writer::EventWriter&lt;bevy_window::event::RequestRedraw&gt;,bevy_ecs::system::system_param::Local&lt;bevy_platform::collections::hash_map::HashMap&lt;bevy_ecs::entity::Entity,egui::data::output::CursorIcon,bevy_platform::hash::FixedHasher&gt; &gt;,enum2$&lt;core::option::Option&lt;bevy_ecs::system::system_param::NonSend&lt;winit::event_loop::EventLoopProxy&lt;bevy_winit::WakeUp&gt; &gt; &gt; &gt;),void (*)(bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,ref_mut$&lt;bevy_egui::EguiContext&gt;,ref_mut$&lt;bevy_egui::EguiFullOutput&gt;,ref_mut$&lt;bevy_egui::EguiRenderOutput&gt;,ref_mut$&lt;bevy_egui::EguiOutput&gt;,enum2$&lt;core::option::Option&lt;ref_mut$&lt;enum2$&lt;bevy_winit::cursor::CursorIcon&gt; &gt; &gt; &gt;,ref$&lt;bevy_egui::EguiContextSettings&gt; &gt;,tuple$&lt;&gt; &gt;,bevy_ecs::change_detection::ResMut&lt;bevy_egui::EguiClipboard&gt;,bevy_ecs::event::writer::EventWriter&lt;bevy_window::event::RequestRedraw&gt;,bevy_ecs::system::system_param::Local&lt;bevy_platform::collections::hash_map::HashMap&lt;bevy_ecs::entity::Entity,egui::data::output::CursorIcon,bevy_platform::hash::FixedHasher&gt; &gt;,enum2$&lt;core::option::Option&lt;bevy_ecs::system::system_param::NonSend&lt;winit::event_loop::EventLoopProxy&lt;bevy_winit::WakeUp&gt; &gt; &gt; &gt;)&gt;*, tuple$ (35 samples, 0.02%)</title><rect x="2.2159%" y="453" width="0.0203%" height="15" fill="rgb(252,177,53)" fg:x="3827" fg:w="35"/><text x="2.4659%" y="463.50"></text></g><g><title>boids.exe`bevy_egui::output::process_output_system(bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,ref_mut$&lt;bevy_egui::EguiContext&gt;,ref_mut$&lt;bevy_egui::EguiFullOutput&gt;,ref_mut$&lt;bevy_egui::EguiRenderOutput&gt;,ref_mut$&lt;bevy_egui::EguiOutput&gt;,enum2$&lt;core::option::Option&lt;ref_mut$&lt;enum2$&lt;bevy_winit::cursor::CursorIcon&gt; &gt; &gt; &gt;,ref$&lt;bevy_egui::EguiContextSettings&gt; &gt;,tuple$&lt;&gt; &gt;, bevy_ecs::change_detection::ResMut&lt;bevy_egui::EguiClipboard&gt;, bevy_ecs::event::writer::EventWriter&lt;bevy_window::event::RequestRedraw&gt;, bevy_ecs::system::system_param::Local&lt;bevy_platform::collections::hash_map::HashMap&lt;bevy_ecs::entity::Entity,egui::data::output::CursorIcon,bevy_platform::hash::FixedHasher&gt; &gt;, enum2$&lt;core::option::Option&lt;bevy_ecs::system::system_param::NonSend&lt;winit::event_loop::EventLoopProxy (35 samples, 0.02%)</title><rect x="2.2159%" y="437" width="0.0203%" height="15" fill="rgb(237,209,29)" fg:x="3827" fg:w="35"/><text x="2.4659%" y="447.50"></text></g><g><title>boids.exe`alloc::sync::Arc&lt;alloc::vec::Vec&lt;epaint::ClippedPrimitive,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;::new(alloc::vec::Vec (33 samples, 0.02%)</title><rect x="2.2170%" y="421" width="0.0191%" height="15" fill="rgb(212,65,23)" fg:x="3829" fg:w="33"/><text x="2.4670%" y="431.50"></text></g><g><title>boids.exe`egui::context::Context::tessellate(alloc::vec::Vec (33 samples, 0.02%)</title><rect x="2.2170%" y="405" width="0.0191%" height="15" fill="rgb(230,222,46)" fg:x="3829" fg:w="33"/><text x="2.4670%" y="415.50"></text></g><g><title>boids.exe`egui::context::Context::write (33 samples, 0.02%)</title><rect x="2.2170%" y="389" width="0.0191%" height="15" fill="rgb(215,135,32)" fg:x="3829" fg:w="33"/><text x="2.4670%" y="399.50"></text></g><g><title>boids.exe`egui::context::impl$18::tessellate::closure$0 (33 samples, 0.02%)</title><rect x="2.2170%" y="373" width="0.0191%" height="15" fill="rgb(246,101,22)" fg:x="3829" fg:w="33"/><text x="2.4670%" y="383.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place (33 samples, 0.02%)</title><rect x="2.2170%" y="357" width="0.0191%" height="15" fill="rgb(206,107,13)" fg:x="3829" fg:w="33"/><text x="2.4670%" y="367.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(alloc::vec::Vec (33 samples, 0.02%)</title><rect x="2.2170%" y="341" width="0.0191%" height="15" fill="rgb(250,100,44)" fg:x="3829" fg:w="33"/><text x="2.4670%" y="351.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (33 samples, 0.02%)</title><rect x="2.2170%" y="325" width="0.0191%" height="15" fill="rgb(231,147,38)" fg:x="3829" fg:w="33"/><text x="2.4670%" y="335.50"></text></g><g><title>boids.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (33 samples, 0.02%)</title><rect x="2.2170%" y="309" width="0.0191%" height="15" fill="rgb(229,8,40)" fg:x="3829" fg:w="33"/><text x="2.4670%" y="319.50"></text></g><g><title>boids.exe`epaint::tessellator::Tessellator::tessellate_shapes(alloc::vec::Vec (33 samples, 0.02%)</title><rect x="2.2170%" y="293" width="0.0191%" height="15" fill="rgb(221,135,30)" fg:x="3829" fg:w="33"/><text x="2.4670%" y="303.50"></text></g><g><title>boids.exe`alloc::vec::into_iter::impl$5::next(alloc::vec::into_iter::IntoIter (33 samples, 0.02%)</title><rect x="2.2170%" y="277" width="0.0191%" height="15" fill="rgb(249,193,18)" fg:x="3829" fg:w="33"/><text x="2.4670%" y="287.50"></text></g><g><title>boids.exe`core::ptr::non_null::impl$14::eq(core::ptr::non_null::NonNull&lt;epaint::ClippedShape&gt;*, core::ptr::non_null::NonNull (33 samples, 0.02%)</title><rect x="2.2170%" y="261" width="0.0191%" height="15" fill="rgb(209,133,39)" fg:x="3829" fg:w="33"/><text x="2.4670%" y="271.50"></text></g><g><title>boids.exe`epaint::tessellator::Tessellator::tessellate_clipped_shape(epaint::ClippedShape, alloc::vec::Vec (33 samples, 0.02%)</title><rect x="2.2170%" y="245" width="0.0191%" height="15" fill="rgb(232,100,14)" fg:x="3829" fg:w="33"/><text x="2.4670%" y="255.50"></text></g><g><title>boids.exe`epaint::tessellator::Tessellator::tessellate_shape(enum2$ (26 samples, 0.02%)</title><rect x="2.2211%" y="229" width="0.0151%" height="15" fill="rgb(224,185,1)" fg:x="3836" fg:w="26"/><text x="2.4711%" y="239.50"></text></g><g><title>boids.exe`bevy_tasks::task_pool::impl$2::execute_scope::async_fn$0::async_block$0(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;bevy_tasks::task_pool::impl$2::execute_scope::async_fn$0::async_block_env$0&lt;tuple$&lt;&gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block$0::async_block_env$0&lt;bevy_ecs::schedule::executor::multi_threaded::impl$2::run::closure_env$1,tuple$ (173 samples, 0.10%)</title><rect x="2.1365%" y="885" width="0.1002%" height="15" fill="rgb(223,139,8)" fg:x="3690" fg:w="173"/><text x="2.3865%" y="895.50"></text></g><g><title>boids.exe`core::panic::unwind_safe::impl$28::poll&lt;enum2$&lt;bevy_tasks::task_pool::impl$2::execute_scope::async_fn$0::async_block$0::async_block_env$0&lt;tuple$&lt;&gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block$0::async_block_env$0&lt;bevy_ecs::schedule::executor::multi_threaded::impl$2::run::closure_env$1,tuple$&lt;&gt; &gt; &gt; &gt; &gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_tasks::task_pool::impl$2::execute_scope::async_fn$0::async_block$0::async_block_env$0&lt;tuple$&lt;&gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block$0::async_block_env$0&lt;bevy_ecs::schedule::executor::multi_threaded::impl$2::run::closure_env$1,tuple$ (173 samples, 0.10%)</title><rect x="2.1365%" y="869" width="0.1002%" height="15" fill="rgb(232,213,38)" fg:x="3690" fg:w="173"/><text x="2.3865%" y="879.50"></text></g><g><title>boids.exe`bevy_tasks::task_pool::impl$2::execute_scope::async_fn$0::async_block$0::async_block$0(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;bevy_tasks::task_pool::impl$2::execute_scope::async_fn$0::async_block$0::async_block_env$0&lt;tuple$&lt;&gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block$0::async_block_env$0&lt;bevy_ecs::schedule::executor::multi_threaded::impl$2::run::closure_env$1,tuple$ (173 samples, 0.10%)</title><rect x="2.1365%" y="853" width="0.1002%" height="15" fill="rgb(207,94,22)" fg:x="3690" fg:w="173"/><text x="2.3865%" y="863.50"></text></g><g><title>boids.exe`bevy_tasks::thread_executor::impl$2::tick::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (173 samples, 0.10%)</title><rect x="2.1365%" y="837" width="0.1002%" height="15" fill="rgb(219,183,54)" fg:x="3690" fg:w="173"/><text x="2.3865%" y="847.50"></text></g><g><title>boids.exe`async_executor::impl$5::tick::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (173 samples, 0.10%)</title><rect x="2.1365%" y="821" width="0.1002%" height="15" fill="rgb(216,185,54)" fg:x="3690" fg:w="173"/><text x="2.3865%" y="831.50"></text></g><g><title>boids.exe`async_executor::impl$13::tick::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (173 samples, 0.10%)</title><rect x="2.1365%" y="805" width="0.1002%" height="15" fill="rgb(254,217,39)" fg:x="3690" fg:w="173"/><text x="2.3865%" y="815.50"></text></g><g><title>boids.exe`async_task::runnable::Runnable&lt;tuple$&lt;&gt; &gt;::run(async_task::runnable::Runnable&lt;tuple$ (165 samples, 0.10%)</title><rect x="2.1412%" y="789" width="0.0955%" height="15" fill="rgb(240,178,23)" fg:x="3698" fg:w="165"/><text x="2.3912%" y="799.50"></text></g><g><title>boids.exe`async_task::raw::RawTask&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env$0&gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env$0&gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$&lt;&gt; &gt;::run&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env$0&gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env$0&gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$&lt;&gt; &gt;(tuple$ (40 samples, 0.02%)</title><rect x="2.2135%" y="773" width="0.0232%" height="15" fill="rgb(218,11,47)" fg:x="3823" fg:w="40"/><text x="2.4635%" y="783.50"></text></g><g><title>boids.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;async_task::raw::impl$3::run::closure_env$1&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env$0&gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env$0&gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$ (40 samples, 0.02%)</title><rect x="2.2135%" y="757" width="0.0232%" height="15" fill="rgb(218,51,51)" fg:x="3823" fg:w="40"/><text x="2.4635%" y="767.50"></text></g><g><title>boids.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;async_task::raw::impl$3::run::closure_env$1&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env$0&gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env$0&gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$ (40 samples, 0.02%)</title><rect x="2.2135%" y="741" width="0.0232%" height="15" fill="rgb(238,126,27)" fg:x="3823" fg:w="40"/><text x="2.4635%" y="751.50"></text></g><g><title>boids.exe`std::panicking::try::do_call (40 samples, 0.02%)</title><rect x="2.2135%" y="725" width="0.0232%" height="15" fill="rgb(249,202,22)" fg:x="3823" fg:w="40"/><text x="2.4635%" y="735.50"></text></g><g><title>boids.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;async_task::raw::impl$3::run::closure_env$1&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env$0&gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env$0&gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$ (40 samples, 0.02%)</title><rect x="2.2135%" y="709" width="0.0232%" height="15" fill="rgb(254,195,49)" fg:x="3823" fg:w="40"/><text x="2.4635%" y="719.50"></text></g><g><title>boids.exe`core::ops::function::FnOnce::call_once(async_task::raw::impl$3::run::closure_env$1&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env$0&gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env$0&gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$ (40 samples, 0.02%)</title><rect x="2.2135%" y="693" width="0.0232%" height="15" fill="rgb(208,123,14)" fg:x="3823" fg:w="40"/><text x="2.4635%" y="703.50"></text></g><g><title>boids.exe`async_task::raw::impl$3::run::closure$1(async_task::raw::impl$3::run::closure_env$1&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env$0&gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env$0&gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$ (40 samples, 0.02%)</title><rect x="2.2135%" y="677" width="0.0232%" height="15" fill="rgb(224,200,8)" fg:x="3823" fg:w="40"/><text x="2.4635%" y="687.50"></text></g><g><title>boids.exe`async_executor::impl$21::poll(core::pin::Pin&lt;ref_mut$&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env$0&gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$ (40 samples, 0.02%)</title><rect x="2.2135%" y="661" width="0.0232%" height="15" fill="rgb(217,61,36)" fg:x="3823" fg:w="40"/><text x="2.4635%" y="671.50"></text></g><g><title>boids.exe`futures_lite::future::impl$11::poll(core::pin::Pin&lt;ref_mut$&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$ (40 samples, 0.02%)</title><rect x="2.2135%" y="645" width="0.0232%" height="15" fill="rgb(206,35,45)" fg:x="3823" fg:w="40"/><text x="2.4635%" y="655.50"></text></g><g><title>boids.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;futures_lite::future::impl$11::poll::closure_env$0&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$ (40 samples, 0.02%)</title><rect x="2.2135%" y="629" width="0.0232%" height="15" fill="rgb(217,65,33)" fg:x="3823" fg:w="40"/><text x="2.4635%" y="639.50"></text></g><g><title>boids.exe`core::panic::unwind_safe::impl$28::poll&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env$0&gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$ (40 samples, 0.02%)</title><rect x="2.2135%" y="613" width="0.0232%" height="15" fill="rgb(222,158,48)" fg:x="3823" fg:w="40"/><text x="2.4635%" y="623.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (40 samples, 0.02%)</title><rect x="2.2135%" y="597" width="0.0232%" height="15" fill="rgb(254,2,54)" fg:x="3823" fg:w="40"/><text x="2.4635%" y="607.50"></text></g><g><title>boids.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe (36 samples, 0.02%)</title><rect x="2.2159%" y="581" width="0.0208%" height="15" fill="rgb(250,143,38)" fg:x="3827" fg:w="36"/><text x="2.4659%" y="591.50"></text></g><g><title>boids.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe (36 samples, 0.02%)</title><rect x="2.2159%" y="565" width="0.0208%" height="15" fill="rgb(248,25,0)" fg:x="3827" fg:w="36"/><text x="2.4659%" y="575.50"></text></g><g><title>boids.exe`std::panicking::try::do_call (36 samples, 0.02%)</title><rect x="2.2159%" y="549" width="0.0208%" height="15" fill="rgb(206,152,27)" fg:x="3827" fg:w="36"/><text x="2.4659%" y="559.50"></text></g><g><title>boids.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe (36 samples, 0.02%)</title><rect x="2.2159%" y="533" width="0.0208%" height="15" fill="rgb(240,77,30)" fg:x="3827" fg:w="36"/><text x="2.4659%" y="543.50"></text></g><g><title>boids.exe`core::ops::function::FnOnce::call_once (36 samples, 0.02%)</title><rect x="2.2159%" y="517" width="0.0208%" height="15" fill="rgb(231,5,3)" fg:x="3827" fg:w="36"/><text x="2.4659%" y="527.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block$0::closure$0 (36 samples, 0.02%)</title><rect x="2.2159%" y="501" width="0.0208%" height="15" fill="rgb(207,226,32)" fg:x="3827" fg:w="36"/><text x="2.4659%" y="511.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::executor::__rust_begin_short_backtrace::run_unsafe(alloc::boxed::Box&lt;dyn$&lt;bevy_ecs::system::system::System&lt;assoc$&lt;In,tuple$&lt;&gt; &gt;,assoc$&lt;Out,enum2$&lt;core::result::Result&lt;tuple$ (36 samples, 0.02%)</title><rect x="2.2159%" y="485" width="0.0208%" height="15" fill="rgb(222,207,47)" fg:x="3827" fg:w="36"/><text x="2.4659%" y="495.50"></text></g><g><title>boids.exe`bevy_tasks::task_pool::impl$2::execute_scope::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;bevy_tasks::task_pool::impl$2::execute_scope::async_fn_env$0&lt;tuple$&lt;&gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block$0::async_block_env$0&lt;bevy_ecs::schedule::executor::multi_threaded::impl$2::run::closure_env$1,tuple$ (192 samples, 0.11%)</title><rect x="2.1360%" y="917" width="0.1112%" height="15" fill="rgb(229,115,45)" fg:x="3689" fg:w="192"/><text x="2.3860%" y="927.50"></text></g><g><title>boids.exe`futures_lite::future::impl$7::poll&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block$0::async_block_env$0&lt;bevy_ecs::schedule::executor::multi_threaded::impl$2::run::closure_env$1,tuple$&lt;&gt; &gt; &gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::execute_scope::async_fn$0::async_block_env$0&lt;tuple$&lt;&gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block$0::async_block_env$0&lt;bevy_ecs::schedule::executor::multi_threaded::impl$2::run::closure_env$1,tuple$&lt;&gt; &gt; &gt; &gt; &gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;futures_lite::future::Or&lt;enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block$0::async_block_env$0&lt;bevy_ecs::schedule::executor::multi_threaded::impl$2::run::closure_env$1,tuple$&lt;&gt; &gt; &gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::execute_scope::async_fn$0::async_block_env$0&lt;tuple$&lt;&gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block$0::async_block_env$0&lt;bevy_ecs::schedule::executor::multi_threaded::impl$2::run::closure_env$1,tuple$ (191 samples, 0.11%)</title><rect x="2.1365%" y="901" width="0.1106%" height="15" fill="rgb(224,191,6)" fg:x="3690" fg:w="191"/><text x="2.3865%" y="911.50"></text></g><g><title>boids.exe`bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block$0::async_block$0&lt;bevy_ecs::schedule::executor::multi_threaded::impl$2::run::closure_env$1,tuple$&lt;&gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block$0::async_block_env$0&lt;bevy_ecs::schedule::executor::multi_threaded::impl$2::run::closure_env$1,tuple$ (18 samples, 0.01%)</title><rect x="2.2367%" y="885" width="0.0104%" height="15" fill="rgb(230,227,24)" fg:x="3863" fg:w="18"/><text x="2.4867%" y="895.50"></text></g><g><title>`0x7FF89ABBF923 (26 samples, 0.02%)</title><rect x="2.2494%" y="773" width="0.0151%" height="15" fill="rgb(228,80,19)" fg:x="3885" fg:w="26"/><text x="2.4994%" y="783.50"></text></g><g><title>`0x7FF89D8FBFA3 (26 samples, 0.02%)</title><rect x="2.2494%" y="757" width="0.0151%" height="15" fill="rgb(247,229,0)" fg:x="3885" fg:w="26"/><text x="2.4994%" y="767.50"></text></g><g><title>`0x7FF89D8FFEDC (23 samples, 0.01%)</title><rect x="2.2512%" y="741" width="0.0133%" height="15" fill="rgb(237,194,15)" fg:x="3888" fg:w="23"/><text x="2.5012%" y="751.50"></text></g><g><title>boids.exe`std::sys::pal::windows::futex::futex_wait (29 samples, 0.02%)</title><rect x="2.2483%" y="805" width="0.0168%" height="15" fill="rgb(219,203,20)" fg:x="3883" fg:w="29"/><text x="2.4983%" y="815.50"></text></g><g><title>boids.exe`std::sys::pal::windows::futex::wait_on_address (27 samples, 0.02%)</title><rect x="2.2494%" y="789" width="0.0156%" height="15" fill="rgb(234,128,8)" fg:x="3885" fg:w="27"/><text x="2.4994%" y="799.50"></text></g><g><title>boids.exe`bevy_tasks::usages::ComputeTaskPool::get_or_init(bevy_tasks::task_pool::TaskPool (*) (251 samples, 0.15%)</title><rect x="2.1203%" y="1045" width="0.1453%" height="15" fill="rgb(248,202,8)" fg:x="3662" fg:w="251"/><text x="2.3703%" y="1055.50"></text></g><g><title>boids.exe`std::thread::local::LocalKey&lt;alloc::sync::Arc&lt;bevy_tasks::thread_executor::ThreadExecutor,alloc::alloc::Global&gt; &gt;::with(bevy_tasks::task_pool::impl$2::scope_with_executor::closure_env$0&lt;bevy_ecs::schedule::executor::multi_threaded::impl$2::run::closure_env$1,tuple$ (251 samples, 0.15%)</title><rect x="2.1203%" y="1029" width="0.1453%" height="15" fill="rgb(206,104,37)" fg:x="3662" fg:w="251"/><text x="2.3703%" y="1039.50"></text></g><g><title>boids.exe`bevy_tasks::task_pool::TaskPool::scope_with_executor_inner&lt;bevy_ecs::schedule::executor::multi_threaded::impl$2::run::closure_env$1,tuple$&lt;&gt; &gt; (251 samples, 0.15%)</title><rect x="2.1203%" y="1013" width="0.1453%" height="15" fill="rgb(223,8,27)" fg:x="3662" fg:w="251"/><text x="2.3703%" y="1023.50"></text></g><g><title>boids.exe`futures_lite::future::block_on(enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block_env$0&lt;bevy_ecs::schedule::executor::multi_threaded::impl$2::run::closure_env$1,tuple$ (224 samples, 0.13%)</title><rect x="2.1360%" y="997" width="0.1297%" height="15" fill="rgb(216,217,28)" fg:x="3689" fg:w="224"/><text x="2.3860%" y="1007.50"></text></g><g><title>boids.exe`std::thread::local::LocalKey&lt;core::cell::RefCell&lt;tuple$&lt;parking::Parker,core::task::wake::Waker&gt; &gt; &gt;::with&lt;core::cell::RefCell&lt;tuple$&lt;parking::Parker,core::task::wake::Waker&gt; &gt;,futures_lite::future::block_on::closure_env$0&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block_env$0&lt;bevy_ecs::schedule::executor::multi_threaded::impl$2::run::closure_env$1,tuple$&lt;&gt; &gt; &gt; &gt;,alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt; &gt;(futures_lite::future::block_on::closure_env$0&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block_env$0&lt;bevy_ecs::schedule::executor::multi_threaded::impl$2::run::closure_env$1,tuple$ (224 samples, 0.13%)</title><rect x="2.1360%" y="981" width="0.1297%" height="15" fill="rgb(249,199,1)" fg:x="3689" fg:w="224"/><text x="2.3860%" y="991.50"></text></g><g><title>boids.exe`std::thread::local::LocalKey&lt;core::cell::RefCell&lt;tuple$&lt;parking::Parker,core::task::wake::Waker&gt; &gt; &gt;::try_with(futures_lite::future::block_on::closure_env$0&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block_env$0&lt;bevy_ecs::schedule::executor::multi_threaded::impl$2::run::closure_env$1,tuple$ (224 samples, 0.13%)</title><rect x="2.1360%" y="965" width="0.1297%" height="15" fill="rgb(240,85,17)" fg:x="3689" fg:w="224"/><text x="2.3860%" y="975.50"></text></g><g><title>boids.exe`futures_lite::future::block_on::closure$0(futures_lite::future::block_on::closure_env$0&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block_env$0&lt;bevy_ecs::schedule::executor::multi_threaded::impl$2::run::closure_env$1,tuple$&lt;&gt; &gt; &gt; &gt;, core::cell::RefCell&lt;tuple$ (224 samples, 0.13%)</title><rect x="2.1360%" y="949" width="0.1297%" height="15" fill="rgb(206,108,45)" fg:x="3689" fg:w="224"/><text x="2.3860%" y="959.50"></text></g><g><title>boids.exe`bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block$0(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block_env$0&lt;bevy_ecs::schedule::executor::multi_threaded::impl$2::run::closure_env$1,tuple$ (224 samples, 0.13%)</title><rect x="2.1360%" y="933" width="0.1297%" height="15" fill="rgb(245,210,41)" fg:x="3689" fg:w="224"/><text x="2.3860%" y="943.50"></text></g><g><title>boids.exe`parking::Inner::park(enum2$&lt;core::option::Option (32 samples, 0.02%)</title><rect x="2.2471%" y="917" width="0.0185%" height="15" fill="rgb(206,13,37)" fg:x="3881" fg:w="32"/><text x="2.4971%" y="927.50"></text></g><g><title>boids.exe`std::sync::poison::condvar::Condvar::wait(std::sync::poison::mutex::MutexGuard&lt;tuple$ (30 samples, 0.02%)</title><rect x="2.2483%" y="901" width="0.0174%" height="15" fill="rgb(250,61,18)" fg:x="3883" fg:w="30"/><text x="2.4983%" y="911.50"></text></g><g><title>boids.exe`std::sync::poison::Flag::get (30 samples, 0.02%)</title><rect x="2.2483%" y="885" width="0.0174%" height="15" fill="rgb(235,172,48)" fg:x="3883" fg:w="30"/><text x="2.4983%" y="895.50"></text></g><g><title>boids.exe`core::sync::atomic::AtomicBool::load (30 samples, 0.02%)</title><rect x="2.2483%" y="869" width="0.0174%" height="15" fill="rgb(249,201,17)" fg:x="3883" fg:w="30"/><text x="2.4983%" y="879.50"></text></g><g><title>boids.exe`core::sync::atomic::atomic_load (30 samples, 0.02%)</title><rect x="2.2483%" y="853" width="0.0174%" height="15" fill="rgb(219,208,6)" fg:x="3883" fg:w="30"/><text x="2.4983%" y="863.50"></text></g><g><title>boids.exe`std::sys::sync::condvar::futex::Condvar::wait (30 samples, 0.02%)</title><rect x="2.2483%" y="837" width="0.0174%" height="15" fill="rgb(248,31,23)" fg:x="3883" fg:w="30"/><text x="2.4983%" y="847.50"></text></g><g><title>boids.exe`std::sys::sync::condvar::futex::Condvar::wait_optional_timeout (30 samples, 0.02%)</title><rect x="2.2483%" y="821" width="0.0174%" height="15" fill="rgb(245,15,42)" fg:x="3883" fg:w="30"/><text x="2.4983%" y="831.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::executor::multi_threaded::impl$2::run(bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor*, bevy_ecs::schedule::executor::SystemSchedule*, bevy_ecs::world::World*, enum2$&lt;core::option::Option&lt;ref$&lt;fixedbitset::FixedBitSet&gt; &gt; &gt;, void (*)(bevy_ecs::error::bevy_error::BevyError, enum2$ (260 samples, 0.15%)</title><rect x="2.1174%" y="1061" width="0.1505%" height="15" fill="rgb(222,217,39)" fg:x="3657" fg:w="260"/><text x="2.3674%" y="1071.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::executor::multi_threaded::ExecutorState::spawn_system_tasks (19 samples, 0.01%)</title><rect x="2.2720%" y="245" width="0.0110%" height="15" fill="rgb(210,219,27)" fg:x="3924" fg:w="19"/><text x="2.5220%" y="255.50"></text></g><g><title>boids.exe`concurrent_queue::ConcurrentQueue&lt;async_task::task::FallibleTask&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,tuple$&lt;&gt; &gt; &gt;::is_empty (21 samples, 0.01%)</title><rect x="2.2714%" y="293" width="0.0122%" height="15" fill="rgb(252,166,36)" fg:x="3923" fg:w="21"/><text x="2.5214%" y="303.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::executor::multi_threaded::Context::tick_executor (21 samples, 0.01%)</title><rect x="2.2714%" y="277" width="0.0122%" height="15" fill="rgb(245,132,34)" fg:x="3923" fg:w="21"/><text x="2.5214%" y="287.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::executor::multi_threaded::ExecutorState::tick (21 samples, 0.01%)</title><rect x="2.2714%" y="261" width="0.0122%" height="15" fill="rgb(236,54,3)" fg:x="3923" fg:w="21"/><text x="2.5214%" y="271.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::schedule::Schedule::run (56 samples, 0.03%)</title><rect x="2.2697%" y="373" width="0.0324%" height="15" fill="rgb(241,173,43)" fg:x="3920" fg:w="56"/><text x="2.5197%" y="383.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::executor::multi_threaded::impl$2::run(bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor*, bevy_ecs::schedule::executor::SystemSchedule*, bevy_ecs::world::World*, enum2$&lt;core::option::Option&lt;ref$&lt;fixedbitset::FixedBitSet&gt; &gt; &gt;, void (*)(bevy_ecs::error::bevy_error::BevyError, enum2$ (56 samples, 0.03%)</title><rect x="2.2697%" y="357" width="0.0324%" height="15" fill="rgb(215,190,9)" fg:x="3920" fg:w="56"/><text x="2.5197%" y="367.50"></text></g><g><title>boids.exe`bevy_tasks::usages::ComputeTaskPool::get_or_init(bevy_tasks::task_pool::TaskPool (*) (54 samples, 0.03%)</title><rect x="2.2709%" y="341" width="0.0313%" height="15" fill="rgb(242,101,16)" fg:x="3922" fg:w="54"/><text x="2.5209%" y="351.50"></text></g><g><title>boids.exe`std::thread::local::LocalKey&lt;alloc::sync::Arc&lt;bevy_tasks::thread_executor::ThreadExecutor,alloc::alloc::Global&gt; &gt;::with(bevy_tasks::task_pool::impl$2::scope_with_executor::closure_env$0&lt;bevy_ecs::schedule::executor::multi_threaded::impl$2::run::closure_env$1,tuple$ (54 samples, 0.03%)</title><rect x="2.2709%" y="325" width="0.0313%" height="15" fill="rgb(223,190,21)" fg:x="3922" fg:w="54"/><text x="2.5209%" y="335.50"></text></g><g><title>boids.exe`bevy_tasks::task_pool::TaskPool::scope_with_executor_inner&lt;bevy_ecs::schedule::executor::multi_threaded::impl$2::run::closure_env$1,tuple$&lt;&gt; &gt; (54 samples, 0.03%)</title><rect x="2.2709%" y="309" width="0.0313%" height="15" fill="rgb(215,228,25)" fg:x="3922" fg:w="54"/><text x="2.5209%" y="319.50"></text></g><g><title>boids.exe`futures_lite::future::block_on(enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block_env$0&lt;bevy_ecs::schedule::executor::multi_threaded::impl$2::run::closure_env$1,tuple$ (31 samples, 0.02%)</title><rect x="2.2842%" y="293" width="0.0179%" height="15" fill="rgb(225,36,22)" fg:x="3945" fg:w="31"/><text x="2.5342%" y="303.50"></text></g><g><title>boids.exe`std::thread::local::LocalKey&lt;core::cell::RefCell&lt;tuple$&lt;parking::Parker,core::task::wake::Waker&gt; &gt; &gt;::with&lt;core::cell::RefCell&lt;tuple$&lt;parking::Parker,core::task::wake::Waker&gt; &gt;,futures_lite::future::block_on::closure_env$0&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block_env$0&lt;bevy_ecs::schedule::executor::multi_threaded::impl$2::run::closure_env$1,tuple$&lt;&gt; &gt; &gt; &gt;,alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt; &gt;(futures_lite::future::block_on::closure_env$0&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block_env$0&lt;bevy_ecs::schedule::executor::multi_threaded::impl$2::run::closure_env$1,tuple$ (31 samples, 0.02%)</title><rect x="2.2842%" y="277" width="0.0179%" height="15" fill="rgb(251,106,46)" fg:x="3945" fg:w="31"/><text x="2.5342%" y="287.50"></text></g><g><title>boids.exe`std::thread::local::LocalKey&lt;core::cell::RefCell&lt;tuple$&lt;parking::Parker,core::task::wake::Waker&gt; &gt; &gt;::try_with(futures_lite::future::block_on::closure_env$0&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block_env$0&lt;bevy_ecs::schedule::executor::multi_threaded::impl$2::run::closure_env$1,tuple$ (31 samples, 0.02%)</title><rect x="2.2842%" y="261" width="0.0179%" height="15" fill="rgb(208,90,1)" fg:x="3945" fg:w="31"/><text x="2.5342%" y="271.50"></text></g><g><title>boids.exe`futures_lite::future::block_on::closure$0(futures_lite::future::block_on::closure_env$0&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block_env$0&lt;bevy_ecs::schedule::executor::multi_threaded::impl$2::run::closure_env$1,tuple$&lt;&gt; &gt; &gt; &gt;, core::cell::RefCell&lt;tuple$ (30 samples, 0.02%)</title><rect x="2.2848%" y="245" width="0.0174%" height="15" fill="rgb(243,10,4)" fg:x="3946" fg:w="30"/><text x="2.5348%" y="255.50"></text></g><g><title>boids.exe`bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block$0(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block_env$0&lt;bevy_ecs::schedule::executor::multi_threaded::impl$2::run::closure_env$1,tuple$ (30 samples, 0.02%)</title><rect x="2.2848%" y="229" width="0.0174%" height="15" fill="rgb(212,137,27)" fg:x="3946" fg:w="30"/><text x="2.5348%" y="239.50"></text></g><g><title>boids.exe`parking::Inner::park(enum2$&lt;core::option::Option (25 samples, 0.01%)</title><rect x="2.2876%" y="213" width="0.0145%" height="15" fill="rgb(231,220,49)" fg:x="3951" fg:w="25"/><text x="2.5376%" y="223.50"></text></g><g><title>boids.exe`std::sync::poison::condvar::Condvar::wait(std::sync::poison::mutex::MutexGuard&lt;tuple$ (24 samples, 0.01%)</title><rect x="2.2882%" y="197" width="0.0139%" height="15" fill="rgb(237,96,20)" fg:x="3952" fg:w="24"/><text x="2.5382%" y="207.50"></text></g><g><title>boids.exe`std::sync::poison::Flag::get (24 samples, 0.01%)</title><rect x="2.2882%" y="181" width="0.0139%" height="15" fill="rgb(239,229,30)" fg:x="3952" fg:w="24"/><text x="2.5382%" y="191.50"></text></g><g><title>boids.exe`core::sync::atomic::AtomicBool::load (24 samples, 0.01%)</title><rect x="2.2882%" y="165" width="0.0139%" height="15" fill="rgb(219,65,33)" fg:x="3952" fg:w="24"/><text x="2.5382%" y="175.50"></text></g><g><title>boids.exe`core::sync::atomic::atomic_load (24 samples, 0.01%)</title><rect x="2.2882%" y="149" width="0.0139%" height="15" fill="rgb(243,134,7)" fg:x="3952" fg:w="24"/><text x="2.5382%" y="159.50"></text></g><g><title>boids.exe`std::sys::sync::condvar::futex::Condvar::wait (24 samples, 0.01%)</title><rect x="2.2882%" y="133" width="0.0139%" height="15" fill="rgb(216,177,54)" fg:x="3952" fg:w="24"/><text x="2.5382%" y="143.50"></text></g><g><title>boids.exe`std::sys::sync::condvar::futex::Condvar::wait_optional_timeout (24 samples, 0.01%)</title><rect x="2.2882%" y="117" width="0.0139%" height="15" fill="rgb(211,160,20)" fg:x="3952" fg:w="24"/><text x="2.5382%" y="127.50"></text></g><g><title>boids.exe`std::sys::pal::windows::futex::futex_wait (24 samples, 0.01%)</title><rect x="2.2882%" y="101" width="0.0139%" height="15" fill="rgb(239,85,39)" fg:x="3952" fg:w="24"/><text x="2.5382%" y="111.50"></text></g><g><title>boids.exe`std::sys::pal::windows::futex::wait_on_address (23 samples, 0.01%)</title><rect x="2.2888%" y="85" width="0.0133%" height="15" fill="rgb(232,125,22)" fg:x="3953" fg:w="23"/><text x="2.5388%" y="95.50"></text></g><g><title>`0x7FF89ABBF923 (23 samples, 0.01%)</title><rect x="2.2888%" y="69" width="0.0133%" height="15" fill="rgb(244,57,34)" fg:x="3953" fg:w="23"/><text x="2.5388%" y="79.50"></text></g><g><title>`0x7FF89D8FBFA3 (23 samples, 0.01%)</title><rect x="2.2888%" y="53" width="0.0133%" height="15" fill="rgb(214,203,32)" fg:x="3953" fg:w="23"/><text x="2.5388%" y="63.50"></text></g><g><title>`0x7FF89D8FFEDC (22 samples, 0.01%)</title><rect x="2.2894%" y="37" width="0.0127%" height="15" fill="rgb(207,58,43)" fg:x="3954" fg:w="22"/><text x="2.5394%" y="47.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::resource_mut (57 samples, 0.03%)</title><rect x="2.2697%" y="421" width="0.0330%" height="15" fill="rgb(215,193,15)" fg:x="3920" fg:w="57"/><text x="2.5197%" y="431.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::get_resource_mut (57 samples, 0.03%)</title><rect x="2.2697%" y="405" width="0.0330%" height="15" fill="rgb(232,15,44)" fg:x="3920" fg:w="57"/><text x="2.5197%" y="415.50"></text></g><g><title>boids.exe`bevy_ecs::world::unsafe_world_cell::UnsafeWorldCell::get_resource_mut (57 samples, 0.03%)</title><rect x="2.2697%" y="389" width="0.0330%" height="15" fill="rgb(212,3,48)" fg:x="3920" fg:w="57"/><text x="2.5197%" y="399.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::schedule::Schedule::run (64 samples, 0.04%)</title><rect x="2.2691%" y="757" width="0.0371%" height="15" fill="rgb(218,128,7)" fg:x="3919" fg:w="64"/><text x="2.5191%" y="767.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::executor::single_threaded::impl$0::run(bevy_ecs::schedule::executor::single_threaded::SingleThreadedExecutor*, bevy_ecs::schedule::executor::SystemSchedule*, bevy_ecs::world::World*, enum2$&lt;core::option::Option&lt;ref$&lt;fixedbitset::FixedBitSet&gt; &gt; &gt;, void (*)(bevy_ecs::error::bevy_error::BevyError, enum2$ (64 samples, 0.04%)</title><rect x="2.2691%" y="741" width="0.0371%" height="15" fill="rgb(226,216,39)" fg:x="3919" fg:w="64"/><text x="2.5191%" y="751.50"></text></g><g><title>boids.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe (63 samples, 0.04%)</title><rect x="2.2697%" y="725" width="0.0365%" height="15" fill="rgb(243,47,51)" fg:x="3920" fg:w="63"/><text x="2.5197%" y="735.50"></text></g><g><title>boids.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe (63 samples, 0.04%)</title><rect x="2.2697%" y="709" width="0.0365%" height="15" fill="rgb(241,183,40)" fg:x="3920" fg:w="63"/><text x="2.5197%" y="719.50"></text></g><g><title>boids.exe`std::panicking::try::do_call (63 samples, 0.04%)</title><rect x="2.2697%" y="693" width="0.0365%" height="15" fill="rgb(231,217,32)" fg:x="3920" fg:w="63"/><text x="2.5197%" y="703.50"></text></g><g><title>boids.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe (63 samples, 0.04%)</title><rect x="2.2697%" y="677" width="0.0365%" height="15" fill="rgb(229,61,38)" fg:x="3920" fg:w="63"/><text x="2.5197%" y="687.50"></text></g><g><title>boids.exe`core::ops::function::FnOnce::call_once (63 samples, 0.04%)</title><rect x="2.2697%" y="661" width="0.0365%" height="15" fill="rgb(225,210,5)" fg:x="3920" fg:w="63"/><text x="2.5197%" y="671.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::executor::single_threaded::impl$0::run::closure$0 (63 samples, 0.04%)</title><rect x="2.2697%" y="645" width="0.0365%" height="15" fill="rgb(231,79,45)" fg:x="3920" fg:w="63"/><text x="2.5197%" y="655.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::executor::__rust_begin_short_backtrace::run(alloc::boxed::Box&lt;dyn$&lt;bevy_ecs::system::system::System&lt;assoc$&lt;In,tuple$&lt;&gt; &gt;,assoc$&lt;Out,enum2$&lt;core::result::Result&lt;tuple$ (63 samples, 0.04%)</title><rect x="2.2697%" y="629" width="0.0365%" height="15" fill="rgb(224,100,7)" fg:x="3920" fg:w="63"/><text x="2.5197%" y="639.50"></text></g><g><title>boids.exe`bevy_ecs::system::system::System::run_without_applying_deferred&lt;bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;bevy_ecs::system::exclusive_function_system::ExclusiveFunctionSystem&lt;void (*)(),void (*)(ref_mut$&lt;bevy_ecs::world::World&gt;)&gt; &gt; &gt;(bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;bevy_ecs::system::exclusive_function_system::ExclusiveFunctionSystem&lt;void (*)(),void (*)(ref_mut$&lt;bevy_ecs::world::World&gt;)&gt; &gt;*, tuple$ (63 samples, 0.04%)</title><rect x="2.2697%" y="613" width="0.0365%" height="15" fill="rgb(241,198,18)" fg:x="3920" fg:w="63"/><text x="2.5197%" y="623.50"></text></g><g><title>boids.exe`bevy_ecs::system::schedule_system::impl$1::run_unsafe(bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;bevy_ecs::system::exclusive_function_system::ExclusiveFunctionSystem&lt;void (*)(),void (*)(ref_mut$&lt;bevy_ecs::world::World&gt;)&gt; &gt;*, tuple$ (63 samples, 0.04%)</title><rect x="2.2697%" y="597" width="0.0365%" height="15" fill="rgb(252,97,53)" fg:x="3920" fg:w="63"/><text x="2.5197%" y="607.50"></text></g><g><title>boids.exe`bevy_ecs::system::exclusive_function_system::impl$2::run_unsafe(bevy_ecs::system::exclusive_function_system::ExclusiveFunctionSystem&lt;void (*)(),void (*)(ref_mut$&lt;bevy_ecs::world::World&gt;)&gt;*, tuple$ (63 samples, 0.04%)</title><rect x="2.2697%" y="581" width="0.0365%" height="15" fill="rgb(220,88,7)" fg:x="3920" fg:w="63"/><text x="2.5197%" y="591.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::last_change_tick_scope(bevy_ecs::component::Tick, bevy_ecs::system::exclusive_function_system::impl$2::run_unsafe::closure_env$0&lt;void (*)(),void (*)(ref_mut$ (63 samples, 0.04%)</title><rect x="2.2697%" y="565" width="0.0365%" height="15" fill="rgb(213,176,14)" fg:x="3920" fg:w="63"/><text x="2.5197%" y="575.50"></text></g><g><title>boids.exe`bevy_ecs::system::exclusive_function_system::impl$2::run_unsafe::closure$0(bevy_ecs::system::exclusive_function_system::impl$2::run_unsafe::closure_env$0&lt;void (*)(),void (*)(ref_mut$ (63 samples, 0.04%)</title><rect x="2.2697%" y="549" width="0.0365%" height="15" fill="rgb(246,73,7)" fg:x="3920" fg:w="63"/><text x="2.5197%" y="559.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::flush (63 samples, 0.04%)</title><rect x="2.2697%" y="533" width="0.0365%" height="15" fill="rgb(245,64,36)" fg:x="3920" fg:w="63"/><text x="2.5197%" y="543.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::resource_scope&lt;bevy_app::main_schedule::FixedMainScheduleOrder,tuple$&lt;&gt;,bevy_app::main_schedule::impl$6::run_fixed_main::closure_env$0&gt; (63 samples, 0.04%)</title><rect x="2.2697%" y="517" width="0.0365%" height="15" fill="rgb(245,80,10)" fg:x="3920" fg:w="63"/><text x="2.5197%" y="527.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::try_resource_scope (63 samples, 0.04%)</title><rect x="2.2697%" y="501" width="0.0365%" height="15" fill="rgb(232,107,50)" fg:x="3920" fg:w="63"/><text x="2.5197%" y="511.50"></text></g><g><title>boids.exe`bevy_app::main_schedule::impl$6::run_fixed_main::closure$0(bevy_app::main_schedule::impl$6::run_fixed_main::closure_env$0, bevy_ecs::world::World*, bevy_ecs::change_detection::Mut (63 samples, 0.04%)</title><rect x="2.2697%" y="485" width="0.0365%" height="15" fill="rgb(253,3,0)" fg:x="3920" fg:w="63"/><text x="2.5197%" y="495.50"></text></g><g><title>boids.exe`core::slice::iter::impl$182::next(core::slice::iter::Iter&lt;bevy_ecs::intern::Interned&lt;dyn$ (63 samples, 0.04%)</title><rect x="2.2697%" y="469" width="0.0365%" height="15" fill="rgb(212,99,53)" fg:x="3920" fg:w="63"/><text x="2.5197%" y="479.50"></text></g><g><title>boids.exe`core::ptr::non_null::NonNull&lt;bevy_ecs::intern::Interned&lt;dyn$&lt;bevy_ecs::schedule::set::ScheduleLabel&gt; &gt; &gt;::add(core::ptr::non_null::NonNull&lt;bevy_ecs::intern::Interned&lt;dyn$ (63 samples, 0.04%)</title><rect x="2.2697%" y="453" width="0.0365%" height="15" fill="rgb(249,111,54)" fg:x="3920" fg:w="63"/><text x="2.5197%" y="463.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::try_schedule_scope&lt;tuple$&lt;&gt;,bevy_ecs::intern::Interned&lt;dyn$&lt;bevy_ecs::schedule::set::ScheduleLabel&gt; &gt;,bevy_ecs::world::impl$4::try_run_schedule::closure_env$0&lt;bevy_ecs::intern::Interned&lt;dyn$&lt;bevy_ecs::schedule::set::ScheduleLabel&gt; &gt; &gt; &gt;(bevy_ecs::intern::Interned&lt;dyn$&lt;bevy_ecs::schedule::set::ScheduleLabel&gt; &gt;, bevy_ecs::world::impl$4::try_run_schedule::closure_env$0&lt;bevy_ecs::intern::Interned&lt;dyn$ (63 samples, 0.04%)</title><rect x="2.2697%" y="437" width="0.0365%" height="15" fill="rgb(249,55,30)" fg:x="3920" fg:w="63"/><text x="2.5197%" y="447.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::resource_mut (328 samples, 0.19%)</title><rect x="2.1174%" y="1125" width="0.1899%" height="15" fill="rgb(237,47,42)" fg:x="3657" fg:w="328"/><text x="2.3674%" y="1135.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::get_resource_mut (328 samples, 0.19%)</title><rect x="2.1174%" y="1109" width="0.1899%" height="15" fill="rgb(211,20,18)" fg:x="3657" fg:w="328"/><text x="2.3674%" y="1119.50"></text></g><g><title>boids.exe`bevy_ecs::world::unsafe_world_cell::UnsafeWorldCell::get_resource_mut (328 samples, 0.19%)</title><rect x="2.1174%" y="1093" width="0.1899%" height="15" fill="rgb(231,203,46)" fg:x="3657" fg:w="328"/><text x="2.3674%" y="1103.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::schedule::Schedule::run (328 samples, 0.19%)</title><rect x="2.1174%" y="1077" width="0.1899%" height="15" fill="rgb(237,142,3)" fg:x="3657" fg:w="328"/><text x="2.3674%" y="1087.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::executor::single_threaded::impl$0::run(bevy_ecs::schedule::executor::single_threaded::SingleThreadedExecutor*, bevy_ecs::schedule::executor::SystemSchedule*, bevy_ecs::world::World*, enum2$&lt;core::option::Option&lt;ref$&lt;fixedbitset::FixedBitSet&gt; &gt; &gt;, void (*)(bevy_ecs::error::bevy_error::BevyError, enum2$ (68 samples, 0.04%)</title><rect x="2.2680%" y="1061" width="0.0394%" height="15" fill="rgb(241,107,1)" fg:x="3917" fg:w="68"/><text x="2.5180%" y="1071.50"></text></g><g><title>boids.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe (68 samples, 0.04%)</title><rect x="2.2680%" y="1045" width="0.0394%" height="15" fill="rgb(229,83,13)" fg:x="3917" fg:w="68"/><text x="2.5180%" y="1055.50"></text></g><g><title>boids.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe (68 samples, 0.04%)</title><rect x="2.2680%" y="1029" width="0.0394%" height="15" fill="rgb(241,91,40)" fg:x="3917" fg:w="68"/><text x="2.5180%" y="1039.50"></text></g><g><title>boids.exe`std::panicking::try::do_call (68 samples, 0.04%)</title><rect x="2.2680%" y="1013" width="0.0394%" height="15" fill="rgb(225,3,45)" fg:x="3917" fg:w="68"/><text x="2.5180%" y="1023.50"></text></g><g><title>boids.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe (68 samples, 0.04%)</title><rect x="2.2680%" y="997" width="0.0394%" height="15" fill="rgb(244,223,14)" fg:x="3917" fg:w="68"/><text x="2.5180%" y="1007.50"></text></g><g><title>boids.exe`core::ops::function::FnOnce::call_once (68 samples, 0.04%)</title><rect x="2.2680%" y="981" width="0.0394%" height="15" fill="rgb(224,124,37)" fg:x="3917" fg:w="68"/><text x="2.5180%" y="991.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::executor::single_threaded::impl$0::run::closure$0 (68 samples, 0.04%)</title><rect x="2.2680%" y="965" width="0.0394%" height="15" fill="rgb(251,171,30)" fg:x="3917" fg:w="68"/><text x="2.5180%" y="975.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::executor::__rust_begin_short_backtrace::run(alloc::boxed::Box&lt;dyn$&lt;bevy_ecs::system::system::System&lt;assoc$&lt;In,tuple$&lt;&gt; &gt;,assoc$&lt;Out,enum2$&lt;core::result::Result&lt;tuple$ (68 samples, 0.04%)</title><rect x="2.2680%" y="949" width="0.0394%" height="15" fill="rgb(236,46,54)" fg:x="3917" fg:w="68"/><text x="2.5180%" y="959.50"></text></g><g><title>boids.exe`bevy_ecs::system::system::System::run_without_applying_deferred&lt;bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;bevy_ecs::system::exclusive_function_system::ExclusiveFunctionSystem&lt;void (*)(),void (*)(ref_mut$&lt;bevy_ecs::world::World&gt;)&gt; &gt; &gt;(bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;bevy_ecs::system::exclusive_function_system::ExclusiveFunctionSystem&lt;void (*)(),void (*)(ref_mut$&lt;bevy_ecs::world::World&gt;)&gt; &gt;*, tuple$ (68 samples, 0.04%)</title><rect x="2.2680%" y="933" width="0.0394%" height="15" fill="rgb(245,213,5)" fg:x="3917" fg:w="68"/><text x="2.5180%" y="943.50"></text></g><g><title>boids.exe`bevy_ecs::system::schedule_system::impl$1::run_unsafe(bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;bevy_ecs::system::exclusive_function_system::ExclusiveFunctionSystem&lt;void (*)(),void (*)(ref_mut$&lt;bevy_ecs::world::World&gt;)&gt; &gt;*, tuple$ (68 samples, 0.04%)</title><rect x="2.2680%" y="917" width="0.0394%" height="15" fill="rgb(230,144,27)" fg:x="3917" fg:w="68"/><text x="2.5180%" y="927.50"></text></g><g><title>boids.exe`bevy_ecs::system::exclusive_function_system::impl$2::run_unsafe(bevy_ecs::system::exclusive_function_system::ExclusiveFunctionSystem&lt;void (*)(),void (*)(ref_mut$&lt;bevy_ecs::world::World&gt;)&gt;*, tuple$ (68 samples, 0.04%)</title><rect x="2.2680%" y="901" width="0.0394%" height="15" fill="rgb(220,86,6)" fg:x="3917" fg:w="68"/><text x="2.5180%" y="911.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::last_change_tick_scope(bevy_ecs::component::Tick, bevy_ecs::system::exclusive_function_system::impl$2::run_unsafe::closure_env$0&lt;void (*)(),void (*)(ref_mut$ (68 samples, 0.04%)</title><rect x="2.2680%" y="885" width="0.0394%" height="15" fill="rgb(240,20,13)" fg:x="3917" fg:w="68"/><text x="2.5180%" y="895.50"></text></g><g><title>boids.exe`bevy_ecs::system::exclusive_function_system::impl$2::run_unsafe::closure$0(bevy_ecs::system::exclusive_function_system::impl$2::run_unsafe::closure_env$0&lt;void (*)(),void (*)(ref_mut$ (68 samples, 0.04%)</title><rect x="2.2680%" y="869" width="0.0394%" height="15" fill="rgb(217,89,34)" fg:x="3917" fg:w="68"/><text x="2.5180%" y="879.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::flush (68 samples, 0.04%)</title><rect x="2.2680%" y="853" width="0.0394%" height="15" fill="rgb(229,13,5)" fg:x="3917" fg:w="68"/><text x="2.5180%" y="863.50"></text></g><g><title>boids.exe`core::ops::function::impls::impl$3::call_mut&lt;tuple$&lt;ref_mut$&lt;bevy_ecs::world::World&gt; &gt;,void (*)(ref_mut$&lt;bevy_ecs::world::World&gt;)&gt;(void (***) (68 samples, 0.04%)</title><rect x="2.2680%" y="837" width="0.0394%" height="15" fill="rgb(244,67,35)" fg:x="3917" fg:w="68"/><text x="2.5180%" y="847.50"></text></g><g><title>boids.exe`core::ops::function::FnMut::call_mut(void (**) (68 samples, 0.04%)</title><rect x="2.2680%" y="821" width="0.0394%" height="15" fill="rgb(221,40,2)" fg:x="3917" fg:w="68"/><text x="2.5180%" y="831.50"></text></g><g><title>boids.exe`bevy_time::fixed::run_fixed_main_schedule (68 samples, 0.04%)</title><rect x="2.2680%" y="805" width="0.0394%" height="15" fill="rgb(237,157,21)" fg:x="3917" fg:w="68"/><text x="2.5180%" y="815.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::try_schedule_scope&lt;tuple$&lt;&gt;,bevy_app::main_schedule::FixedMain,bevy_time::fixed::run_fixed_main_schedule::closure_env$0&gt; (66 samples, 0.04%)</title><rect x="2.2691%" y="789" width="0.0382%" height="15" fill="rgb(222,94,11)" fg:x="3919" fg:w="66"/><text x="2.5191%" y="799.50"></text></g><g><title>boids.exe`bevy_time::fixed::run_fixed_main_schedule::closure$0 (66 samples, 0.04%)</title><rect x="2.2691%" y="773" width="0.0382%" height="15" fill="rgb(249,113,6)" fg:x="3919" fg:w="66"/><text x="2.5191%" y="783.50"></text></g><g><title>boids.exe`bevy_app::sub_app::SubApps::update (388 samples, 0.22%)</title><rect x="2.0844%" y="1589" width="0.2247%" height="15" fill="rgb(238,137,36)" fg:x="3600" fg:w="388"/><text x="2.3344%" y="1599.50"></text></g><g><title>boids.exe`bevy_platform::collections::hash_map::HashMap&lt;bevy_ecs::intern::Interned&lt;dyn$&lt;bevy_app::app::AppLabel&gt; &gt;,bevy_app::sub_app::SubApp,bevy_platform::hash::FixedHasher&gt;::iter_mut (333 samples, 0.19%)</title><rect x="2.1163%" y="1573" width="0.1928%" height="15" fill="rgb(210,102,26)" fg:x="3655" fg:w="333"/><text x="2.3663%" y="1583.50"></text></g><g><title>boids.exe`hashbrown::map::HashMap&lt;bevy_ecs::intern::Interned&lt;dyn$&lt;bevy_app::app::AppLabel&gt; &gt;,bevy_app::sub_app::SubApp,bevy_platform::hash::FixedHasher,hashbrown::raw::alloc::inner::Global&gt;::iter_mut (333 samples, 0.19%)</title><rect x="2.1163%" y="1557" width="0.1928%" height="15" fill="rgb(218,30,30)" fg:x="3655" fg:w="333"/><text x="2.3663%" y="1567.50"></text></g><g><title>boids.exe`hashbrown::raw::RawTable&lt;tuple$&lt;bevy_ecs::intern::Interned&lt;dyn$&lt;bevy_app::app::AppLabel&gt; &gt;,bevy_app::sub_app::SubApp&gt;,hashbrown::raw::alloc::inner::Global&gt;::iter (333 samples, 0.19%)</title><rect x="2.1163%" y="1541" width="0.1928%" height="15" fill="rgb(214,67,26)" fg:x="3655" fg:w="333"/><text x="2.3663%" y="1551.50"></text></g><g><title>boids.exe`hashbrown::raw::RawTableInner::iter (333 samples, 0.19%)</title><rect x="2.1163%" y="1525" width="0.1928%" height="15" fill="rgb(251,9,53)" fg:x="3655" fg:w="333"/><text x="2.3663%" y="1535.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::schedule_scope&lt;tuple$&lt;&gt;,bevy_ecs::intern::Interned&lt;dyn$&lt;bevy_ecs::schedule::set::ScheduleLabel&gt; &gt;,bevy_ecs::world::impl$4::run_schedule::closure_env$0&lt;bevy_ecs::intern::Interned&lt;dyn$&lt;bevy_ecs::schedule::set::ScheduleLabel&gt; &gt; &gt; &gt;(bevy_ecs::intern::Interned&lt;dyn$&lt;bevy_ecs::schedule::set::ScheduleLabel&gt; &gt;, bevy_ecs::world::impl$4::run_schedule::closure_env$0&lt;bevy_ecs::intern::Interned&lt;dyn$ (333 samples, 0.19%)</title><rect x="2.1163%" y="1509" width="0.1928%" height="15" fill="rgb(228,204,25)" fg:x="3655" fg:w="333"/><text x="2.3663%" y="1519.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::try_schedule_scope(bevy_ecs::intern::Interned&lt;dyn$&lt;bevy_ecs::schedule::set::ScheduleLabel&gt; &gt;, bevy_ecs::world::impl$4::run_schedule::closure_env$0&lt;bevy_ecs::intern::Interned&lt;dyn$ (333 samples, 0.19%)</title><rect x="2.1163%" y="1493" width="0.1928%" height="15" fill="rgb(207,153,8)" fg:x="3655" fg:w="333"/><text x="2.3663%" y="1503.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::resource_mut (333 samples, 0.19%)</title><rect x="2.1163%" y="1477" width="0.1928%" height="15" fill="rgb(242,9,16)" fg:x="3655" fg:w="333"/><text x="2.3663%" y="1487.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::get_resource_mut (333 samples, 0.19%)</title><rect x="2.1163%" y="1461" width="0.1928%" height="15" fill="rgb(217,211,10)" fg:x="3655" fg:w="333"/><text x="2.3663%" y="1471.50"></text></g><g><title>boids.exe`bevy_ecs::world::unsafe_world_cell::UnsafeWorldCell::get_resource_mut (333 samples, 0.19%)</title><rect x="2.1163%" y="1445" width="0.1928%" height="15" fill="rgb(219,228,52)" fg:x="3655" fg:w="333"/><text x="2.3663%" y="1455.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::schedule::Schedule::run (333 samples, 0.19%)</title><rect x="2.1163%" y="1429" width="0.1928%" height="15" fill="rgb(231,92,29)" fg:x="3655" fg:w="333"/><text x="2.3663%" y="1439.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::executor::single_threaded::impl$0::run(bevy_ecs::schedule::executor::single_threaded::SingleThreadedExecutor*, bevy_ecs::schedule::executor::SystemSchedule*, bevy_ecs::world::World*, enum2$&lt;core::option::Option&lt;ref$&lt;fixedbitset::FixedBitSet&gt; &gt; &gt;, void (*)(bevy_ecs::error::bevy_error::BevyError, enum2$ (333 samples, 0.19%)</title><rect x="2.1163%" y="1413" width="0.1928%" height="15" fill="rgb(232,8,23)" fg:x="3655" fg:w="333"/><text x="2.3663%" y="1423.50"></text></g><g><title>boids.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe (333 samples, 0.19%)</title><rect x="2.1163%" y="1397" width="0.1928%" height="15" fill="rgb(216,211,34)" fg:x="3655" fg:w="333"/><text x="2.3663%" y="1407.50"></text></g><g><title>boids.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe (333 samples, 0.19%)</title><rect x="2.1163%" y="1381" width="0.1928%" height="15" fill="rgb(236,151,0)" fg:x="3655" fg:w="333"/><text x="2.3663%" y="1391.50"></text></g><g><title>boids.exe`std::panicking::try::do_call (333 samples, 0.19%)</title><rect x="2.1163%" y="1365" width="0.1928%" height="15" fill="rgb(209,168,3)" fg:x="3655" fg:w="333"/><text x="2.3663%" y="1375.50"></text></g><g><title>boids.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe (333 samples, 0.19%)</title><rect x="2.1163%" y="1349" width="0.1928%" height="15" fill="rgb(208,129,28)" fg:x="3655" fg:w="333"/><text x="2.3663%" y="1359.50"></text></g><g><title>boids.exe`core::ops::function::FnOnce::call_once (333 samples, 0.19%)</title><rect x="2.1163%" y="1333" width="0.1928%" height="15" fill="rgb(229,78,22)" fg:x="3655" fg:w="333"/><text x="2.3663%" y="1343.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::executor::single_threaded::impl$0::run::closure$0 (333 samples, 0.19%)</title><rect x="2.1163%" y="1317" width="0.1928%" height="15" fill="rgb(228,187,13)" fg:x="3655" fg:w="333"/><text x="2.3663%" y="1327.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::executor::__rust_begin_short_backtrace::run(alloc::boxed::Box&lt;dyn$&lt;bevy_ecs::system::system::System&lt;assoc$&lt;In,tuple$&lt;&gt; &gt;,assoc$&lt;Out,enum2$&lt;core::result::Result&lt;tuple$ (333 samples, 0.19%)</title><rect x="2.1163%" y="1301" width="0.1928%" height="15" fill="rgb(240,119,24)" fg:x="3655" fg:w="333"/><text x="2.3663%" y="1311.50"></text></g><g><title>boids.exe`bevy_ecs::system::system::System::run_without_applying_deferred&lt;bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;bevy_ecs::system::exclusive_function_system::ExclusiveFunctionSystem&lt;void (*)(bevy_ecs::system::system_param::Local&lt;bool&gt;),void (*)(ref_mut$&lt;bevy_ecs::world::World&gt;,bevy_ecs::system::system_param::Local&lt;bool&gt;)&gt; &gt; &gt;(bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;bevy_ecs::system::exclusive_function_system::ExclusiveFunctionSystem&lt;void (*)(bevy_ecs::system::system_param::Local&lt;bool&gt;),void (*)(ref_mut$&lt;bevy_ecs::world::World&gt;,bevy_ecs::system::system_param::Local&lt;bool&gt;)&gt; &gt;*, tuple$ (333 samples, 0.19%)</title><rect x="2.1163%" y="1285" width="0.1928%" height="15" fill="rgb(209,194,42)" fg:x="3655" fg:w="333"/><text x="2.3663%" y="1295.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::last_change_tick_scope&lt;tuple$&lt;&gt;,bevy_ecs::system::exclusive_function_system::impl$2::run_unsafe::closure_env$0&lt;void (*)(bevy_ecs::system::system_param::Local&lt;bool&gt;),void (*)(ref_mut$&lt;bevy_ecs::world::World&gt;,bevy_ecs::system::system_param::Local&lt;bool&gt;)&gt; &gt;(bevy_ecs::component::Tick, bevy_ecs::system::exclusive_function_system::impl$2::run_unsafe::closure_env$0&lt;void (*)(bevy_ecs::system::system_param::Local&lt;bool&gt;),void (*)(ref_mut$&lt;bevy_ecs::world::World&gt;,bevy_ecs::system::system_param::Local (333 samples, 0.19%)</title><rect x="2.1163%" y="1269" width="0.1928%" height="15" fill="rgb(247,200,46)" fg:x="3655" fg:w="333"/><text x="2.3663%" y="1279.50"></text></g><g><title>boids.exe`bevy_ecs::system::exclusive_function_system::impl$2::run_unsafe::closure$0(bevy_ecs::system::exclusive_function_system::impl$2::run_unsafe::closure_env$0&lt;void (*)(bevy_ecs::system::system_param::Local&lt;bool&gt;),void (*)(ref_mut$&lt;bevy_ecs::world::World&gt;,bevy_ecs::system::system_param::Local (333 samples, 0.19%)</title><rect x="2.1163%" y="1253" width="0.1928%" height="15" fill="rgb(218,76,16)" fg:x="3655" fg:w="333"/><text x="2.3663%" y="1263.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::flush (333 samples, 0.19%)</title><rect x="2.1163%" y="1237" width="0.1928%" height="15" fill="rgb(225,21,48)" fg:x="3655" fg:w="333"/><text x="2.3663%" y="1247.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::resource_scope&lt;bevy_app::main_schedule::MainScheduleOrder,tuple$&lt;&gt;,bevy_app::main_schedule::impl$2::run_main::closure_env$1&gt; (333 samples, 0.19%)</title><rect x="2.1163%" y="1221" width="0.1928%" height="15" fill="rgb(239,223,50)" fg:x="3655" fg:w="333"/><text x="2.3663%" y="1231.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::try_resource_scope (333 samples, 0.19%)</title><rect x="2.1163%" y="1205" width="0.1928%" height="15" fill="rgb(244,45,21)" fg:x="3655" fg:w="333"/><text x="2.3663%" y="1215.50"></text></g><g><title>boids.exe`bevy_app::main_schedule::impl$2::run_main::closure$1(bevy_app::main_schedule::impl$2::run_main::closure_env$1, bevy_ecs::world::World*, bevy_ecs::change_detection::Mut (333 samples, 0.19%)</title><rect x="2.1163%" y="1189" width="0.1928%" height="15" fill="rgb(232,33,43)" fg:x="3655" fg:w="333"/><text x="2.3663%" y="1199.50"></text></g><g><title>boids.exe`core::slice::iter::impl$182::next(core::slice::iter::Iter&lt;bevy_ecs::intern::Interned&lt;dyn$ (333 samples, 0.19%)</title><rect x="2.1163%" y="1173" width="0.1928%" height="15" fill="rgb(209,8,3)" fg:x="3655" fg:w="333"/><text x="2.3663%" y="1183.50"></text></g><g><title>boids.exe`core::ptr::non_null::NonNull&lt;bevy_ecs::intern::Interned&lt;dyn$&lt;bevy_ecs::schedule::set::ScheduleLabel&gt; &gt; &gt;::add(core::ptr::non_null::NonNull&lt;bevy_ecs::intern::Interned&lt;dyn$ (333 samples, 0.19%)</title><rect x="2.1163%" y="1157" width="0.1928%" height="15" fill="rgb(214,25,53)" fg:x="3655" fg:w="333"/><text x="2.3663%" y="1167.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::try_schedule_scope&lt;tuple$&lt;&gt;,bevy_ecs::intern::Interned&lt;dyn$&lt;bevy_ecs::schedule::set::ScheduleLabel&gt; &gt;,bevy_ecs::world::impl$4::try_run_schedule::closure_env$0&lt;bevy_ecs::intern::Interned&lt;dyn$&lt;bevy_ecs::schedule::set::ScheduleLabel&gt; &gt; &gt; &gt;(bevy_ecs::intern::Interned&lt;dyn$&lt;bevy_ecs::schedule::set::ScheduleLabel&gt; &gt;, bevy_ecs::world::impl$4::try_run_schedule::closure_env$0&lt;bevy_ecs::intern::Interned&lt;dyn$ (333 samples, 0.19%)</title><rect x="2.1163%" y="1141" width="0.1928%" height="15" fill="rgb(254,186,54)" fg:x="3655" fg:w="333"/><text x="2.3663%" y="1151.50"></text></g><g><title>boids.exe`bevy_winit::state::WinitAppRunnerState&lt;bevy_winit::WakeUp&gt;::update_cursors (407 samples, 0.24%)</title><rect x="2.0838%" y="1605" width="0.2357%" height="15" fill="rgb(208,174,49)" fg:x="3599" fg:w="407"/><text x="2.3338%" y="1615.50"></text></g><g><title>`0x7FF89D6484FB (451 samples, 0.26%)</title><rect x="2.0636%" y="1989" width="0.2611%" height="15" fill="rgb(233,191,51)" fg:x="3564" fg:w="451"/><text x="2.3136%" y="1999.50"></text></g><g><title>`0x7FF89D648EB8 (451 samples, 0.26%)</title><rect x="2.0636%" y="1973" width="0.2611%" height="15" fill="rgb(222,134,10)" fg:x="3564" fg:w="451"/><text x="2.3136%" y="1983.50"></text></g><g><title>boids.exe`winit::platform_impl::windows::event_loop::public_window_callback (451 samples, 0.26%)</title><rect x="2.0636%" y="1957" width="0.2611%" height="15" fill="rgb(230,226,20)" fg:x="3564" fg:w="451"/><text x="2.3136%" y="1967.50"></text></g><g><title>boids.exe`winit::platform_impl::windows::event_loop::public_window_callback_inner (451 samples, 0.26%)</title><rect x="2.0636%" y="1941" width="0.2611%" height="15" fill="rgb(251,111,25)" fg:x="3564" fg:w="451"/><text x="2.3136%" y="1951.50"></text></g><g><title>boids.exe`enum2$&lt;core::option::Option&lt;tuple$&lt;&gt; &gt; &gt;::unwrap_or_else(enum2$&lt;core::option::Option&lt;tuple$ (451 samples, 0.26%)</title><rect x="2.0636%" y="1925" width="0.2611%" height="15" fill="rgb(224,40,46)" fg:x="3564" fg:w="451"/><text x="2.3136%" y="1935.50"></text></g><g><title>boids.exe`winit::platform_impl::windows::event_loop::runner::EventLoopRunner&lt;winit::platform_impl::windows::event_loop::UserEventPlaceholder&gt;::catch_unwind&lt;winit::platform_impl::windows::event_loop::UserEventPlaceholder,tuple$&lt;&gt;,winit::platform_impl::windows::event_loop::public_window_callback_inner::closure_env$4&gt; (451 samples, 0.26%)</title><rect x="2.0636%" y="1909" width="0.2611%" height="15" fill="rgb(236,108,47)" fg:x="3564" fg:w="451"/><text x="2.3136%" y="1919.50"></text></g><g><title>boids.exe`winit::platform_impl::windows::event_loop::public_window_callback_inner::closure$4 (450 samples, 0.26%)</title><rect x="2.0642%" y="1893" width="0.2606%" height="15" fill="rgb(234,93,0)" fg:x="3565" fg:w="450"/><text x="2.3142%" y="1903.50"></text></g><g><title>boids.exe`winit::platform_impl::windows::event_loop::runner::EventLoopRunner&lt;winit::platform_impl::windows::event_loop::UserEventPlaceholder&gt;::send_event&lt;winit::platform_impl::windows::event_loop::UserEventPlaceholder&gt;(enum2$&lt;winit::event::Event (425 samples, 0.25%)</title><rect x="2.0786%" y="1877" width="0.2461%" height="15" fill="rgb(224,213,32)" fg:x="3590" fg:w="425"/><text x="2.3286%" y="1887.50"></text></g><g><title>boids.exe`core::cell::Cell&lt;bool&gt;::set (425 samples, 0.25%)</title><rect x="2.0786%" y="1861" width="0.2461%" height="15" fill="rgb(251,11,48)" fg:x="3590" fg:w="425"/><text x="2.3286%" y="1871.50"></text></g><g><title>boids.exe`core::cell::Cell&lt;bool&gt;::replace (425 samples, 0.25%)</title><rect x="2.0786%" y="1845" width="0.2461%" height="15" fill="rgb(236,173,5)" fg:x="3590" fg:w="425"/><text x="2.3286%" y="1855.50"></text></g><g><title>boids.exe`core::mem::replace (425 samples, 0.25%)</title><rect x="2.0786%" y="1829" width="0.2461%" height="15" fill="rgb(230,95,12)" fg:x="3590" fg:w="425"/><text x="2.3286%" y="1839.50"></text></g><g><title>boids.exe`winit::platform_impl::windows::event_loop::runner::EventLoopRunner&lt;winit::platform_impl::windows::event_loop::UserEventPlaceholder&gt;::catch_unwind&lt;winit::platform_impl::windows::event_loop::UserEventPlaceholder,tuple$&lt;&gt;,winit::platform_impl::windows::event_loop::runner::impl$3::call_event_handler::closure_env$0&lt;winit::platform_impl::windows::event_loop::UserEventPlaceholder&gt; &gt;(winit::platform_impl::windows::event_loop::runner::impl$3::call_event_handler::closure_env$0 (425 samples, 0.25%)</title><rect x="2.0786%" y="1813" width="0.2461%" height="15" fill="rgb(232,209,1)" fg:x="3590" fg:w="425"/><text x="2.3286%" y="1823.50"></text></g><g><title>boids.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;winit::platform_impl::windows::event_loop::runner::impl$3::call_event_handler::closure_env$0 (425 samples, 0.25%)</title><rect x="2.0786%" y="1797" width="0.2461%" height="15" fill="rgb(232,6,1)" fg:x="3590" fg:w="425"/><text x="2.3286%" y="1807.50"></text></g><g><title>boids.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;winit::platform_impl::windows::event_loop::runner::impl$3::call_event_handler::closure_env$0 (425 samples, 0.25%)</title><rect x="2.0786%" y="1781" width="0.2461%" height="15" fill="rgb(210,224,50)" fg:x="3590" fg:w="425"/><text x="2.3286%" y="1791.50"></text></g><g><title>boids.exe`std::panicking::try::do_call (425 samples, 0.25%)</title><rect x="2.0786%" y="1765" width="0.2461%" height="15" fill="rgb(228,127,35)" fg:x="3590" fg:w="425"/><text x="2.3286%" y="1775.50"></text></g><g><title>boids.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;winit::platform_impl::windows::event_loop::runner::impl$3::call_event_handler::closure_env$0 (425 samples, 0.25%)</title><rect x="2.0786%" y="1749" width="0.2461%" height="15" fill="rgb(245,102,45)" fg:x="3590" fg:w="425"/><text x="2.3286%" y="1759.50"></text></g><g><title>boids.exe`winit::platform_impl::windows::event_loop::runner::impl$3::call_event_handler::closure$0(winit::platform_impl::windows::event_loop::runner::impl$3::call_event_handler::closure_env$0 (425 samples, 0.25%)</title><rect x="2.0786%" y="1733" width="0.2461%" height="15" fill="rgb(214,1,49)" fg:x="3590" fg:w="425"/><text x="2.3286%" y="1743.50"></text></g><g><title>boids.exe`core::cell::Cell&lt;enum2$&lt;core::option::Option&lt;alloc::boxed::Box&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;enum2$&lt;winit::event::Event&lt;winit::platform_impl::windows::event_loop::UserEventPlaceholder&gt; &gt; &gt;,assoc$&lt;Output,tuple$&lt;&gt; &gt; &gt; &gt;,alloc::alloc::Global&gt; &gt; &gt; &gt;::replace(enum2$&lt;core::option::Option&lt;alloc::boxed::Box&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;enum2$&lt;winit::event::Event&lt;winit::platform_impl::windows::event_loop::UserEventPlaceholder&gt; &gt; &gt;,assoc$&lt;Output,tuple$ (425 samples, 0.25%)</title><rect x="2.0786%" y="1717" width="0.2461%" height="15" fill="rgb(226,163,40)" fg:x="3590" fg:w="425"/><text x="2.3286%" y="1727.50"></text></g><g><title>boids.exe`core::mem::replace(enum2$&lt;core::option::Option&lt;alloc::boxed::Box&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;enum2$&lt;winit::event::Event&lt;winit::platform_impl::windows::event_loop::UserEventPlaceholder&gt; &gt; &gt;,assoc$&lt;Output,tuple$&lt;&gt; &gt; &gt; &gt;,alloc::alloc::Global&gt; &gt; &gt;*, enum2$&lt;core::option::Option&lt;alloc::boxed::Box&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;enum2$&lt;winit::event::Event&lt;winit::platform_impl::windows::event_loop::UserEventPlaceholder&gt; &gt; &gt;,assoc$&lt;Output,tuple$ (425 samples, 0.25%)</title><rect x="2.0786%" y="1701" width="0.2461%" height="15" fill="rgb(239,212,28)" fg:x="3590" fg:w="425"/><text x="2.3286%" y="1711.50"></text></g><g><title>boids.exe`winit::platform_impl::windows::event_loop::impl$3::run_on_demand::closure$0&lt;bevy_winit::WakeUp,winit::event_loop::impl$6::run_app::closure_env$0&lt;bevy_winit::WakeUp,bevy_winit::state::WinitAppRunnerState&lt;bevy_winit::WakeUp&gt; &gt; &gt;(winit::platform_impl::windows::event_loop::impl$3::run_on_demand::closure_env$0&lt;bevy_winit::WakeUp,winit::event_loop::impl$6::run_app::closure_env$0&lt;bevy_winit::WakeUp,bevy_winit::state::WinitAppRunnerState&lt;bevy_winit::WakeUp&gt; &gt; &gt;*, enum2$&lt;winit::event::Event (425 samples, 0.25%)</title><rect x="2.0786%" y="1685" width="0.2461%" height="15" fill="rgb(220,20,13)" fg:x="3590" fg:w="425"/><text x="2.3286%" y="1695.50"></text></g><g><title>boids.exe`winit::event_loop::impl$6::run_app::closure$0(winit::event_loop::impl$6::run_app::closure_env$0&lt;bevy_winit::WakeUp,bevy_winit::state::WinitAppRunnerState&lt;bevy_winit::WakeUp&gt; &gt;*, enum2$&lt;winit::event::Event (424 samples, 0.25%)</title><rect x="2.0792%" y="1669" width="0.2455%" height="15" fill="rgb(210,164,35)" fg:x="3591" fg:w="424"/><text x="2.3292%" y="1679.50"></text></g><g><title>boids.exe`winit::event_loop::dispatch_event_for_app(bevy_winit::state::WinitAppRunnerState&lt;bevy_winit::WakeUp&gt;*, winit::event_loop::ActiveEventLoop*, enum2$&lt;winit::event::Event (424 samples, 0.25%)</title><rect x="2.0792%" y="1653" width="0.2455%" height="15" fill="rgb(248,109,41)" fg:x="3591" fg:w="424"/><text x="2.3292%" y="1663.50"></text></g><g><title>boids.exe`bevy_winit::state::impl$1::window_event&lt;bevy_winit::WakeUp&gt;(bevy_winit::state::WinitAppRunnerState&lt;bevy_winit::WakeUp&gt;*, winit::event_loop::ActiveEventLoop*, winit::window::WindowId, enum2$ (424 samples, 0.25%)</title><rect x="2.0792%" y="1637" width="0.2455%" height="15" fill="rgb(238,23,50)" fg:x="3591" fg:w="424"/><text x="2.3292%" y="1647.50"></text></g><g><title>boids.exe`bevy_winit::state::WinitAppRunnerState&lt;bevy_winit::WakeUp&gt;::redraw_requested&lt;bevy_winit::WakeUp&gt; (421 samples, 0.24%)</title><rect x="2.0809%" y="1621" width="0.2438%" height="15" fill="rgb(211,48,49)" fg:x="3594" fg:w="421"/><text x="2.3309%" y="1631.50"></text></g><g><title>`0x7FF89D648EB8 (458 samples, 0.27%)</title><rect x="2.0636%" y="2021" width="0.2652%" height="15" fill="rgb(223,36,21)" fg:x="3564" fg:w="458"/><text x="2.3136%" y="2031.50"></text></g><g><title>boids.exe`accesskit_windows::subclass::wnd_proc (458 samples, 0.27%)</title><rect x="2.0636%" y="2005" width="0.2652%" height="15" fill="rgb(207,123,46)" fg:x="3564" fg:w="458"/><text x="2.3136%" y="2015.50"></text></g><g><title>boids.exe`winit::platform_impl::windows::event_loop::EventLoop&lt;bevy_winit::WakeUp&gt;::dispatch_peeked_messages (773 samples, 0.45%)</title><rect x="1.8823%" y="2181" width="0.4476%" height="15" fill="rgb(240,218,32)" fg:x="3251" fg:w="773"/><text x="2.1323%" y="2191.50"></text></g><g><title>boids.exe`winit::platform_impl::windows::event_loop::runner::EventLoopRunner&lt;winit::platform_impl::windows::event_loop::UserEventPlaceholder&gt;::take_panic_error (500 samples, 0.29%)</title><rect x="2.0404%" y="2165" width="0.2895%" height="15" fill="rgb(252,5,43)" fg:x="3524" fg:w="500"/><text x="2.2904%" y="2175.50"></text></g><g><title>boids.exe`core::cell::Cell&lt;enum2$&lt;core::option::Option&lt;alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt; &gt;::take (500 samples, 0.29%)</title><rect x="2.0404%" y="2149" width="0.2895%" height="15" fill="rgb(252,84,19)" fg:x="3524" fg:w="500"/><text x="2.2904%" y="2159.50"></text></g><g><title>boids.exe`core::cell::Cell&lt;enum2$&lt;core::option::Option&lt;alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt; &gt;::replace(enum2$&lt;core::option::Option&lt;alloc::boxed::Box&lt;dyn$ (500 samples, 0.29%)</title><rect x="2.0404%" y="2133" width="0.2895%" height="15" fill="rgb(243,152,39)" fg:x="3524" fg:w="500"/><text x="2.2904%" y="2143.50"></text></g><g><title>boids.exe`core::mem::replace(enum2$&lt;core::option::Option&lt;alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;*, enum2$&lt;core::option::Option&lt;alloc::boxed::Box&lt;dyn$ (500 samples, 0.29%)</title><rect x="2.0404%" y="2117" width="0.2895%" height="15" fill="rgb(234,160,15)" fg:x="3524" fg:w="500"/><text x="2.2904%" y="2127.50"></text></g><g><title>`0x7FF89D648854 (462 samples, 0.27%)</title><rect x="2.0624%" y="2101" width="0.2675%" height="15" fill="rgb(237,34,20)" fg:x="3562" fg:w="462"/><text x="2.3124%" y="2111.50"></text></g><g><title>`0x7FF89B511B24 (461 samples, 0.27%)</title><rect x="2.0630%" y="2085" width="0.2669%" height="15" fill="rgb(229,97,13)" fg:x="3563" fg:w="461"/><text x="2.3130%" y="2095.50"></text></g><g><title>`0x7FF89D954DC4 (460 samples, 0.27%)</title><rect x="2.0636%" y="2069" width="0.2663%" height="15" fill="rgb(234,71,50)" fg:x="3564" fg:w="460"/><text x="2.3136%" y="2079.50"></text></g><g><title>`0x7FF89D653E1D (460 samples, 0.27%)</title><rect x="2.0636%" y="2053" width="0.2663%" height="15" fill="rgb(253,155,4)" fg:x="3564" fg:w="460"/><text x="2.3136%" y="2063.50"></text></g><g><title>`0x7FF89D64896C (460 samples, 0.27%)</title><rect x="2.0636%" y="2037" width="0.2663%" height="15" fill="rgb(222,185,37)" fg:x="3564" fg:w="460"/><text x="2.3136%" y="2047.50"></text></g><g><title>`0x7FF89D65064A (54 samples, 0.03%)</title><rect x="2.3351%" y="1829" width="0.0313%" height="15" fill="rgb(251,177,13)" fg:x="4033" fg:w="54"/><text x="2.5851%" y="1839.50"></text></g><g><title>`0x7FF89B513504 (54 samples, 0.03%)</title><rect x="2.3351%" y="1813" width="0.0313%" height="15" fill="rgb(250,179,40)" fg:x="4033" fg:w="54"/><text x="2.5851%" y="1823.50"></text></g><g><title>boids.exe`bevy_ecs::system::function_system::SystemState&lt;tuple$&lt;bevy_ecs::system::commands::Commands,bevy_ecs::change_detection::ResMut&lt;bevy_winit::winit_monitors::WinitMonitors&gt; &gt; &gt;::apply (62 samples, 0.04%)</title><rect x="2.3317%" y="1909" width="0.0359%" height="15" fill="rgb(242,44,2)" fg:x="4027" fg:w="62"/><text x="2.5817%" y="1919.50"></text></g><g><title>boids.exe`bevy_ecs::system::system_param::impl$99::apply(tuple$ (62 samples, 0.04%)</title><rect x="2.3317%" y="1893" width="0.0359%" height="15" fill="rgb(216,177,13)" fg:x="4027" fg:w="62"/><text x="2.5817%" y="1903.50"></text></g><g><title>boids.exe`bevy_winit::system::create_monitors(winit::event_loop::ActiveEventLoop*, tuple$&lt;bevy_ecs::system::commands::Commands,bevy_ecs::change_detection::ResMut (62 samples, 0.04%)</title><rect x="2.3317%" y="1877" width="0.0359%" height="15" fill="rgb(216,106,43)" fg:x="4027" fg:w="62"/><text x="2.5817%" y="1887.50"></text></g><g><title>boids.exe`winit::monitor::MonitorHandle::video_modes (56 samples, 0.03%)</title><rect x="2.3351%" y="1861" width="0.0324%" height="15" fill="rgb(216,183,2)" fg:x="4033" fg:w="56"/><text x="2.5851%" y="1871.50"></text></g><g><title>boids.exe`winit::platform_impl::windows::monitor::MonitorHandle::video_modes (56 samples, 0.03%)</title><rect x="2.3351%" y="1845" width="0.0324%" height="15" fill="rgb(249,75,3)" fg:x="4033" fg:w="56"/><text x="2.5851%" y="1855.50"></text></g><g><title>boids.exe`winit::event_loop::ActiveEventLoop::create_window (27 samples, 0.02%)</title><rect x="2.3745%" y="1781" width="0.0156%" height="15" fill="rgb(219,67,39)" fg:x="4101" fg:w="27"/><text x="2.6245%" y="1791.50"></text></g><g><title>boids.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result (27 samples, 0.02%)</title><rect x="2.3745%" y="1765" width="0.0156%" height="15" fill="rgb(253,228,2)" fg:x="4101" fg:w="27"/><text x="2.6245%" y="1775.50"></text></g><g><title>boids.exe`winit::platform_impl::windows::window::Window::new (27 samples, 0.02%)</title><rect x="2.3745%" y="1749" width="0.0156%" height="15" fill="rgb(235,138,27)" fg:x="4101" fg:w="27"/><text x="2.6245%" y="1759.50"></text></g><g><title>boids.exe`winit::platform_impl::windows::window::init (27 samples, 0.02%)</title><rect x="2.3745%" y="1733" width="0.0156%" height="15" fill="rgb(236,97,51)" fg:x="4101" fg:w="27"/><text x="2.6245%" y="1743.50"></text></g><g><title>boids.exe`alloc::rc::impl$25::deref(alloc::rc::Rc&lt;winit::platform_impl::windows::event_loop::runner::EventLoopRunner (27 samples, 0.02%)</title><rect x="2.3745%" y="1717" width="0.0156%" height="15" fill="rgb(240,80,30)" fg:x="4101" fg:w="27"/><text x="2.6245%" y="1727.50"></text></g><g><title>boids.exe`alloc::rc::Rc&lt;winit::platform_impl::windows::event_loop::runner::EventLoopRunner&lt;winit::platform_impl::windows::event_loop::UserEventPlaceholder&gt;,alloc::alloc::Global&gt;::inner (27 samples, 0.02%)</title><rect x="2.3745%" y="1701" width="0.0156%" height="15" fill="rgb(230,178,19)" fg:x="4101" fg:w="27"/><text x="2.6245%" y="1711.50"></text></g><g><title>boids.exe`core::ptr::non_null::NonNull&lt;alloc::rc::RcInner&lt;winit::platform_impl::windows::event_loop::runner::EventLoopRunner&lt;winit::platform_impl::windows::event_loop::UserEventPlaceholder&gt; &gt; &gt;::as_ref (27 samples, 0.02%)</title><rect x="2.3745%" y="1685" width="0.0156%" height="15" fill="rgb(210,190,27)" fg:x="4101" fg:w="27"/><text x="2.6245%" y="1695.50"></text></g><g><title>`0x7FF89D63F862 (27 samples, 0.02%)</title><rect x="2.3745%" y="1669" width="0.0156%" height="15" fill="rgb(222,107,31)" fg:x="4101" fg:w="27"/><text x="2.6245%" y="1679.50"></text></g><g><title>`0x7FF89D63FA1C (27 samples, 0.02%)</title><rect x="2.3745%" y="1653" width="0.0156%" height="15" fill="rgb(216,127,34)" fg:x="4101" fg:w="27"/><text x="2.6245%" y="1663.50"></text></g><g><title>`0x7FF89D63FD00 (27 samples, 0.02%)</title><rect x="2.3745%" y="1637" width="0.0156%" height="15" fill="rgb(234,116,52)" fg:x="4101" fg:w="27"/><text x="2.6245%" y="1647.50"></text></g><g><title>`0x7FF89B5122E4 (27 samples, 0.02%)</title><rect x="2.3745%" y="1621" width="0.0156%" height="15" fill="rgb(222,124,15)" fg:x="4101" fg:w="27"/><text x="2.6245%" y="1631.50"></text></g><g><title>`0x7FF89D954DC4 (24 samples, 0.01%)</title><rect x="2.3762%" y="1605" width="0.0139%" height="15" fill="rgb(231,179,28)" fg:x="4104" fg:w="24"/><text x="2.6262%" y="1615.50"></text></g><g><title>`0x7FF89D65601C (24 samples, 0.01%)</title><rect x="2.3762%" y="1589" width="0.0139%" height="15" fill="rgb(226,93,45)" fg:x="4104" fg:w="24"/><text x="2.6262%" y="1599.50"></text></g><g><title>`0x7FF89D64896C (24 samples, 0.01%)</title><rect x="2.3762%" y="1573" width="0.0139%" height="15" fill="rgb(215,8,51)" fg:x="4104" fg:w="24"/><text x="2.6262%" y="1583.50"></text></g><g><title>`0x7FF89D648EB8 (24 samples, 0.01%)</title><rect x="2.3762%" y="1557" width="0.0139%" height="15" fill="rgb(223,106,5)" fg:x="4104" fg:w="24"/><text x="2.6262%" y="1567.50"></text></g><g><title>boids.exe`winit::platform_impl::windows::event_loop::public_window_callback (24 samples, 0.01%)</title><rect x="2.3762%" y="1541" width="0.0139%" height="15" fill="rgb(250,191,5)" fg:x="4104" fg:w="24"/><text x="2.6262%" y="1551.50"></text></g><g><title>`0x7FF89D64666F (22 samples, 0.01%)</title><rect x="2.3924%" y="1285" width="0.0127%" height="15" fill="rgb(242,132,44)" fg:x="4132" fg:w="22"/><text x="2.6424%" y="1295.50"></text></g><g><title>`0x7FF89D646A89 (22 samples, 0.01%)</title><rect x="2.3924%" y="1269" width="0.0127%" height="15" fill="rgb(251,152,29)" fg:x="4132" fg:w="22"/><text x="2.6424%" y="1279.50"></text></g><g><title>`0x7FF89D642973 (22 samples, 0.01%)</title><rect x="2.3924%" y="1253" width="0.0127%" height="15" fill="rgb(218,179,5)" fg:x="4132" fg:w="22"/><text x="2.6424%" y="1263.50"></text></g><g><title>`0x7FF89D64192A (22 samples, 0.01%)</title><rect x="2.3924%" y="1237" width="0.0127%" height="15" fill="rgb(227,67,19)" fg:x="4132" fg:w="22"/><text x="2.6424%" y="1247.50"></text></g><g><title>`0x7FF89B511FA4 (19 samples, 0.01%)</title><rect x="2.4052%" y="965" width="0.0110%" height="15" fill="rgb(233,119,31)" fg:x="4154" fg:w="19"/><text x="2.6552%" y="975.50"></text></g><g><title>boids.exe`winit::platform_impl::windows::keyboard::KeyEventBuilder::synthesize_kbd_state (28 samples, 0.02%)</title><rect x="2.4052%" y="1013" width="0.0162%" height="15" fill="rgb(241,120,22)" fg:x="4154" fg:w="28"/><text x="2.6552%" y="1023.50"></text></g><g><title>boids.exe`winit::platform_impl::windows::keyboard_layout::LayoutCache::get_current_layout (28 samples, 0.02%)</title><rect x="2.4052%" y="997" width="0.0162%" height="15" fill="rgb(224,102,30)" fg:x="4154" fg:w="28"/><text x="2.6552%" y="1007.50"></text></g><g><title>boids.exe`winit::platform_impl::windows::keyboard_layout::LayoutCache::prepare_layout (28 samples, 0.02%)</title><rect x="2.4052%" y="981" width="0.0162%" height="15" fill="rgb(210,164,37)" fg:x="4154" fg:w="28"/><text x="2.6552%" y="991.50"></text></g><g><title>`0x7FF89D653E1D (51 samples, 0.03%)</title><rect x="2.3924%" y="1333" width="0.0295%" height="15" fill="rgb(226,191,16)" fg:x="4132" fg:w="51"/><text x="2.6424%" y="1343.50"></text></g><g><title>`0x7FF89D64896C (51 samples, 0.03%)</title><rect x="2.3924%" y="1317" width="0.0295%" height="15" fill="rgb(214,40,45)" fg:x="4132" fg:w="51"/><text x="2.6424%" y="1327.50"></text></g><g><title>`0x7FF89D648EB8 (51 samples, 0.03%)</title><rect x="2.3924%" y="1301" width="0.0295%" height="15" fill="rgb(244,29,26)" fg:x="4132" fg:w="51"/><text x="2.6424%" y="1311.50"></text></g><g><title>boids.exe`accesskit_windows::subclass::wnd_proc (29 samples, 0.02%)</title><rect x="2.4052%" y="1285" width="0.0168%" height="15" fill="rgb(216,16,5)" fg:x="4154" fg:w="29"/><text x="2.6552%" y="1295.50"></text></g><g><title>`0x7FF89D6484FB (29 samples, 0.02%)</title><rect x="2.4052%" y="1269" width="0.0168%" height="15" fill="rgb(249,76,35)" fg:x="4154" fg:w="29"/><text x="2.6552%" y="1279.50"></text></g><g><title>`0x7FF89D648EB8 (29 samples, 0.02%)</title><rect x="2.4052%" y="1253" width="0.0168%" height="15" fill="rgb(207,11,44)" fg:x="4154" fg:w="29"/><text x="2.6552%" y="1263.50"></text></g><g><title>boids.exe`winit::platform_impl::windows::event_loop::public_window_callback (29 samples, 0.02%)</title><rect x="2.4052%" y="1237" width="0.0168%" height="15" fill="rgb(228,190,49)" fg:x="4154" fg:w="29"/><text x="2.6552%" y="1247.50"></text></g><g><title>boids.exe`winit::platform_impl::windows::event_loop::public_window_callback_inner (29 samples, 0.02%)</title><rect x="2.4052%" y="1221" width="0.0168%" height="15" fill="rgb(214,173,12)" fg:x="4154" fg:w="29"/><text x="2.6552%" y="1231.50"></text></g><g><title>boids.exe`enum2$&lt;core::option::Option&lt;tuple$&lt;&gt; &gt; &gt;::unwrap_or_else(enum2$&lt;core::option::Option&lt;tuple$ (29 samples, 0.02%)</title><rect x="2.4052%" y="1205" width="0.0168%" height="15" fill="rgb(218,26,35)" fg:x="4154" fg:w="29"/><text x="2.6552%" y="1215.50"></text></g><g><title>boids.exe`winit::platform_impl::windows::event_loop::runner::EventLoopRunner&lt;winit::platform_impl::windows::event_loop::UserEventPlaceholder&gt;::catch_unwind&lt;winit::platform_impl::windows::event_loop::UserEventPlaceholder,tuple$&lt;&gt;,winit::platform_impl::windows::event_loop::public_window_callback_inner::closure_env$2&gt; (29 samples, 0.02%)</title><rect x="2.4052%" y="1189" width="0.0168%" height="15" fill="rgb(220,200,19)" fg:x="4154" fg:w="29"/><text x="2.6552%" y="1199.50"></text></g><g><title>boids.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe (29 samples, 0.02%)</title><rect x="2.4052%" y="1173" width="0.0168%" height="15" fill="rgb(239,95,49)" fg:x="4154" fg:w="29"/><text x="2.6552%" y="1183.50"></text></g><g><title>boids.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe (29 samples, 0.02%)</title><rect x="2.4052%" y="1157" width="0.0168%" height="15" fill="rgb(235,85,53)" fg:x="4154" fg:w="29"/><text x="2.6552%" y="1167.50"></text></g><g><title>boids.exe`std::panicking::try::do_call (29 samples, 0.02%)</title><rect x="2.4052%" y="1141" width="0.0168%" height="15" fill="rgb(233,133,31)" fg:x="4154" fg:w="29"/><text x="2.6552%" y="1151.50"></text></g><g><title>boids.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe (29 samples, 0.02%)</title><rect x="2.4052%" y="1125" width="0.0168%" height="15" fill="rgb(218,25,20)" fg:x="4154" fg:w="29"/><text x="2.6552%" y="1135.50"></text></g><g><title>boids.exe`core::ops::function::FnOnce::call_once (29 samples, 0.02%)</title><rect x="2.4052%" y="1109" width="0.0168%" height="15" fill="rgb(252,210,38)" fg:x="4154" fg:w="29"/><text x="2.6552%" y="1119.50"></text></g><g><title>boids.exe`winit::platform_impl::windows::event_loop::public_window_callback_inner::closure$2 (29 samples, 0.02%)</title><rect x="2.4052%" y="1093" width="0.0168%" height="15" fill="rgb(242,134,21)" fg:x="4154" fg:w="29"/><text x="2.6552%" y="1103.50"></text></g><g><title>boids.exe`alloc::vec::impl$16::into_iter(alloc::vec::Vec (29 samples, 0.02%)</title><rect x="2.4052%" y="1077" width="0.0168%" height="15" fill="rgb(213,28,48)" fg:x="4154" fg:w="29"/><text x="2.6552%" y="1087.50"></text></g><g><title>boids.exe`core::mem::manually_drop::ManuallyDrop&lt;alloc::vec::Vec&lt;winit::platform_impl::windows::keyboard::MessageAsKeyEvent,alloc::alloc::Global&gt; &gt;::new(alloc::vec::Vec (29 samples, 0.02%)</title><rect x="2.4052%" y="1061" width="0.0168%" height="15" fill="rgb(250,196,2)" fg:x="4154" fg:w="29"/><text x="2.6552%" y="1071.50"></text></g><g><title>boids.exe`winit::platform_impl::windows::keyboard::KeyEventBuilder::process_message(long long, unsigned int, unsigned long long, long long, enum2$ (29 samples, 0.02%)</title><rect x="2.4052%" y="1045" width="0.0168%" height="15" fill="rgb(227,5,17)" fg:x="4154" fg:w="29"/><text x="2.6552%" y="1055.50"></text></g><g><title>boids.exe`winit::platform_impl::windows::keyboard::impl$1::process_message::closure$0 (29 samples, 0.02%)</title><rect x="2.4052%" y="1029" width="0.0168%" height="15" fill="rgb(221,226,24)" fg:x="4154" fg:w="29"/><text x="2.6552%" y="1039.50"></text></g><g><title>`0x7FF89D646D29 (52 samples, 0.03%)</title><rect x="2.3924%" y="1397" width="0.0301%" height="15" fill="rgb(211,5,48)" fg:x="4132" fg:w="52"/><text x="2.6424%" y="1407.50"></text></g><g><title>`0x7FF89D6470C5 (52 samples, 0.03%)</title><rect x="2.3924%" y="1381" width="0.0301%" height="15" fill="rgb(219,150,6)" fg:x="4132" fg:w="52"/><text x="2.6424%" y="1391.50"></text></g><g><title>`0x7FF89B5115A4 (52 samples, 0.03%)</title><rect x="2.3924%" y="1365" width="0.0301%" height="15" fill="rgb(251,46,16)" fg:x="4132" fg:w="52"/><text x="2.6424%" y="1375.50"></text></g><g><title>`0x7FF89D954DC4 (52 samples, 0.03%)</title><rect x="2.3924%" y="1349" width="0.0301%" height="15" fill="rgb(220,204,40)" fg:x="4132" fg:w="52"/><text x="2.6424%" y="1359.50"></text></g><g><title>`0x7FF89D6484FB (55 samples, 0.03%)</title><rect x="2.3924%" y="1461" width="0.0318%" height="15" fill="rgb(211,85,2)" fg:x="4132" fg:w="55"/><text x="2.6424%" y="1471.50"></text></g><g><title>`0x7FF89D648EB8 (55 samples, 0.03%)</title><rect x="2.3924%" y="1445" width="0.0318%" height="15" fill="rgb(229,17,7)" fg:x="4132" fg:w="55"/><text x="2.6424%" y="1455.50"></text></g><g><title>boids.exe`winit::platform_impl::windows::event_loop::public_window_callback (55 samples, 0.03%)</title><rect x="2.3924%" y="1429" width="0.0318%" height="15" fill="rgb(239,72,28)" fg:x="4132" fg:w="55"/><text x="2.6424%" y="1439.50"></text></g><g><title>boids.exe`winit::platform_impl::windows::event_loop::public_window_callback_inner (55 samples, 0.03%)</title><rect x="2.3924%" y="1413" width="0.0318%" height="15" fill="rgb(230,47,54)" fg:x="4132" fg:w="55"/><text x="2.6424%" y="1423.50"></text></g><g><title>boids.exe`bevy_ecs::system::function_system::SystemState&lt;tuple$&lt;bevy_ecs::system::commands::Commands,bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,ref_mut$&lt;bevy_window::window::Window&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_window::raw_handle::RawHandleWrapperHolder&gt; &gt; &gt; &gt;,bevy_ecs::query::filter::Added&lt;bevy_window::window::Window&gt; &gt;,bevy_ecs::event::writer::EventWriter&lt;bevy_window::event::WindowCreated&gt;,bevy_ecs::change_detection::NonSendMut&lt;bevy_winit::winit_windows::WinitWindows&gt;,bevy_ecs::change_detection::NonSendMut&lt;bevy_winit::accessibility::AccessKitAdapters&gt;,bevy_ecs::change_detection::ResMut&lt;bevy_winit::accessibility::WinitActionRequestHandlers&gt;,bevy_ecs::change_detection::Res&lt;bevy_a11y::AccessibilityRequested&gt;,bevy_ecs::change_detection::Res&lt;bevy_winit::winit_monitors::WinitMonitors&gt; &gt; &gt;::apply (93 samples, 0.05%)</title><rect x="2.3716%" y="1909" width="0.0538%" height="15" fill="rgb(214,50,8)" fg:x="4096" fg:w="93"/><text x="2.6216%" y="1919.50"></text></g><g><title>boids.exe`bevy_ecs::system::system_param::impl$111::apply(tuple$&lt;bevy_ecs::system::commands::_::FetchState,bevy_ecs::query::state::QueryState&lt;tuple$&lt;bevy_ecs::entity::Entity,ref_mut$&lt;bevy_window::window::Window&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_window::raw_handle::RawHandleWrapperHolder&gt; &gt; &gt; &gt;,bevy_ecs::query::filter::Added&lt;bevy_window::window::Window&gt; &gt;,bevy_ecs::event::writer::_::FetchState (93 samples, 0.05%)</title><rect x="2.3716%" y="1893" width="0.0538%" height="15" fill="rgb(216,198,43)" fg:x="4096" fg:w="93"/><text x="2.6216%" y="1903.50"></text></g><g><title>boids.exe`bevy_winit::system::create_windows&lt;bevy_ecs::query::filter::Added&lt;bevy_window::window::Window&gt; &gt;(winit::event_loop::ActiveEventLoop*, tuple$&lt;bevy_ecs::system::commands::Commands,bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,ref_mut$&lt;bevy_window::window::Window&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_window::raw_handle::RawHandleWrapperHolder&gt; &gt; &gt; &gt;,bevy_ecs::query::filter::Added&lt;bevy_window::window::Window&gt; &gt;,bevy_ecs::event::writer::EventWriter&lt;bevy_window::event::WindowCreated&gt;,bevy_ecs::change_detection::NonSendMut&lt;bevy_winit::winit_windows::WinitWindows&gt;,bevy_ecs::change_detection::NonSendMut&lt;bevy_winit::accessibility::AccessKitAdapters&gt;,bevy_ecs::change_detection::ResMut&lt;bevy_winit::accessibility::WinitActionRequestHandlers&gt;,bevy_ecs::change_detection::Res&lt;bevy_a11y::AccessibilityRequested&gt;,bevy_ecs::change_detection::Res (93 samples, 0.05%)</title><rect x="2.3716%" y="1877" width="0.0538%" height="15" fill="rgb(234,20,35)" fg:x="4096" fg:w="93"/><text x="2.6216%" y="1887.50"></text></g><g><title>boids.exe`bevy_window::raw_handle::impl$1::deref(bevy_window::raw_handle::WindowWrapper (93 samples, 0.05%)</title><rect x="2.3716%" y="1861" width="0.0538%" height="15" fill="rgb(254,45,19)" fg:x="4096" fg:w="93"/><text x="2.6216%" y="1871.50"></text></g><g><title>boids.exe`alloc::sync::impl$30::deref(alloc::sync::Arc&lt;dyn$ (93 samples, 0.05%)</title><rect x="2.3716%" y="1845" width="0.0538%" height="15" fill="rgb(219,14,44)" fg:x="4096" fg:w="93"/><text x="2.6216%" y="1855.50"></text></g><g><title>boids.exe`alloc::sync::Arc&lt;dyn$&lt;core::any::Any,core::marker::Send,core::marker::Sync&gt;,alloc::alloc::Global&gt;::inner (93 samples, 0.05%)</title><rect x="2.3716%" y="1829" width="0.0538%" height="15" fill="rgb(217,220,26)" fg:x="4096" fg:w="93"/><text x="2.6216%" y="1839.50"></text></g><g><title>boids.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;dyn$&lt;core::any::Any,core::marker::Send,core::marker::Sync&gt; &gt; &gt;::as_ref (93 samples, 0.05%)</title><rect x="2.3716%" y="1813" width="0.0538%" height="15" fill="rgb(213,158,28)" fg:x="4096" fg:w="93"/><text x="2.6216%" y="1823.50"></text></g><g><title>boids.exe`bevy_winit::winit_windows::WinitWindows::create_window (93 samples, 0.05%)</title><rect x="2.3716%" y="1797" width="0.0538%" height="15" fill="rgb(252,51,52)" fg:x="4096" fg:w="93"/><text x="2.6216%" y="1807.50"></text></g><g><title>boids.exe`winit::window::Window::set_visible (61 samples, 0.04%)</title><rect x="2.3901%" y="1781" width="0.0353%" height="15" fill="rgb(246,89,16)" fg:x="4128" fg:w="61"/><text x="2.6401%" y="1791.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place (61 samples, 0.04%)</title><rect x="2.3901%" y="1765" width="0.0353%" height="15" fill="rgb(216,158,49)" fg:x="4128" fg:w="61"/><text x="2.6401%" y="1775.50"></text></g><g><title>boids.exe`tracing::span::impl$17::drop (61 samples, 0.04%)</title><rect x="2.3901%" y="1749" width="0.0353%" height="15" fill="rgb(236,107,19)" fg:x="4128" fg:w="61"/><text x="2.6401%" y="1759.50"></text></g><g><title>boids.exe`tracing::span::Span::do_exit (61 samples, 0.04%)</title><rect x="2.3901%" y="1733" width="0.0353%" height="15" fill="rgb(228,185,30)" fg:x="4128" fg:w="61"/><text x="2.6401%" y="1743.50"></text></g><g><title>boids.exe`enum2$&lt;core::option::Option&lt;tracing::span::Inner&gt; &gt;::as_ref (61 samples, 0.04%)</title><rect x="2.3901%" y="1717" width="0.0353%" height="15" fill="rgb(246,134,8)" fg:x="4128" fg:w="61"/><text x="2.6401%" y="1727.50"></text></g><g><title>boids.exe`winit::platform_impl::windows::event_loop::EventLoopThreadExecutor::execute_in_thread&lt;winit::platform_impl::windows::window::impl$0::set_visible::closure_env$0&gt; (61 samples, 0.04%)</title><rect x="2.3901%" y="1701" width="0.0353%" height="15" fill="rgb(214,143,50)" fg:x="4128" fg:w="61"/><text x="2.6401%" y="1711.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place (61 samples, 0.04%)</title><rect x="2.3901%" y="1685" width="0.0353%" height="15" fill="rgb(228,75,8)" fg:x="4128" fg:w="61"/><text x="2.6401%" y="1695.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(alloc::sync::Arc&lt;std::sync::poison::mutex::Mutex (61 samples, 0.04%)</title><rect x="2.3901%" y="1669" width="0.0353%" height="15" fill="rgb(207,175,4)" fg:x="4128" fg:w="61"/><text x="2.6401%" y="1679.50"></text></g><g><title>boids.exe`alloc::sync::impl$38::drop(alloc::sync::Arc&lt;std::sync::poison::mutex::Mutex (61 samples, 0.04%)</title><rect x="2.3901%" y="1653" width="0.0353%" height="15" fill="rgb(205,108,24)" fg:x="4128" fg:w="61"/><text x="2.6401%" y="1663.50"></text></g><g><title>boids.exe`alloc::sync::Arc&lt;std::sync::poison::mutex::Mutex&lt;winit::platform_impl::windows::window_state::WindowState&gt;,alloc::alloc::Global&gt;::inner (61 samples, 0.04%)</title><rect x="2.3901%" y="1637" width="0.0353%" height="15" fill="rgb(244,120,49)" fg:x="4128" fg:w="61"/><text x="2.6401%" y="1647.50"></text></g><g><title>boids.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;std::sync::poison::mutex::Mutex&lt;winit::platform_impl::windows::window_state::WindowState&gt; &gt; &gt;::as_ref (61 samples, 0.04%)</title><rect x="2.3901%" y="1621" width="0.0353%" height="15" fill="rgb(223,47,38)" fg:x="4128" fg:w="61"/><text x="2.6401%" y="1631.50"></text></g><g><title>boids.exe`winit::platform_impl::windows::window_state::WindowFlags::apply_diff (61 samples, 0.04%)</title><rect x="2.3901%" y="1605" width="0.0353%" height="15" fill="rgb(229,179,11)" fg:x="4128" fg:w="61"/><text x="2.6401%" y="1615.50"></text></g><g><title>boids.exe`winit::platform_impl::windows::window_state::WindowFlags::intersects (59 samples, 0.03%)</title><rect x="2.3913%" y="1589" width="0.0342%" height="15" fill="rgb(231,122,1)" fg:x="4130" fg:w="59"/><text x="2.6413%" y="1599.50"></text></g><g><title>boids.exe`winit::platform_impl::windows::window_state::_::InternalBitFlags::intersects (59 samples, 0.03%)</title><rect x="2.3913%" y="1573" width="0.0342%" height="15" fill="rgb(245,119,9)" fg:x="4130" fg:w="59"/><text x="2.6413%" y="1583.50"></text></g><g><title>`0x7FF89B511F44 (59 samples, 0.03%)</title><rect x="2.3913%" y="1557" width="0.0342%" height="15" fill="rgb(241,163,25)" fg:x="4130" fg:w="59"/><text x="2.6413%" y="1567.50"></text></g><g><title>`0x7FF89D954DC4 (58 samples, 0.03%)</title><rect x="2.3919%" y="1541" width="0.0336%" height="15" fill="rgb(217,214,3)" fg:x="4131" fg:w="58"/><text x="2.6419%" y="1551.50"></text></g><g><title>`0x7FF89D653E1D (58 samples, 0.03%)</title><rect x="2.3919%" y="1525" width="0.0336%" height="15" fill="rgb(240,86,28)" fg:x="4131" fg:w="58"/><text x="2.6419%" y="1535.50"></text></g><g><title>`0x7FF89D64896C (57 samples, 0.03%)</title><rect x="2.3924%" y="1509" width="0.0330%" height="15" fill="rgb(215,47,9)" fg:x="4132" fg:w="57"/><text x="2.6424%" y="1519.50"></text></g><g><title>`0x7FF89D648EB8 (57 samples, 0.03%)</title><rect x="2.3924%" y="1493" width="0.0330%" height="15" fill="rgb(252,25,45)" fg:x="4132" fg:w="57"/><text x="2.6424%" y="1503.50"></text></g><g><title>boids.exe`accesskit_windows::subclass::wnd_proc (57 samples, 0.03%)</title><rect x="2.3924%" y="1477" width="0.0330%" height="15" fill="rgb(251,164,9)" fg:x="4132" fg:w="57"/><text x="2.6424%" y="1487.50"></text></g><g><title>boids.exe`bevy_render::extract (18 samples, 0.01%)</title><rect x="2.4283%" y="1669" width="0.0104%" height="15" fill="rgb(233,194,0)" fg:x="4194" fg:w="18"/><text x="2.6783%" y="1679.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::run_schedule (18 samples, 0.01%)</title><rect x="2.4283%" y="1653" width="0.0104%" height="15" fill="rgb(249,111,24)" fg:x="4194" fg:w="18"/><text x="2.6783%" y="1663.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::schedule_scope(bevy_render::ExtractSchedule, bevy_ecs::world::impl$4::run_schedule::closure_env$0 (18 samples, 0.01%)</title><rect x="2.4283%" y="1637" width="0.0104%" height="15" fill="rgb(250,223,3)" fg:x="4194" fg:w="18"/><text x="2.6783%" y="1647.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::try_schedule_scope(bevy_render::ExtractSchedule, bevy_ecs::world::impl$4::run_schedule::closure_env$0 (18 samples, 0.01%)</title><rect x="2.4283%" y="1621" width="0.0104%" height="15" fill="rgb(236,178,37)" fg:x="4194" fg:w="18"/><text x="2.6783%" y="1631.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::resource_mut (18 samples, 0.01%)</title><rect x="2.4283%" y="1605" width="0.0104%" height="15" fill="rgb(241,158,50)" fg:x="4194" fg:w="18"/><text x="2.6783%" y="1615.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::get_resource_mut (18 samples, 0.01%)</title><rect x="2.4283%" y="1589" width="0.0104%" height="15" fill="rgb(213,121,41)" fg:x="4194" fg:w="18"/><text x="2.6783%" y="1599.50"></text></g><g><title>boids.exe`bevy_ecs::world::unsafe_world_cell::UnsafeWorldCell::get_resource_mut (18 samples, 0.01%)</title><rect x="2.4283%" y="1573" width="0.0104%" height="15" fill="rgb(240,92,3)" fg:x="4194" fg:w="18"/><text x="2.6783%" y="1583.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::schedule::Schedule::run (18 samples, 0.01%)</title><rect x="2.4283%" y="1557" width="0.0104%" height="15" fill="rgb(205,123,3)" fg:x="4194" fg:w="18"/><text x="2.6783%" y="1567.50"></text></g><g><title>boids.exe`bevy_ecs::change_detection::impl$58::deref_mut(bevy_ecs::change_detection::Mut (25 samples, 0.01%)</title><rect x="2.4283%" y="1701" width="0.0145%" height="15" fill="rgb(205,97,47)" fg:x="4194" fg:w="25"/><text x="2.6783%" y="1711.50"></text></g><g><title>boids.exe`bevy_ecs::change_detection::impl$57::set_changed(bevy_ecs::change_detection::Mut (25 samples, 0.01%)</title><rect x="2.4283%" y="1685" width="0.0145%" height="15" fill="rgb(247,152,14)" fg:x="4194" fg:w="25"/><text x="2.6783%" y="1695.50"></text></g><g><title>boids.exe`bevy_app::sub_app::SubApp::update (29 samples, 0.02%)</title><rect x="2.4283%" y="1845" width="0.0168%" height="15" fill="rgb(248,195,53)" fg:x="4194" fg:w="29"/><text x="2.6783%" y="1855.50"></text></g><g><title>boids.exe`bevy_app::sub_app::SubApp::run_default_schedule (29 samples, 0.02%)</title><rect x="2.4283%" y="1829" width="0.0168%" height="15" fill="rgb(226,201,16)" fg:x="4194" fg:w="29"/><text x="2.6783%" y="1839.50"></text></g><g><title>boids.exe`bevy_app::sub_app::SubApp::is_building_plugins (29 samples, 0.02%)</title><rect x="2.4283%" y="1813" width="0.0168%" height="15" fill="rgb(205,98,0)" fg:x="4194" fg:w="29"/><text x="2.6783%" y="1823.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::resource_scope&lt;bevy_ecs::schedule::executor::multi_threaded::MainThreadExecutor,tuple$&lt;&gt;,bevy_render::pipelined_rendering::renderer_extract::closure_env$0&gt; (29 samples, 0.02%)</title><rect x="2.4283%" y="1797" width="0.0168%" height="15" fill="rgb(214,191,48)" fg:x="4194" fg:w="29"/><text x="2.6783%" y="1807.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::try_resource_scope (29 samples, 0.02%)</title><rect x="2.4283%" y="1781" width="0.0168%" height="15" fill="rgb(237,112,39)" fg:x="4194" fg:w="29"/><text x="2.6783%" y="1791.50"></text></g><g><title>boids.exe`bevy_render::pipelined_rendering::renderer_extract::closure$0(bevy_render::pipelined_rendering::renderer_extract::closure_env$0, bevy_ecs::world::World*, bevy_ecs::change_detection::Mut (29 samples, 0.02%)</title><rect x="2.4283%" y="1765" width="0.0168%" height="15" fill="rgb(247,203,27)" fg:x="4194" fg:w="29"/><text x="2.6783%" y="1775.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::resource_scope (29 samples, 0.02%)</title><rect x="2.4283%" y="1749" width="0.0168%" height="15" fill="rgb(235,124,28)" fg:x="4194" fg:w="29"/><text x="2.6783%" y="1759.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::try_resource_scope (29 samples, 0.02%)</title><rect x="2.4283%" y="1733" width="0.0168%" height="15" fill="rgb(208,207,46)" fg:x="4194" fg:w="29"/><text x="2.6783%" y="1743.50"></text></g><g><title>boids.exe`bevy_render::pipelined_rendering::renderer_extract::closure$0::closure$0(bevy_render::pipelined_rendering::renderer_extract::closure$0::closure_env$0, bevy_ecs::world::World*, bevy_ecs::change_detection::Mut (29 samples, 0.02%)</title><rect x="2.4283%" y="1717" width="0.0168%" height="15" fill="rgb(234,176,4)" fg:x="4194" fg:w="29"/><text x="2.6783%" y="1727.50"></text></g><g><title>boids.exe`bevy_tasks::task_pool::impl$2::execute_scope::async_fn$0::async_block$0(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;bevy_tasks::task_pool::impl$2::execute_scope::async_fn$0::async_block_env$0&lt;tuple$&lt;&gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block$0::async_block_env$0&lt;bevy_ecs::schedule::executor::multi_threaded::impl$2::run::closure_env$1,tuple$ (24 samples, 0.01%)</title><rect x="2.4538%" y="1157" width="0.0139%" height="15" fill="rgb(230,133,28)" fg:x="4238" fg:w="24"/><text x="2.7038%" y="1167.50"></text></g><g><title>boids.exe`core::panic::unwind_safe::impl$28::poll&lt;enum2$&lt;bevy_tasks::task_pool::impl$2::execute_scope::async_fn$0::async_block$0::async_block_env$0&lt;tuple$&lt;&gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block$0::async_block_env$0&lt;bevy_ecs::schedule::executor::multi_threaded::impl$2::run::closure_env$1,tuple$&lt;&gt; &gt; &gt; &gt; &gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_tasks::task_pool::impl$2::execute_scope::async_fn$0::async_block$0::async_block_env$0&lt;tuple$&lt;&gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block$0::async_block_env$0&lt;bevy_ecs::schedule::executor::multi_threaded::impl$2::run::closure_env$1,tuple$ (24 samples, 0.01%)</title><rect x="2.4538%" y="1141" width="0.0139%" height="15" fill="rgb(211,137,40)" fg:x="4238" fg:w="24"/><text x="2.7038%" y="1151.50"></text></g><g><title>boids.exe`bevy_tasks::task_pool::impl$2::execute_scope::async_fn$0::async_block$0::async_block$0(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;bevy_tasks::task_pool::impl$2::execute_scope::async_fn$0::async_block$0::async_block_env$0&lt;tuple$&lt;&gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block$0::async_block_env$0&lt;bevy_ecs::schedule::executor::multi_threaded::impl$2::run::closure_env$1,tuple$ (24 samples, 0.01%)</title><rect x="2.4538%" y="1125" width="0.0139%" height="15" fill="rgb(254,35,13)" fg:x="4238" fg:w="24"/><text x="2.7038%" y="1135.50"></text></g><g><title>boids.exe`bevy_tasks::thread_executor::impl$2::tick::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (24 samples, 0.01%)</title><rect x="2.4538%" y="1109" width="0.0139%" height="15" fill="rgb(225,49,51)" fg:x="4238" fg:w="24"/><text x="2.7038%" y="1119.50"></text></g><g><title>boids.exe`async_executor::impl$5::tick::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (24 samples, 0.01%)</title><rect x="2.4538%" y="1093" width="0.0139%" height="15" fill="rgb(251,10,15)" fg:x="4238" fg:w="24"/><text x="2.7038%" y="1103.50"></text></g><g><title>boids.exe`async_executor::impl$13::tick::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (24 samples, 0.01%)</title><rect x="2.4538%" y="1077" width="0.0139%" height="15" fill="rgb(228,207,15)" fg:x="4238" fg:w="24"/><text x="2.7038%" y="1087.50"></text></g><g><title>boids.exe`async_task::runnable::Runnable&lt;tuple$&lt;&gt; &gt;::run(async_task::runnable::Runnable&lt;tuple$ (24 samples, 0.01%)</title><rect x="2.4538%" y="1061" width="0.0139%" height="15" fill="rgb(241,99,19)" fg:x="4238" fg:w="24"/><text x="2.7038%" y="1071.50"></text></g><g><title>boids.exe`bevy_tasks::task_pool::impl$2::execute_scope::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;bevy_tasks::task_pool::impl$2::execute_scope::async_fn_env$0&lt;tuple$&lt;&gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block$0::async_block_env$0&lt;bevy_ecs::schedule::executor::multi_threaded::impl$2::run::closure_env$1,tuple$ (26 samples, 0.02%)</title><rect x="2.4538%" y="1189" width="0.0151%" height="15" fill="rgb(207,104,49)" fg:x="4238" fg:w="26"/><text x="2.7038%" y="1199.50"></text></g><g><title>boids.exe`futures_lite::future::impl$7::poll&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block$0::async_block_env$0&lt;bevy_ecs::schedule::executor::multi_threaded::impl$2::run::closure_env$1,tuple$&lt;&gt; &gt; &gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::execute_scope::async_fn$0::async_block_env$0&lt;tuple$&lt;&gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block$0::async_block_env$0&lt;bevy_ecs::schedule::executor::multi_threaded::impl$2::run::closure_env$1,tuple$&lt;&gt; &gt; &gt; &gt; &gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;futures_lite::future::Or&lt;enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block$0::async_block_env$0&lt;bevy_ecs::schedule::executor::multi_threaded::impl$2::run::closure_env$1,tuple$&lt;&gt; &gt; &gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::execute_scope::async_fn$0::async_block_env$0&lt;tuple$&lt;&gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block$0::async_block_env$0&lt;bevy_ecs::schedule::executor::multi_threaded::impl$2::run::closure_env$1,tuple$ (26 samples, 0.02%)</title><rect x="2.4538%" y="1173" width="0.0151%" height="15" fill="rgb(234,99,18)" fg:x="4238" fg:w="26"/><text x="2.7038%" y="1183.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::executor::multi_threaded::impl$2::run(bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor*, bevy_ecs::schedule::executor::SystemSchedule*, bevy_ecs::world::World*, enum2$&lt;core::option::Option&lt;ref$&lt;fixedbitset::FixedBitSet&gt; &gt; &gt;, void (*)(bevy_ecs::error::bevy_error::BevyError, enum2$ (31 samples, 0.02%)</title><rect x="2.4532%" y="1333" width="0.0179%" height="15" fill="rgb(213,191,49)" fg:x="4237" fg:w="31"/><text x="2.7032%" y="1343.50"></text></g><g><title>boids.exe`bevy_tasks::usages::ComputeTaskPool::get_or_init(bevy_tasks::task_pool::TaskPool (*) (31 samples, 0.02%)</title><rect x="2.4532%" y="1317" width="0.0179%" height="15" fill="rgb(210,226,19)" fg:x="4237" fg:w="31"/><text x="2.7032%" y="1327.50"></text></g><g><title>boids.exe`std::thread::local::LocalKey&lt;alloc::sync::Arc&lt;bevy_tasks::thread_executor::ThreadExecutor,alloc::alloc::Global&gt; &gt;::with(bevy_tasks::task_pool::impl$2::scope_with_executor::closure_env$0&lt;bevy_ecs::schedule::executor::multi_threaded::impl$2::run::closure_env$1,tuple$ (31 samples, 0.02%)</title><rect x="2.4532%" y="1301" width="0.0179%" height="15" fill="rgb(229,97,18)" fg:x="4237" fg:w="31"/><text x="2.7032%" y="1311.50"></text></g><g><title>boids.exe`bevy_tasks::task_pool::TaskPool::scope_with_executor_inner&lt;bevy_ecs::schedule::executor::multi_threaded::impl$2::run::closure_env$1,tuple$&lt;&gt; &gt; (31 samples, 0.02%)</title><rect x="2.4532%" y="1285" width="0.0179%" height="15" fill="rgb(211,167,15)" fg:x="4237" fg:w="31"/><text x="2.7032%" y="1295.50"></text></g><g><title>boids.exe`futures_lite::future::block_on(enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block_env$0&lt;bevy_ecs::schedule::executor::multi_threaded::impl$2::run::closure_env$1,tuple$ (30 samples, 0.02%)</title><rect x="2.4538%" y="1269" width="0.0174%" height="15" fill="rgb(210,169,34)" fg:x="4238" fg:w="30"/><text x="2.7038%" y="1279.50"></text></g><g><title>boids.exe`std::thread::local::LocalKey&lt;core::cell::RefCell&lt;tuple$&lt;parking::Parker,core::task::wake::Waker&gt; &gt; &gt;::with&lt;core::cell::RefCell&lt;tuple$&lt;parking::Parker,core::task::wake::Waker&gt; &gt;,futures_lite::future::block_on::closure_env$0&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block_env$0&lt;bevy_ecs::schedule::executor::multi_threaded::impl$2::run::closure_env$1,tuple$&lt;&gt; &gt; &gt; &gt;,alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt; &gt;(futures_lite::future::block_on::closure_env$0&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block_env$0&lt;bevy_ecs::schedule::executor::multi_threaded::impl$2::run::closure_env$1,tuple$ (30 samples, 0.02%)</title><rect x="2.4538%" y="1253" width="0.0174%" height="15" fill="rgb(241,121,31)" fg:x="4238" fg:w="30"/><text x="2.7038%" y="1263.50"></text></g><g><title>boids.exe`std::thread::local::LocalKey&lt;core::cell::RefCell&lt;tuple$&lt;parking::Parker,core::task::wake::Waker&gt; &gt; &gt;::try_with(futures_lite::future::block_on::closure_env$0&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block_env$0&lt;bevy_ecs::schedule::executor::multi_threaded::impl$2::run::closure_env$1,tuple$ (30 samples, 0.02%)</title><rect x="2.4538%" y="1237" width="0.0174%" height="15" fill="rgb(232,40,11)" fg:x="4238" fg:w="30"/><text x="2.7038%" y="1247.50"></text></g><g><title>boids.exe`futures_lite::future::block_on::closure$0(futures_lite::future::block_on::closure_env$0&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block_env$0&lt;bevy_ecs::schedule::executor::multi_threaded::impl$2::run::closure_env$1,tuple$&lt;&gt; &gt; &gt; &gt;, core::cell::RefCell&lt;tuple$ (30 samples, 0.02%)</title><rect x="2.4538%" y="1221" width="0.0174%" height="15" fill="rgb(205,86,26)" fg:x="4238" fg:w="30"/><text x="2.7038%" y="1231.50"></text></g><g><title>boids.exe`bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block$0(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block_env$0&lt;bevy_ecs::schedule::executor::multi_threaded::impl$2::run::closure_env$1,tuple$ (30 samples, 0.02%)</title><rect x="2.4538%" y="1205" width="0.0174%" height="15" fill="rgb(231,126,28)" fg:x="4238" fg:w="30"/><text x="2.7038%" y="1215.50"></text></g><g><title>boids.exe`alloc::vec::impl$14::index_mut(alloc::vec::Vec&lt;alloc::vec::Vec&lt;alloc::boxed::Box&lt;dyn$&lt;bevy_ecs::system::system::ReadOnlySystem&lt;assoc$&lt;In,tuple$&lt;&gt; &gt;,assoc$ (18 samples, 0.01%)</title><rect x="2.4724%" y="1285" width="0.0104%" height="15" fill="rgb(219,221,18)" fg:x="4270" fg:w="18"/><text x="2.7224%" y="1295.50"></text></g><g><title>boids.exe`alloc::vec::impl$9::deref_mut(alloc::vec::Vec&lt;alloc::vec::Vec&lt;alloc::boxed::Box&lt;dyn$&lt;bevy_ecs::system::system::ReadOnlySystem&lt;assoc$&lt;In,tuple$&lt;&gt; &gt;,assoc$ (18 samples, 0.01%)</title><rect x="2.4724%" y="1269" width="0.0104%" height="15" fill="rgb(211,40,0)" fg:x="4270" fg:w="18"/><text x="2.7224%" y="1279.50"></text></g><g><title>boids.exe`alloc::vec::Vec&lt;alloc::vec::Vec&lt;alloc::boxed::Box&lt;dyn$&lt;bevy_ecs::system::system::ReadOnlySystem&lt;assoc$&lt;In,tuple$&lt;&gt; &gt;,assoc$&lt;Out,bool&gt; &gt; &gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;::as_mut_slice (18 samples, 0.01%)</title><rect x="2.4724%" y="1253" width="0.0104%" height="15" fill="rgb(239,85,43)" fg:x="4270" fg:w="18"/><text x="2.7224%" y="1263.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::schedule::ScheduleGraph::initialize (20 samples, 0.01%)</title><rect x="2.4724%" y="1301" width="0.0116%" height="15" fill="rgb(231,55,21)" fg:x="4270" fg:w="20"/><text x="2.7224%" y="1311.50"></text></g><g><title>boids.exe`bevy_app::sub_app::SubApps::update (115 samples, 0.07%)</title><rect x="2.4283%" y="1861" width="0.0666%" height="15" fill="rgb(225,184,43)" fg:x="4194" fg:w="115"/><text x="2.6783%" y="1871.50"></text></g><g><title>boids.exe`bevy_platform::collections::hash_map::HashMap&lt;bevy_ecs::intern::Interned&lt;dyn$&lt;bevy_app::app::AppLabel&gt; &gt;,bevy_app::sub_app::SubApp,bevy_platform::hash::FixedHasher&gt;::iter_mut (86 samples, 0.05%)</title><rect x="2.4451%" y="1845" width="0.0498%" height="15" fill="rgb(251,158,41)" fg:x="4223" fg:w="86"/><text x="2.6951%" y="1855.50"></text></g><g><title>boids.exe`hashbrown::map::HashMap&lt;bevy_ecs::intern::Interned&lt;dyn$&lt;bevy_app::app::AppLabel&gt; &gt;,bevy_app::sub_app::SubApp,bevy_platform::hash::FixedHasher,hashbrown::raw::alloc::inner::Global&gt;::iter_mut (86 samples, 0.05%)</title><rect x="2.4451%" y="1829" width="0.0498%" height="15" fill="rgb(234,159,37)" fg:x="4223" fg:w="86"/><text x="2.6951%" y="1839.50"></text></g><g><title>boids.exe`hashbrown::raw::RawTable&lt;tuple$&lt;bevy_ecs::intern::Interned&lt;dyn$&lt;bevy_app::app::AppLabel&gt; &gt;,bevy_app::sub_app::SubApp&gt;,hashbrown::raw::alloc::inner::Global&gt;::iter (86 samples, 0.05%)</title><rect x="2.4451%" y="1813" width="0.0498%" height="15" fill="rgb(216,204,22)" fg:x="4223" fg:w="86"/><text x="2.6951%" y="1823.50"></text></g><g><title>boids.exe`hashbrown::raw::RawTableInner::iter (86 samples, 0.05%)</title><rect x="2.4451%" y="1797" width="0.0498%" height="15" fill="rgb(214,17,3)" fg:x="4223" fg:w="86"/><text x="2.6951%" y="1807.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::schedule_scope&lt;tuple$&lt;&gt;,bevy_ecs::intern::Interned&lt;dyn$&lt;bevy_ecs::schedule::set::ScheduleLabel&gt; &gt;,bevy_ecs::world::impl$4::run_schedule::closure_env$0&lt;bevy_ecs::intern::Interned&lt;dyn$&lt;bevy_ecs::schedule::set::ScheduleLabel&gt; &gt; &gt; &gt;(bevy_ecs::intern::Interned&lt;dyn$&lt;bevy_ecs::schedule::set::ScheduleLabel&gt; &gt;, bevy_ecs::world::impl$4::run_schedule::closure_env$0&lt;bevy_ecs::intern::Interned&lt;dyn$ (86 samples, 0.05%)</title><rect x="2.4451%" y="1781" width="0.0498%" height="15" fill="rgb(212,111,17)" fg:x="4223" fg:w="86"/><text x="2.6951%" y="1791.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::try_schedule_scope(bevy_ecs::intern::Interned&lt;dyn$&lt;bevy_ecs::schedule::set::ScheduleLabel&gt; &gt;, bevy_ecs::world::impl$4::run_schedule::closure_env$0&lt;bevy_ecs::intern::Interned&lt;dyn$ (86 samples, 0.05%)</title><rect x="2.4451%" y="1765" width="0.0498%" height="15" fill="rgb(221,157,24)" fg:x="4223" fg:w="86"/><text x="2.6951%" y="1775.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::resource_mut (86 samples, 0.05%)</title><rect x="2.4451%" y="1749" width="0.0498%" height="15" fill="rgb(252,16,13)" fg:x="4223" fg:w="86"/><text x="2.6951%" y="1759.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::get_resource_mut (86 samples, 0.05%)</title><rect x="2.4451%" y="1733" width="0.0498%" height="15" fill="rgb(221,62,2)" fg:x="4223" fg:w="86"/><text x="2.6951%" y="1743.50"></text></g><g><title>boids.exe`bevy_ecs::world::unsafe_world_cell::UnsafeWorldCell::get_resource_mut (86 samples, 0.05%)</title><rect x="2.4451%" y="1717" width="0.0498%" height="15" fill="rgb(247,87,22)" fg:x="4223" fg:w="86"/><text x="2.6951%" y="1727.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::schedule::Schedule::run (86 samples, 0.05%)</title><rect x="2.4451%" y="1701" width="0.0498%" height="15" fill="rgb(215,73,9)" fg:x="4223" fg:w="86"/><text x="2.6951%" y="1711.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::executor::single_threaded::impl$0::run(bevy_ecs::schedule::executor::single_threaded::SingleThreadedExecutor*, bevy_ecs::schedule::executor::SystemSchedule*, bevy_ecs::world::World*, enum2$&lt;core::option::Option&lt;ref$&lt;fixedbitset::FixedBitSet&gt; &gt; &gt;, void (*)(bevy_ecs::error::bevy_error::BevyError, enum2$ (86 samples, 0.05%)</title><rect x="2.4451%" y="1685" width="0.0498%" height="15" fill="rgb(207,175,33)" fg:x="4223" fg:w="86"/><text x="2.6951%" y="1695.50"></text></g><g><title>boids.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe (86 samples, 0.05%)</title><rect x="2.4451%" y="1669" width="0.0498%" height="15" fill="rgb(243,129,54)" fg:x="4223" fg:w="86"/><text x="2.6951%" y="1679.50"></text></g><g><title>boids.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe (86 samples, 0.05%)</title><rect x="2.4451%" y="1653" width="0.0498%" height="15" fill="rgb(227,119,45)" fg:x="4223" fg:w="86"/><text x="2.6951%" y="1663.50"></text></g><g><title>boids.exe`std::panicking::try::do_call (86 samples, 0.05%)</title><rect x="2.4451%" y="1637" width="0.0498%" height="15" fill="rgb(205,109,36)" fg:x="4223" fg:w="86"/><text x="2.6951%" y="1647.50"></text></g><g><title>boids.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe (86 samples, 0.05%)</title><rect x="2.4451%" y="1621" width="0.0498%" height="15" fill="rgb(205,6,39)" fg:x="4223" fg:w="86"/><text x="2.6951%" y="1631.50"></text></g><g><title>boids.exe`core::ops::function::FnOnce::call_once (86 samples, 0.05%)</title><rect x="2.4451%" y="1605" width="0.0498%" height="15" fill="rgb(221,32,16)" fg:x="4223" fg:w="86"/><text x="2.6951%" y="1615.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::executor::single_threaded::impl$0::run::closure$0 (86 samples, 0.05%)</title><rect x="2.4451%" y="1589" width="0.0498%" height="15" fill="rgb(228,144,50)" fg:x="4223" fg:w="86"/><text x="2.6951%" y="1599.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::executor::__rust_begin_short_backtrace::run(alloc::boxed::Box&lt;dyn$&lt;bevy_ecs::system::system::System&lt;assoc$&lt;In,tuple$&lt;&gt; &gt;,assoc$&lt;Out,enum2$&lt;core::result::Result&lt;tuple$ (86 samples, 0.05%)</title><rect x="2.4451%" y="1573" width="0.0498%" height="15" fill="rgb(229,201,53)" fg:x="4223" fg:w="86"/><text x="2.6951%" y="1583.50"></text></g><g><title>boids.exe`bevy_ecs::system::system::System::run_without_applying_deferred&lt;bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;bevy_ecs::system::exclusive_function_system::ExclusiveFunctionSystem&lt;void (*)(bevy_ecs::system::system_param::Local&lt;bool&gt;),void (*)(ref_mut$&lt;bevy_ecs::world::World&gt;,bevy_ecs::system::system_param::Local&lt;bool&gt;)&gt; &gt; &gt;(bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;bevy_ecs::system::exclusive_function_system::ExclusiveFunctionSystem&lt;void (*)(bevy_ecs::system::system_param::Local&lt;bool&gt;),void (*)(ref_mut$&lt;bevy_ecs::world::World&gt;,bevy_ecs::system::system_param::Local&lt;bool&gt;)&gt; &gt;*, tuple$ (86 samples, 0.05%)</title><rect x="2.4451%" y="1557" width="0.0498%" height="15" fill="rgb(249,153,27)" fg:x="4223" fg:w="86"/><text x="2.6951%" y="1567.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::last_change_tick_scope&lt;tuple$&lt;&gt;,bevy_ecs::system::exclusive_function_system::impl$2::run_unsafe::closure_env$0&lt;void (*)(bevy_ecs::system::system_param::Local&lt;bool&gt;),void (*)(ref_mut$&lt;bevy_ecs::world::World&gt;,bevy_ecs::system::system_param::Local&lt;bool&gt;)&gt; &gt;(bevy_ecs::component::Tick, bevy_ecs::system::exclusive_function_system::impl$2::run_unsafe::closure_env$0&lt;void (*)(bevy_ecs::system::system_param::Local&lt;bool&gt;),void (*)(ref_mut$&lt;bevy_ecs::world::World&gt;,bevy_ecs::system::system_param::Local (86 samples, 0.05%)</title><rect x="2.4451%" y="1541" width="0.0498%" height="15" fill="rgb(227,106,25)" fg:x="4223" fg:w="86"/><text x="2.6951%" y="1551.50"></text></g><g><title>boids.exe`bevy_ecs::system::exclusive_function_system::impl$2::run_unsafe::closure$0(bevy_ecs::system::exclusive_function_system::impl$2::run_unsafe::closure_env$0&lt;void (*)(bevy_ecs::system::system_param::Local&lt;bool&gt;),void (*)(ref_mut$&lt;bevy_ecs::world::World&gt;,bevy_ecs::system::system_param::Local (86 samples, 0.05%)</title><rect x="2.4451%" y="1525" width="0.0498%" height="15" fill="rgb(230,65,29)" fg:x="4223" fg:w="86"/><text x="2.6951%" y="1535.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::flush (72 samples, 0.04%)</title><rect x="2.4532%" y="1509" width="0.0417%" height="15" fill="rgb(221,57,46)" fg:x="4237" fg:w="72"/><text x="2.7032%" y="1519.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::resource_scope&lt;bevy_app::main_schedule::MainScheduleOrder,tuple$&lt;&gt;,bevy_app::main_schedule::impl$2::run_main::closure_env$1&gt; (72 samples, 0.04%)</title><rect x="2.4532%" y="1493" width="0.0417%" height="15" fill="rgb(229,161,17)" fg:x="4237" fg:w="72"/><text x="2.7032%" y="1503.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::try_resource_scope (72 samples, 0.04%)</title><rect x="2.4532%" y="1477" width="0.0417%" height="15" fill="rgb(222,213,11)" fg:x="4237" fg:w="72"/><text x="2.7032%" y="1487.50"></text></g><g><title>boids.exe`bevy_app::main_schedule::impl$2::run_main::closure$1(bevy_app::main_schedule::impl$2::run_main::closure_env$1, bevy_ecs::world::World*, bevy_ecs::change_detection::Mut (72 samples, 0.04%)</title><rect x="2.4532%" y="1461" width="0.0417%" height="15" fill="rgb(235,35,13)" fg:x="4237" fg:w="72"/><text x="2.7032%" y="1471.50"></text></g><g><title>boids.exe`core::slice::iter::impl$182::next(core::slice::iter::Iter&lt;bevy_ecs::intern::Interned&lt;dyn$ (72 samples, 0.04%)</title><rect x="2.4532%" y="1445" width="0.0417%" height="15" fill="rgb(233,158,34)" fg:x="4237" fg:w="72"/><text x="2.7032%" y="1455.50"></text></g><g><title>boids.exe`core::ptr::non_null::NonNull&lt;bevy_ecs::intern::Interned&lt;dyn$&lt;bevy_ecs::schedule::set::ScheduleLabel&gt; &gt; &gt;::add(core::ptr::non_null::NonNull&lt;bevy_ecs::intern::Interned&lt;dyn$ (72 samples, 0.04%)</title><rect x="2.4532%" y="1429" width="0.0417%" height="15" fill="rgb(215,151,48)" fg:x="4237" fg:w="72"/><text x="2.7032%" y="1439.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::try_schedule_scope&lt;tuple$&lt;&gt;,bevy_ecs::intern::Interned&lt;dyn$&lt;bevy_ecs::schedule::set::ScheduleLabel&gt; &gt;,bevy_ecs::world::impl$4::try_run_schedule::closure_env$0&lt;bevy_ecs::intern::Interned&lt;dyn$&lt;bevy_ecs::schedule::set::ScheduleLabel&gt; &gt; &gt; &gt;(bevy_ecs::intern::Interned&lt;dyn$&lt;bevy_ecs::schedule::set::ScheduleLabel&gt; &gt;, bevy_ecs::world::impl$4::try_run_schedule::closure_env$0&lt;bevy_ecs::intern::Interned&lt;dyn$ (72 samples, 0.04%)</title><rect x="2.4532%" y="1413" width="0.0417%" height="15" fill="rgb(229,84,14)" fg:x="4237" fg:w="72"/><text x="2.7032%" y="1423.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::resource_mut (72 samples, 0.04%)</title><rect x="2.4532%" y="1397" width="0.0417%" height="15" fill="rgb(229,68,14)" fg:x="4237" fg:w="72"/><text x="2.7032%" y="1407.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::get_resource_mut (72 samples, 0.04%)</title><rect x="2.4532%" y="1381" width="0.0417%" height="15" fill="rgb(243,106,26)" fg:x="4237" fg:w="72"/><text x="2.7032%" y="1391.50"></text></g><g><title>boids.exe`bevy_ecs::world::unsafe_world_cell::UnsafeWorldCell::get_resource_mut (72 samples, 0.04%)</title><rect x="2.4532%" y="1365" width="0.0417%" height="15" fill="rgb(206,45,38)" fg:x="4237" fg:w="72"/><text x="2.7032%" y="1375.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::schedule::Schedule::run (72 samples, 0.04%)</title><rect x="2.4532%" y="1349" width="0.0417%" height="15" fill="rgb(226,6,15)" fg:x="4237" fg:w="72"/><text x="2.7032%" y="1359.50"></text></g><g><title>boids.exe`enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;bevy_ecs::schedule::schedule::ScheduleBuildError&gt; &gt; &gt;::unwrap_or_else(enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$ (39 samples, 0.02%)</title><rect x="2.4724%" y="1333" width="0.0226%" height="15" fill="rgb(232,22,54)" fg:x="4270" fg:w="39"/><text x="2.7224%" y="1343.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::schedule::Schedule::initialize (39 samples, 0.02%)</title><rect x="2.4724%" y="1317" width="0.0226%" height="15" fill="rgb(229,222,32)" fg:x="4270" fg:w="39"/><text x="2.7224%" y="1327.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::schedule::ScheduleGraph::update_schedule(bevy_ecs::world::World*, bevy_ecs::schedule::executor::SystemSchedule*, alloc::collections::btree::set::BTreeSet&lt;bevy_ecs::component::ComponentId,alloc::alloc::Global&gt;*, bevy_ecs::intern::Interned&lt;dyn$ (19 samples, 0.01%)</title><rect x="2.4839%" y="1301" width="0.0110%" height="15" fill="rgb(228,62,29)" fg:x="4290" fg:w="19"/><text x="2.7339%" y="1311.50"></text></g><g><title>boids.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;bevy_ecs::schedule::executor::SystemSchedule,enum2$ (19 samples, 0.01%)</title><rect x="2.4839%" y="1285" width="0.0110%" height="15" fill="rgb(251,103,34)" fg:x="4290" fg:w="19"/><text x="2.7339%" y="1295.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::schedule::ScheduleGraph::build_schedule(bevy_ecs::world::World*, bevy_ecs::intern::Interned&lt;dyn$&lt;bevy_ecs::schedule::set::ScheduleLabel&gt; &gt;, alloc::collections::btree::set::BTreeSet (19 samples, 0.01%)</title><rect x="2.4839%" y="1269" width="0.0110%" height="15" fill="rgb(233,12,30)" fg:x="4290" fg:w="19"/><text x="2.7339%" y="1279.50"></text></g><g><title>boids.exe`alloc::boxed::impl$28::call_once(alloc::boxed::Box&lt;dyn$&lt;core::ops::function::FnOnce&lt;tuple$&lt;bevy_app::app::App&gt;,assoc$&lt;Output,enum2$ (1,142 samples, 0.66%)</title><rect x="1.8343%" y="2309" width="0.6612%" height="15" fill="rgb(238,52,0)" fg:x="3168" fg:w="1142"/><text x="2.0843%" y="2319.50"></text></g><g><title>boids.exe`alloc::boxed::impl$8::drop(alloc::boxed::Box&lt;dyn$&lt;core::ops::function::FnOnce&lt;tuple$&lt;bevy_app::app::App&gt;,assoc$&lt;Output,enum2$ (1,142 samples, 0.66%)</title><rect x="1.8343%" y="2293" width="0.6612%" height="15" fill="rgb(223,98,5)" fg:x="3168" fg:w="1142"/><text x="2.0843%" y="2303.50"></text></g><g><title>boids.exe`core::alloc::layout::Layout::for_value_raw(ptr_const$&lt;dyn$&lt;core::ops::function::FnOnce&lt;tuple$&lt;bevy_app::app::App&gt;,assoc$&lt;Output,enum2$ (1,142 samples, 0.66%)</title><rect x="1.8343%" y="2277" width="0.6612%" height="15" fill="rgb(228,75,37)" fg:x="3168" fg:w="1142"/><text x="2.0843%" y="2287.50"></text></g><g><title>boids.exe`core::mem::size_of_val_raw(ptr_const$&lt;dyn$&lt;core::ops::function::FnOnce&lt;tuple$&lt;bevy_app::app::App&gt;,assoc$&lt;Output,enum2$ (1,142 samples, 0.66%)</title><rect x="1.8343%" y="2261" width="0.6612%" height="15" fill="rgb(205,115,49)" fg:x="3168" fg:w="1142"/><text x="2.0843%" y="2271.50"></text></g><g><title>boids.exe`core::ops::function::FnOnce::call_once&lt;bevy_winit::impl$0::build::closure_env$0&lt;bevy_winit::WakeUp&gt;,tuple$&lt;bevy_app::app::App&gt; &gt;(bevy_winit::impl$0::build::closure_env$0 (1,142 samples, 0.66%)</title><rect x="1.8343%" y="2245" width="0.6612%" height="15" fill="rgb(250,154,43)" fg:x="3168" fg:w="1142"/><text x="2.0843%" y="2255.50"></text></g><g><title>boids.exe`bevy_winit::state::winit_runner&lt;bevy_winit::WakeUp&gt;(bevy_app::app::App, winit::event_loop::EventLoop (1,142 samples, 0.66%)</title><rect x="1.8343%" y="2229" width="0.6612%" height="15" fill="rgb(226,43,29)" fg:x="3168" fg:w="1142"/><text x="2.0843%" y="2239.50"></text></g><g><title>boids.exe`winit::platform_impl::windows::event_loop::EventLoop&lt;bevy_winit::WakeUp&gt;::run&lt;bevy_winit::WakeUp,winit::event_loop::impl$6::run_app::closure_env$0&lt;bevy_winit::WakeUp,bevy_winit::state::WinitAppRunnerState&lt;bevy_winit::WakeUp&gt; &gt; &gt;(winit::platform_impl::windows::event_loop::EventLoop&lt;bevy_winit::WakeUp&gt;, winit::event_loop::impl$6::run_app::closure_env$0&lt;bevy_winit::WakeUp,bevy_winit::state::WinitAppRunnerState (1,059 samples, 0.61%)</title><rect x="1.8823%" y="2213" width="0.6132%" height="15" fill="rgb(249,228,39)" fg:x="3251" fg:w="1059"/><text x="2.1323%" y="2223.50"></text></g><g><title>boids.exe`winit::platform_impl::windows::event_loop::EventLoop&lt;bevy_winit::WakeUp&gt;::run_on_demand(winit::event_loop::impl$6::run_app::closure_env$0&lt;bevy_winit::WakeUp,bevy_winit::state::WinitAppRunnerState (1,059 samples, 0.61%)</title><rect x="1.8823%" y="2197" width="0.6132%" height="15" fill="rgb(216,79,43)" fg:x="3251" fg:w="1059"/><text x="2.1323%" y="2207.50"></text></g><g><title>boids.exe`winit::platform_impl::windows::event_loop::EventLoop&lt;bevy_winit::WakeUp&gt;::wait_for_messages(enum2$&lt;core::option::Option (285 samples, 0.17%)</title><rect x="2.3305%" y="2181" width="0.1650%" height="15" fill="rgb(228,95,12)" fg:x="4025" fg:w="285"/><text x="2.5805%" y="2191.50"></text></g><g><title>boids.exe`winit::platform_impl::windows::event_loop::runner::EventLoopRunner&lt;winit::platform_impl::windows::event_loop::UserEventPlaceholder&gt;::control_flow (285 samples, 0.17%)</title><rect x="2.3305%" y="2165" width="0.1650%" height="15" fill="rgb(249,221,15)" fg:x="4025" fg:w="285"/><text x="2.5805%" y="2175.50"></text></g><g><title>boids.exe`core::cell::Cell&lt;enum2$&lt;winit::event_loop::ControlFlow&gt; &gt;::get (285 samples, 0.17%)</title><rect x="2.3305%" y="2149" width="0.1650%" height="15" fill="rgb(233,34,13)" fg:x="4025" fg:w="285"/><text x="2.5805%" y="2159.50"></text></g><g><title>boids.exe`winit::platform_impl::windows::event_loop::runner::EventLoopRunner&lt;winit::platform_impl::windows::event_loop::UserEventPlaceholder&gt;::move_state_to&lt;winit::platform_impl::windows::event_loop::UserEventPlaceholder&gt; (285 samples, 0.17%)</title><rect x="2.3305%" y="2133" width="0.1650%" height="15" fill="rgb(214,103,39)" fg:x="4025" fg:w="285"/><text x="2.5805%" y="2143.50"></text></g><g><title>boids.exe`winit::platform_impl::windows::event_loop::runner::EventLoopRunner&lt;winit::platform_impl::windows::event_loop::UserEventPlaceholder&gt;::call_event_handler(enum2$&lt;winit::event::Event (285 samples, 0.17%)</title><rect x="2.3305%" y="2117" width="0.1650%" height="15" fill="rgb(251,126,39)" fg:x="4025" fg:w="285"/><text x="2.5805%" y="2127.50"></text></g><g><title>boids.exe`winit::platform_impl::windows::event_loop::runner::EventLoopRunner&lt;winit::platform_impl::windows::event_loop::UserEventPlaceholder&gt;::catch_unwind&lt;winit::platform_impl::windows::event_loop::UserEventPlaceholder,tuple$&lt;&gt;,winit::platform_impl::windows::event_loop::runner::impl$3::call_event_handler::closure_env$0&lt;winit::platform_impl::windows::event_loop::UserEventPlaceholder&gt; &gt;(winit::platform_impl::windows::event_loop::runner::impl$3::call_event_handler::closure_env$0 (285 samples, 0.17%)</title><rect x="2.3305%" y="2101" width="0.1650%" height="15" fill="rgb(214,216,36)" fg:x="4025" fg:w="285"/><text x="2.5805%" y="2111.50"></text></g><g><title>boids.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;winit::platform_impl::windows::event_loop::runner::impl$3::call_event_handler::closure_env$0 (285 samples, 0.17%)</title><rect x="2.3305%" y="2085" width="0.1650%" height="15" fill="rgb(220,221,8)" fg:x="4025" fg:w="285"/><text x="2.5805%" y="2095.50"></text></g><g><title>boids.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;winit::platform_impl::windows::event_loop::runner::impl$3::call_event_handler::closure_env$0 (285 samples, 0.17%)</title><rect x="2.3305%" y="2069" width="0.1650%" height="15" fill="rgb(240,216,3)" fg:x="4025" fg:w="285"/><text x="2.5805%" y="2079.50"></text></g><g><title>boids.exe`std::panicking::try::do_call (285 samples, 0.17%)</title><rect x="2.3305%" y="2053" width="0.1650%" height="15" fill="rgb(232,218,17)" fg:x="4025" fg:w="285"/><text x="2.5805%" y="2063.50"></text></g><g><title>boids.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;winit::platform_impl::windows::event_loop::runner::impl$3::call_event_handler::closure_env$0 (285 samples, 0.17%)</title><rect x="2.3305%" y="2037" width="0.1650%" height="15" fill="rgb(229,163,45)" fg:x="4025" fg:w="285"/><text x="2.5805%" y="2047.50"></text></g><g><title>boids.exe`winit::platform_impl::windows::event_loop::runner::impl$3::call_event_handler::closure$0(winit::platform_impl::windows::event_loop::runner::impl$3::call_event_handler::closure_env$0 (285 samples, 0.17%)</title><rect x="2.3305%" y="2021" width="0.1650%" height="15" fill="rgb(231,110,42)" fg:x="4025" fg:w="285"/><text x="2.5805%" y="2031.50"></text></g><g><title>boids.exe`core::cell::Cell&lt;enum2$&lt;core::option::Option&lt;alloc::boxed::Box&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;enum2$&lt;winit::event::Event&lt;winit::platform_impl::windows::event_loop::UserEventPlaceholder&gt; &gt; &gt;,assoc$&lt;Output,tuple$&lt;&gt; &gt; &gt; &gt;,alloc::alloc::Global&gt; &gt; &gt; &gt;::replace(enum2$&lt;core::option::Option&lt;alloc::boxed::Box&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;enum2$&lt;winit::event::Event&lt;winit::platform_impl::windows::event_loop::UserEventPlaceholder&gt; &gt; &gt;,assoc$&lt;Output,tuple$ (284 samples, 0.16%)</title><rect x="2.3311%" y="2005" width="0.1644%" height="15" fill="rgb(208,170,48)" fg:x="4026" fg:w="284"/><text x="2.5811%" y="2015.50"></text></g><g><title>boids.exe`core::mem::replace(enum2$&lt;core::option::Option&lt;alloc::boxed::Box&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;enum2$&lt;winit::event::Event&lt;winit::platform_impl::windows::event_loop::UserEventPlaceholder&gt; &gt; &gt;,assoc$&lt;Output,tuple$&lt;&gt; &gt; &gt; &gt;,alloc::alloc::Global&gt; &gt; &gt;*, enum2$&lt;core::option::Option&lt;alloc::boxed::Box&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;enum2$&lt;winit::event::Event&lt;winit::platform_impl::windows::event_loop::UserEventPlaceholder&gt; &gt; &gt;,assoc$&lt;Output,tuple$ (284 samples, 0.16%)</title><rect x="2.3311%" y="1989" width="0.1644%" height="15" fill="rgb(239,116,25)" fg:x="4026" fg:w="284"/><text x="2.5811%" y="1999.50"></text></g><g><title>boids.exe`winit::platform_impl::windows::event_loop::impl$3::run_on_demand::closure$0&lt;bevy_winit::WakeUp,winit::event_loop::impl$6::run_app::closure_env$0&lt;bevy_winit::WakeUp,bevy_winit::state::WinitAppRunnerState&lt;bevy_winit::WakeUp&gt; &gt; &gt;(winit::platform_impl::windows::event_loop::impl$3::run_on_demand::closure_env$0&lt;bevy_winit::WakeUp,winit::event_loop::impl$6::run_app::closure_env$0&lt;bevy_winit::WakeUp,bevy_winit::state::WinitAppRunnerState&lt;bevy_winit::WakeUp&gt; &gt; &gt;*, enum2$&lt;winit::event::Event (284 samples, 0.16%)</title><rect x="2.3311%" y="1973" width="0.1644%" height="15" fill="rgb(219,200,50)" fg:x="4026" fg:w="284"/><text x="2.5811%" y="1983.50"></text></g><g><title>boids.exe`winit::event_loop::impl$6::run_app::closure$0(winit::event_loop::impl$6::run_app::closure_env$0&lt;bevy_winit::WakeUp,bevy_winit::state::WinitAppRunnerState&lt;bevy_winit::WakeUp&gt; &gt;*, enum2$&lt;winit::event::Event (283 samples, 0.16%)</title><rect x="2.3317%" y="1957" width="0.1639%" height="15" fill="rgb(245,200,0)" fg:x="4027" fg:w="283"/><text x="2.5817%" y="1967.50"></text></g><g><title>boids.exe`winit::event_loop::dispatch_event_for_app(bevy_winit::state::WinitAppRunnerState&lt;bevy_winit::WakeUp&gt;*, winit::event_loop::ActiveEventLoop*, enum2$&lt;winit::event::Event (283 samples, 0.16%)</title><rect x="2.3317%" y="1941" width="0.1639%" height="15" fill="rgb(245,119,33)" fg:x="4027" fg:w="283"/><text x="2.5817%" y="1951.50"></text></g><g><title>boids.exe`bevy_winit::state::impl$1::about_to_wait&lt;bevy_winit::WakeUp&gt;(bevy_winit::state::WinitAppRunnerState (283 samples, 0.16%)</title><rect x="2.3317%" y="1925" width="0.1639%" height="15" fill="rgb(231,125,12)" fg:x="4027" fg:w="283"/><text x="2.5817%" y="1935.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(bevy_ecs::system::function_system::SystemState&lt;tuple$&lt;bevy_ecs::system::commands::Commands,bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,ref_mut$&lt;bevy_window::window::Window&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_window::raw_handle::RawHandleWrapperHolder&gt; &gt; &gt; &gt;,bevy_ecs::query::filter::Added&lt;bevy_window::window::Window&gt; &gt;,bevy_ecs::event::writer::EventWriter&lt;bevy_window::event::WindowCreated&gt;,bevy_ecs::change_detection::NonSendMut&lt;bevy_winit::winit_windows::WinitWindows&gt;,bevy_ecs::change_detection::NonSendMut&lt;bevy_winit::accessibility::AccessKitAdapters&gt;,bevy_ecs::change_detection::ResMut&lt;bevy_winit::accessibility::WinitActionRequestHandlers&gt;,bevy_ecs::change_detection::Res&lt;bevy_a11y::AccessibilityRequested&gt;,bevy_ecs::change_detection::Res (118 samples, 0.07%)</title><rect x="2.4272%" y="1909" width="0.0683%" height="15" fill="rgb(216,96,41)" fg:x="4192" fg:w="118"/><text x="2.6772%" y="1919.50"></text></g><g><title>boids.exe`bevy_winit::state::WinitAppRunnerState&lt;bevy_winit::WakeUp&gt;::redraw_requested&lt;bevy_winit::WakeUp&gt; (118 samples, 0.07%)</title><rect x="2.4272%" y="1893" width="0.0683%" height="15" fill="rgb(248,43,45)" fg:x="4192" fg:w="118"/><text x="2.6772%" y="1903.50"></text></g><g><title>boids.exe`bevy_winit::state::WinitAppRunnerState&lt;bevy_winit::WakeUp&gt;::update_cursors (116 samples, 0.07%)</title><rect x="2.4283%" y="1877" width="0.0672%" height="15" fill="rgb(217,222,7)" fg:x="4194" fg:w="116"/><text x="2.6783%" y="1887.50"></text></g><g><title>boids.exe`__scrt_common_main_seh() (4,093 samples, 2.37%)</title><rect x="0.1262%" y="2533" width="2.3699%" height="15" fill="rgb(233,28,6)" fg:x="218" fg:w="4093"/><text x="0.3762%" y="2543.50">bo..</text></g><g><title>boids.exe`invoke_main() (4,076 samples, 2.36%)</title><rect x="0.1361%" y="2517" width="2.3600%" height="15" fill="rgb(231,218,15)" fg:x="235" fg:w="4076"/><text x="0.3861%" y="2527.50">bo..</text></g><g><title>boids.exe`main (4,076 samples, 2.36%)</title><rect x="0.1361%" y="2501" width="2.3600%" height="15" fill="rgb(226,171,48)" fg:x="235" fg:w="4076"/><text x="0.3861%" y="2511.50">bo..</text></g><g><title>boids.exe`std::rt::lang_start_internal (4,076 samples, 2.36%)</title><rect x="0.1361%" y="2485" width="2.3600%" height="15" fill="rgb(235,201,9)" fg:x="235" fg:w="4076"/><text x="0.3861%" y="2495.50">bo..</text></g><g><title>boids.exe`std::panic::catch_unwind (4,076 samples, 2.36%)</title><rect x="0.1361%" y="2469" width="2.3600%" height="15" fill="rgb(217,80,15)" fg:x="235" fg:w="4076"/><text x="0.3861%" y="2479.50">bo..</text></g><g><title>boids.exe`std::panicking::try (4,076 samples, 2.36%)</title><rect x="0.1361%" y="2453" width="2.3600%" height="15" fill="rgb(219,152,8)" fg:x="235" fg:w="4076"/><text x="0.3861%" y="2463.50">bo..</text></g><g><title>boids.exe`std::panicking::try::do_call (4,076 samples, 2.36%)</title><rect x="0.1361%" y="2437" width="2.3600%" height="15" fill="rgb(243,107,38)" fg:x="235" fg:w="4076"/><text x="0.3861%" y="2447.50">bo..</text></g><g><title>boids.exe`std::rt::lang_start_internal::closure$0 (4,076 samples, 2.36%)</title><rect x="0.1361%" y="2421" width="2.3600%" height="15" fill="rgb(231,17,5)" fg:x="235" fg:w="4076"/><text x="0.3861%" y="2431.50">bo..</text></g><g><title>boids.exe`std::rt::lang_start::closure$0&lt;tuple$&lt;&gt; &gt;(std::rt::lang_start::closure_env$0&lt;tuple$ (4,076 samples, 2.36%)</title><rect x="0.1361%" y="2405" width="2.3600%" height="15" fill="rgb(209,25,54)" fg:x="235" fg:w="4076"/><text x="0.3861%" y="2415.50">bo..</text></g><g><title>boids.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;void (*)(),tuple$&lt;&gt; &gt;(void (*) (4,076 samples, 2.36%)</title><rect x="0.1361%" y="2389" width="2.3600%" height="15" fill="rgb(219,0,2)" fg:x="235" fg:w="4076"/><text x="0.3861%" y="2399.50">bo..</text></g><g><title>boids.exe`boids::main (4,076 samples, 2.36%)</title><rect x="0.1361%" y="2373" width="2.3600%" height="15" fill="rgb(246,9,5)" fg:x="235" fg:w="4076"/><text x="0.3861%" y="2383.50">bo..</text></g><g><title>boids.exe`core::ptr::drop_in_place (1,143 samples, 0.66%)</title><rect x="1.8343%" y="2357" width="0.6618%" height="15" fill="rgb(226,159,4)" fg:x="3168" fg:w="1143"/><text x="2.0843%" y="2367.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(enum2$&lt;core::option::Option (1,143 samples, 0.66%)</title><rect x="1.8343%" y="2341" width="0.6618%" height="15" fill="rgb(219,175,34)" fg:x="3168" fg:w="1143"/><text x="2.0843%" y="2351.50"></text></g><g><title>boids.exe`bevy_app::app::App::run (1,143 samples, 0.66%)</title><rect x="1.8343%" y="2325" width="0.6618%" height="15" fill="rgb(236,10,46)" fg:x="3168" fg:w="1143"/><text x="2.0843%" y="2335.50"></text></g><g><title>boids.exe`bevy_ecs::system::commands::_::impl$0::apply (27 samples, 0.02%)</title><rect x="2.5048%" y="1653" width="0.0156%" height="15" fill="rgb(240,211,16)" fg:x="4326" fg:w="27"/><text x="2.7548%" y="1663.50"></text></g><g><title>boids.exe`bevy_ecs::world::command_queue::RawCommandQueue::apply_or_drop_queued(enum2$&lt;core::option::Option&lt;core::ptr::non_null::NonNull (27 samples, 0.02%)</title><rect x="2.5048%" y="1637" width="0.0156%" height="15" fill="rgb(205,3,43)" fg:x="4326" fg:w="27"/><text x="2.7548%" y="1647.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::executor::multi_threaded::apply_deferred(fixedbitset::FixedBitSet*, ref$&lt;slice2$&lt;bevy_utils::syncunsafecell::SyncUnsafeCell&lt;alloc::boxed::Box&lt;dyn$&lt;bevy_ecs::system::system::System&lt;assoc$&lt;In,tuple$&lt;&gt; &gt;,assoc$&lt;Out,enum2$&lt;core::result::Result&lt;tuple$ (35 samples, 0.02%)</title><rect x="2.5048%" y="1669" width="0.0203%" height="15" fill="rgb(245,7,22)" fg:x="4326" fg:w="35"/><text x="2.7548%" y="1679.50"></text></g><g><title>boids.exe`async_task::raw::RawTask&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block_env$0&gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block_env$0&gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$&lt;&gt; &gt;::run&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block_env$0&gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block_env$0&gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$&lt;&gt; &gt;(tuple$ (53 samples, 0.03%)</title><rect x="2.5048%" y="1861" width="0.0307%" height="15" fill="rgb(239,132,32)" fg:x="4326" fg:w="53"/><text x="2.7548%" y="1871.50"></text></g><g><title>boids.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;async_task::raw::impl$3::run::closure_env$1&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block_env$0&gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block_env$0&gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$ (53 samples, 0.03%)</title><rect x="2.5048%" y="1845" width="0.0307%" height="15" fill="rgb(228,202,34)" fg:x="4326" fg:w="53"/><text x="2.7548%" y="1855.50"></text></g><g><title>boids.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;async_task::raw::impl$3::run::closure_env$1&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block_env$0&gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block_env$0&gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$ (53 samples, 0.03%)</title><rect x="2.5048%" y="1829" width="0.0307%" height="15" fill="rgb(254,200,22)" fg:x="4326" fg:w="53"/><text x="2.7548%" y="1839.50"></text></g><g><title>boids.exe`std::panicking::try::do_call (53 samples, 0.03%)</title><rect x="2.5048%" y="1813" width="0.0307%" height="15" fill="rgb(219,10,39)" fg:x="4326" fg:w="53"/><text x="2.7548%" y="1823.50"></text></g><g><title>boids.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;async_task::raw::impl$3::run::closure_env$1&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block_env$0&gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block_env$0&gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$ (53 samples, 0.03%)</title><rect x="2.5048%" y="1797" width="0.0307%" height="15" fill="rgb(226,210,39)" fg:x="4326" fg:w="53"/><text x="2.7548%" y="1807.50"></text></g><g><title>boids.exe`core::ops::function::FnOnce::call_once(async_task::raw::impl$3::run::closure_env$1&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block_env$0&gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block_env$0&gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$ (53 samples, 0.03%)</title><rect x="2.5048%" y="1781" width="0.0307%" height="15" fill="rgb(208,219,16)" fg:x="4326" fg:w="53"/><text x="2.7548%" y="1791.50"></text></g><g><title>boids.exe`async_task::raw::impl$3::run::closure$1(async_task::raw::impl$3::run::closure_env$1&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block_env$0&gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block_env$0&gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$ (53 samples, 0.03%)</title><rect x="2.5048%" y="1765" width="0.0307%" height="15" fill="rgb(216,158,51)" fg:x="4326" fg:w="53"/><text x="2.7548%" y="1775.50"></text></g><g><title>boids.exe`async_executor::impl$21::poll(core::pin::Pin&lt;ref_mut$&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block_env$0&gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$ (53 samples, 0.03%)</title><rect x="2.5048%" y="1749" width="0.0307%" height="15" fill="rgb(233,14,44)" fg:x="4326" fg:w="53"/><text x="2.7548%" y="1759.50"></text></g><g><title>boids.exe`futures_lite::future::impl$11::poll(core::pin::Pin&lt;ref_mut$&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$ (53 samples, 0.03%)</title><rect x="2.5048%" y="1733" width="0.0307%" height="15" fill="rgb(237,97,39)" fg:x="4326" fg:w="53"/><text x="2.7548%" y="1743.50"></text></g><g><title>boids.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;futures_lite::future::impl$11::poll::closure_env$0&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$ (53 samples, 0.03%)</title><rect x="2.5048%" y="1717" width="0.0307%" height="15" fill="rgb(218,198,43)" fg:x="4326" fg:w="53"/><text x="2.7548%" y="1727.50"></text></g><g><title>boids.exe`core::panic::unwind_safe::impl$28::poll&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block_env$0&gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$ (53 samples, 0.03%)</title><rect x="2.5048%" y="1701" width="0.0307%" height="15" fill="rgb(231,104,20)" fg:x="4326" fg:w="53"/><text x="2.7548%" y="1711.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (53 samples, 0.03%)</title><rect x="2.5048%" y="1685" width="0.0307%" height="15" fill="rgb(254,36,13)" fg:x="4326" fg:w="53"/><text x="2.7548%" y="1695.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place (18 samples, 0.01%)</title><rect x="2.5250%" y="1669" width="0.0104%" height="15" fill="rgb(248,14,50)" fg:x="4361" fg:w="18"/><text x="2.7750%" y="1679.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::executor::multi_threaded::Context::system_completed(unsigned long long, enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;, alloc::boxed::Box&lt;dyn$&lt;bevy_ecs::system::system::System&lt;assoc$&lt;In,tuple$&lt;&gt; &gt;,assoc$&lt;Out,enum2$&lt;core::result::Result&lt;tuple$ (18 samples, 0.01%)</title><rect x="2.5250%" y="1653" width="0.0104%" height="15" fill="rgb(217,107,29)" fg:x="4361" fg:w="18"/><text x="2.7750%" y="1663.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::executor::multi_threaded::Context::tick_executor (18 samples, 0.01%)</title><rect x="2.5250%" y="1637" width="0.0104%" height="15" fill="rgb(251,169,33)" fg:x="4361" fg:w="18"/><text x="2.7750%" y="1647.50"></text></g><g><title>boids.exe`bevy_ecs::system::commands::_::impl$0::apply (32 samples, 0.02%)</title><rect x="2.5424%" y="1317" width="0.0185%" height="15" fill="rgb(217,108,32)" fg:x="4391" fg:w="32"/><text x="2.7924%" y="1327.50"></text></g><g><title>boids.exe`bevy_ecs::world::command_queue::RawCommandQueue::apply_or_drop_queued(enum2$&lt;core::option::Option&lt;core::ptr::non_null::NonNull (32 samples, 0.02%)</title><rect x="2.5424%" y="1301" width="0.0185%" height="15" fill="rgb(219,66,42)" fg:x="4391" fg:w="32"/><text x="2.7924%" y="1311.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::contains_resource (35 samples, 0.02%)</title><rect x="2.5424%" y="1381" width="0.0203%" height="15" fill="rgb(206,180,7)" fg:x="4391" fg:w="35"/><text x="2.7924%" y="1391.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::schedule::Schedule::apply_deferred (35 samples, 0.02%)</title><rect x="2.5424%" y="1365" width="0.0203%" height="15" fill="rgb(208,226,31)" fg:x="4391" fg:w="35"/><text x="2.7924%" y="1375.50"></text></g><g><title>boids.exe`core::slice::iter::impl$190::next(core::slice::iter::IterMut&lt;alloc::boxed::Box&lt;dyn$&lt;bevy_ecs::system::system::System&lt;assoc$&lt;In,tuple$&lt;&gt; &gt;,assoc$&lt;Out,enum2$&lt;core::result::Result&lt;tuple$ (35 samples, 0.02%)</title><rect x="2.5424%" y="1349" width="0.0203%" height="15" fill="rgb(218,26,49)" fg:x="4391" fg:w="35"/><text x="2.7924%" y="1359.50"></text></g><g><title>boids.exe`core::ptr::non_null::impl$14::eq(core::ptr::non_null::NonNull&lt;alloc::boxed::Box&lt;dyn$&lt;bevy_ecs::system::system::System&lt;assoc$&lt;In,tuple$&lt;&gt; &gt;,assoc$&lt;Out,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,bevy_ecs::error::bevy_error::BevyError&gt; &gt; &gt; &gt; &gt;,alloc::alloc::Global&gt; &gt;*, core::ptr::non_null::NonNull&lt;alloc::boxed::Box&lt;dyn$&lt;bevy_ecs::system::system::System&lt;assoc$&lt;In,tuple$&lt;&gt; &gt;,assoc$&lt;Out,enum2$&lt;core::result::Result&lt;tuple$ (35 samples, 0.02%)</title><rect x="2.5424%" y="1333" width="0.0203%" height="15" fill="rgb(233,197,48)" fg:x="4391" fg:w="35"/><text x="2.7924%" y="1343.50"></text></g><g><title>boids.exe`bevy_ecs::system::system::System::run_without_applying_deferred&lt;bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;bevy_ecs::system::exclusive_function_system::ExclusiveFunctionSystem&lt;void (*)(),void (*)(ref_mut$&lt;bevy_ecs::world::World&gt;)&gt; &gt; &gt;(bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;bevy_ecs::system::exclusive_function_system::ExclusiveFunctionSystem&lt;void (*)(),void (*)(ref_mut$&lt;bevy_ecs::world::World&gt;)&gt; &gt;*, tuple$ (36 samples, 0.02%)</title><rect x="2.5424%" y="1557" width="0.0208%" height="15" fill="rgb(252,181,51)" fg:x="4391" fg:w="36"/><text x="2.7924%" y="1567.50"></text></g><g><title>boids.exe`bevy_ecs::system::schedule_system::impl$1::run_unsafe(bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;bevy_ecs::system::exclusive_function_system::ExclusiveFunctionSystem&lt;void (*)(),void (*)(ref_mut$&lt;bevy_ecs::world::World&gt;)&gt; &gt;*, tuple$ (36 samples, 0.02%)</title><rect x="2.5424%" y="1541" width="0.0208%" height="15" fill="rgb(253,90,19)" fg:x="4391" fg:w="36"/><text x="2.7924%" y="1551.50"></text></g><g><title>boids.exe`bevy_ecs::system::exclusive_function_system::impl$2::run_unsafe(bevy_ecs::system::exclusive_function_system::ExclusiveFunctionSystem&lt;void (*)(),void (*)(ref_mut$&lt;bevy_ecs::world::World&gt;)&gt;*, tuple$ (36 samples, 0.02%)</title><rect x="2.5424%" y="1525" width="0.0208%" height="15" fill="rgb(215,171,30)" fg:x="4391" fg:w="36"/><text x="2.7924%" y="1535.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::last_change_tick_scope(bevy_ecs::component::Tick, bevy_ecs::system::exclusive_function_system::impl$2::run_unsafe::closure_env$0&lt;void (*)(),void (*)(ref_mut$ (36 samples, 0.02%)</title><rect x="2.5424%" y="1509" width="0.0208%" height="15" fill="rgb(214,222,9)" fg:x="4391" fg:w="36"/><text x="2.7924%" y="1519.50"></text></g><g><title>boids.exe`bevy_ecs::system::exclusive_function_system::impl$2::run_unsafe::closure$0(bevy_ecs::system::exclusive_function_system::impl$2::run_unsafe::closure_env$0&lt;void (*)(),void (*)(ref_mut$ (36 samples, 0.02%)</title><rect x="2.5424%" y="1493" width="0.0208%" height="15" fill="rgb(223,3,22)" fg:x="4391" fg:w="36"/><text x="2.7924%" y="1503.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::flush (36 samples, 0.02%)</title><rect x="2.5424%" y="1477" width="0.0208%" height="15" fill="rgb(225,196,46)" fg:x="4391" fg:w="36"/><text x="2.7924%" y="1487.50"></text></g><g><title>boids.exe`core::ops::function::impls::impl$3::call_mut&lt;tuple$&lt;ref_mut$&lt;bevy_ecs::world::World&gt; &gt;,void (*)(ref_mut$&lt;bevy_ecs::world::World&gt;)&gt;(void (***) (36 samples, 0.02%)</title><rect x="2.5424%" y="1461" width="0.0208%" height="15" fill="rgb(209,110,37)" fg:x="4391" fg:w="36"/><text x="2.7924%" y="1471.50"></text></g><g><title>boids.exe`core::ops::function::FnMut::call_mut(void (**) (36 samples, 0.02%)</title><rect x="2.5424%" y="1445" width="0.0208%" height="15" fill="rgb(249,89,12)" fg:x="4391" fg:w="36"/><text x="2.7924%" y="1455.50"></text></g><g><title>boids.exe`bevy_render::apply_extract_commands (36 samples, 0.02%)</title><rect x="2.5424%" y="1429" width="0.0208%" height="15" fill="rgb(226,27,33)" fg:x="4391" fg:w="36"/><text x="2.7924%" y="1439.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::resource_scope (36 samples, 0.02%)</title><rect x="2.5424%" y="1413" width="0.0208%" height="15" fill="rgb(213,82,22)" fg:x="4391" fg:w="36"/><text x="2.7924%" y="1423.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::try_resource_scope (36 samples, 0.02%)</title><rect x="2.5424%" y="1397" width="0.0208%" height="15" fill="rgb(248,140,0)" fg:x="4391" fg:w="36"/><text x="2.7924%" y="1407.50"></text></g><g><title>boids.exe`async_task::raw::RawTask&lt;async_executor::AsyncCallOnDrop&lt;enum2$&lt;bevy_asset::server::impl$0::reload::async_block_env$0&lt;bevy_asset::path::AssetPath&gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;tuple$&lt;&gt;,enum2$&lt;bevy_asset::server::impl$0::reload::async_block_env$0&lt;bevy_asset::path::AssetPath&gt; &gt; &gt; &gt;,tuple$&lt;&gt;,async_executor::impl$5::schedule::closure_env$0,tuple$&lt;&gt; &gt;::drop_ref&lt;async_executor::AsyncCallOnDrop&lt;enum2$&lt;bevy_asset::server::impl$0::reload::async_block_env$0&lt;bevy_asset::path::AssetPath&gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;tuple$&lt;&gt;,enum2$&lt;bevy_asset::server::impl$0::reload::async_block_env$0&lt;bevy_asset::path::AssetPath&gt; &gt; &gt; &gt;,tuple$&lt;&gt;,async_executor::impl$5::schedule::closure_env$0,tuple$&lt;&gt; &gt;(tuple$ (24 samples, 0.01%)</title><rect x="2.5806%" y="629" width="0.0139%" height="15" fill="rgb(228,106,3)" fg:x="4457" fg:w="24"/><text x="2.8306%" y="639.50"></text></g><g><title>boids.exe`async_task::raw::RawTask&lt;async_executor::AsyncCallOnDrop&lt;enum2$&lt;bevy_asset::server::impl$0::reload::async_block_env$0&lt;bevy_asset::path::AssetPath&gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;tuple$&lt;&gt;,enum2$&lt;bevy_asset::server::impl$0::reload::async_block_env$0&lt;bevy_asset::path::AssetPath&gt; &gt; &gt; &gt;,tuple$&lt;&gt;,async_executor::impl$5::schedule::closure_env$0,tuple$&lt;&gt; &gt;::destroy(tuple$ (24 samples, 0.01%)</title><rect x="2.5806%" y="613" width="0.0139%" height="15" fill="rgb(209,23,37)" fg:x="4457" fg:w="24"/><text x="2.8306%" y="623.50"></text></g><g><title>boids.exe`alloc::alloc::dealloc (24 samples, 0.01%)</title><rect x="2.5806%" y="597" width="0.0139%" height="15" fill="rgb(241,93,50)" fg:x="4457" fg:w="24"/><text x="2.8306%" y="607.50"></text></g><g><title>`0x7FF853C6972E (24 samples, 0.01%)</title><rect x="2.5806%" y="581" width="0.0139%" height="15" fill="rgb(253,46,43)" fg:x="4457" fg:w="24"/><text x="2.8306%" y="591.50"></text></g><g><title>`0x7FF853BD5B9C (24 samples, 0.01%)</title><rect x="2.5806%" y="565" width="0.0139%" height="15" fill="rgb(226,206,43)" fg:x="4457" fg:w="24"/><text x="2.8306%" y="575.50"></text></g><g><title>`0x7FF89B515964 (24 samples, 0.01%)</title><rect x="2.5806%" y="549" width="0.0139%" height="15" fill="rgb(217,54,7)" fg:x="4457" fg:w="24"/><text x="2.8306%" y="559.50"></text></g><g><title>boids.exe`bevy_asset::id::_::impl$4::try_apply&lt;bevy_asset::folder::LoadedFolder&gt;(enum2$&lt;bevy_asset::id::AssetId&lt;bevy_asset::folder::LoadedFolder&gt; &gt;*, ref$&lt;dyn$ (58 samples, 0.03%)</title><rect x="2.5800%" y="789" width="0.0336%" height="15" fill="rgb(223,5,52)" fg:x="4456" fg:w="58"/><text x="2.8300%" y="799.50"></text></g><g><title>boids.exe`enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt;::unwrap(enum2$&lt;core::option::Option&lt;ref$ (57 samples, 0.03%)</title><rect x="2.5806%" y="773" width="0.0330%" height="15" fill="rgb(206,52,46)" fg:x="4457" fg:w="57"/><text x="2.8306%" y="783.50"></text></g><g><title>boids.exe`Unknown (57 samples, 0.03%)</title><rect x="2.5806%" y="757" width="0.0330%" height="15" fill="rgb(253,136,11)" fg:x="4457" fg:w="57"/><text x="2.8306%" y="767.50"></text></g><g><title>boids.exe`bevy_asset::server::impl$0::load_internal::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (57 samples, 0.03%)</title><rect x="2.5806%" y="741" width="0.0330%" height="15" fill="rgb(208,106,33)" fg:x="4457" fg:w="57"/><text x="2.8306%" y="751.50"></text></g><g><title>boids.exe`bevy_asset::server::impl$0::get_meta_loader_and_reader::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (57 samples, 0.03%)</title><rect x="2.5806%" y="725" width="0.0330%" height="15" fill="rgb(206,54,4)" fg:x="4457" fg:w="57"/><text x="2.8306%" y="735.50"></text></g><g><title>boids.exe`enum2$&lt;core::result::Result&lt;alloc::sync::Arc&lt;dyn$&lt;bevy_asset::loader::ErasedAssetLoader&gt;,alloc::alloc::Global&gt;,enum2$&lt;bevy_asset::server::loaders::GetLoaderError&gt; &gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;alloc::sync::Arc&lt;dyn$&lt;bevy_asset::loader::ErasedAssetLoader&gt;,alloc::alloc::Global&gt;,enum2$ (57 samples, 0.03%)</title><rect x="2.5806%" y="709" width="0.0330%" height="15" fill="rgb(213,3,15)" fg:x="4457" fg:w="57"/><text x="2.8306%" y="719.50"></text></g><g><title>boids.exe`bevy_asset::server::impl$0::get_meta_loader_and_reader::async_fn$0::closure$5(bevy_asset::server::impl$0::get_meta_loader_and_reader::async_fn$0::closure_env$5, enum2$ (57 samples, 0.03%)</title><rect x="2.5806%" y="693" width="0.0330%" height="15" fill="rgb(252,211,39)" fg:x="4457" fg:w="57"/><text x="2.8306%" y="703.50"></text></g><g><title>boids.exe`bevy_asset::server::impl$0::get_meta_loader_and_reader::async_fn$0::closure$4 (57 samples, 0.03%)</title><rect x="2.5806%" y="677" width="0.0330%" height="15" fill="rgb(223,6,36)" fg:x="4457" fg:w="57"/><text x="2.8306%" y="687.50"></text></g><g><title>boids.exe`alloc::string::impl$34::to_string (57 samples, 0.03%)</title><rect x="2.5806%" y="661" width="0.0330%" height="15" fill="rgb(252,169,45)" fg:x="4457" fg:w="57"/><text x="2.8306%" y="671.50"></text></g><g><title>boids.exe`alloc::string::impl$35::spec_to_string (57 samples, 0.03%)</title><rect x="2.5806%" y="645" width="0.0330%" height="15" fill="rgb(212,48,26)" fg:x="4457" fg:w="57"/><text x="2.8306%" y="655.50"></text></g><g><title>boids.exe`async_task::raw::RawTask&lt;enum2$&lt;blocking::unblock::async_block_env$0&lt;enum2$&lt;core::result::Result&lt;std::fs::File,std::io::error::Error&gt; &gt;,async_fs::impl$6::create::async_fn$0::closure_env$0&lt;std::path::PathBuf&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;std::fs::File,std::io::error::Error&gt; &gt;,blocking::impl$1::spawn::closure_env$1&lt;enum2$&lt;core::result::Result&lt;std::fs::File,std::io::error::Error&gt; &gt;,enum2$&lt;blocking::unblock::async_block_env$0&lt;enum2$&lt;core::result::Result&lt;std::fs::File,std::io::error::Error&gt; &gt;,async_fs::impl$6::create::async_fn$0::closure_env$0&lt;std::path::PathBuf&gt; &gt; &gt; &gt;,tuple$&lt;&gt; &gt;::drop_ref&lt;enum2$&lt;blocking::unblock::async_block_env$0&lt;enum2$&lt;core::result::Result&lt;std::fs::File,std::io::error::Error&gt; &gt;,async_fs::impl$6::create::async_fn$0::closure_env$0&lt;std::path::PathBuf&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;std::fs::File,std::io::error::Error&gt; &gt;,blocking::impl$1::spawn::closure_env$1&lt;enum2$&lt;core::result::Result&lt;std::fs::File,std::io::error::Error&gt; &gt;,enum2$&lt;blocking::unblock::async_block_env$0&lt;enum2$&lt;core::result::Result&lt;std::fs::File,std::io::error::Error&gt; &gt;,async_fs::impl$6::create::async_fn$0::closure_env$0&lt;std::path::PathBuf&gt; &gt; &gt; &gt;,tuple$&lt;&gt; &gt;(tuple$ (27 samples, 0.02%)</title><rect x="2.5980%" y="629" width="0.0156%" height="15" fill="rgb(251,102,48)" fg:x="4487" fg:w="27"/><text x="2.8480%" y="639.50"></text></g><g><title>boids.exe`async_task::raw::RawTask&lt;enum2$&lt;blocking::unblock::async_block_env$0&lt;enum2$&lt;core::result::Result&lt;std::fs::File,std::io::error::Error&gt; &gt;,async_fs::impl$6::create::async_fn$0::closure_env$0&lt;std::path::PathBuf&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;std::fs::File,std::io::error::Error&gt; &gt;,blocking::impl$1::spawn::closure_env$1&lt;enum2$&lt;core::result::Result&lt;std::fs::File,std::io::error::Error&gt; &gt;,enum2$&lt;blocking::unblock::async_block_env$0&lt;enum2$&lt;core::result::Result&lt;std::fs::File,std::io::error::Error&gt; &gt;,async_fs::impl$6::create::async_fn$0::closure_env$0&lt;std::path::PathBuf&gt; &gt; &gt; &gt;,tuple$&lt;&gt; &gt;::destroy(tuple$ (27 samples, 0.02%)</title><rect x="2.5980%" y="613" width="0.0156%" height="15" fill="rgb(243,208,16)" fg:x="4487" fg:w="27"/><text x="2.8480%" y="623.50"></text></g><g><title>boids.exe`async_task::utils::abort_on_panic(async_task::raw::impl$3::destroy::closure_env$0&lt;enum2$&lt;blocking::unblock::async_block_env$0&lt;enum2$&lt;core::result::Result&lt;std::fs::File,std::io::error::Error&gt; &gt;,async_fs::impl$6::create::async_fn$0::closure_env$0&lt;std::path::PathBuf&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;std::fs::File,std::io::error::Error&gt; &gt;,blocking::impl$1::spawn::closure_env$1&lt;enum2$&lt;core::result::Result&lt;std::fs::File,std::io::error::Error&gt; &gt;,enum2$&lt;blocking::unblock::async_block_env$0&lt;enum2$&lt;core::result::Result&lt;std::fs::File,std::io::error::Error&gt; &gt;,async_fs::impl$6::create::async_fn$0::closure_env$0&lt;std::path::PathBuf&gt; &gt; &gt; &gt;,tuple$ (27 samples, 0.02%)</title><rect x="2.5980%" y="597" width="0.0156%" height="15" fill="rgb(219,96,24)" fg:x="4487" fg:w="27"/><text x="2.8480%" y="607.50"></text></g><g><title>boids.exe`async_task::raw::impl$3::destroy::closure$0(async_task::raw::impl$3::destroy::closure_env$0&lt;enum2$&lt;blocking::unblock::async_block_env$0&lt;enum2$&lt;core::result::Result&lt;std::fs::File,std::io::error::Error&gt; &gt;,async_fs::impl$6::create::async_fn$0::closure_env$0&lt;std::path::PathBuf&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;std::fs::File,std::io::error::Error&gt; &gt;,blocking::impl$1::spawn::closure_env$1&lt;enum2$&lt;core::result::Result&lt;std::fs::File,std::io::error::Error&gt; &gt;,enum2$&lt;blocking::unblock::async_block_env$0&lt;enum2$&lt;core::result::Result&lt;std::fs::File,std::io::error::Error&gt; &gt;,async_fs::impl$6::create::async_fn$0::closure_env$0&lt;std::path::PathBuf&gt; &gt; &gt; &gt;,tuple$ (27 samples, 0.02%)</title><rect x="2.5980%" y="581" width="0.0156%" height="15" fill="rgb(219,33,29)" fg:x="4487" fg:w="27"/><text x="2.8480%" y="591.50"></text></g><g><title>boids.exe`core::ptr::mut_ptr::impl$0::drop_in_place(async_task::header::Header&lt;tuple$ (27 samples, 0.02%)</title><rect x="2.5980%" y="565" width="0.0156%" height="15" fill="rgb(223,176,5)" fg:x="4487" fg:w="27"/><text x="2.8480%" y="575.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(async_task::header::Header&lt;tuple$ (27 samples, 0.02%)</title><rect x="2.5980%" y="549" width="0.0156%" height="15" fill="rgb(228,140,14)" fg:x="4487" fg:w="27"/><text x="2.8480%" y="559.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(core::cell::UnsafeCell&lt;enum2$&lt;core::option::Option (27 samples, 0.02%)</title><rect x="2.5980%" y="533" width="0.0156%" height="15" fill="rgb(217,179,31)" fg:x="4487" fg:w="27"/><text x="2.8480%" y="543.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(enum2$&lt;core::option::Option (27 samples, 0.02%)</title><rect x="2.5980%" y="517" width="0.0156%" height="15" fill="rgb(230,9,30)" fg:x="4487" fg:w="27"/><text x="2.8480%" y="527.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place (27 samples, 0.02%)</title><rect x="2.5980%" y="501" width="0.0156%" height="15" fill="rgb(230,136,20)" fg:x="4487" fg:w="27"/><text x="2.8480%" y="511.50"></text></g><g><title>boids.exe`core::task::wake::impl$10::drop (27 samples, 0.02%)</title><rect x="2.5980%" y="485" width="0.0156%" height="15" fill="rgb(215,210,22)" fg:x="4487" fg:w="27"/><text x="2.8480%" y="495.50"></text></g><g><title>boids.exe`async_task::raw::RawTask&lt;async_executor::AsyncCallOnDrop&lt;enum2$&lt;bevy_asset::server::impl$0::load_folder_internal::async_block_env$0&gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;tuple$&lt;&gt;,enum2$&lt;bevy_asset::server::impl$0::load_folder_internal::async_block_env$0&gt; &gt; &gt;,tuple$&lt;&gt;,async_executor::impl$5::schedule::closure_env$0,tuple$&lt;&gt; &gt;::run&lt;async_executor::AsyncCallOnDrop&lt;enum2$&lt;bevy_asset::server::impl$0::load_folder_internal::async_block_env$0&gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;tuple$&lt;&gt;,enum2$&lt;bevy_asset::server::impl$0::load_folder_internal::async_block_env$0&gt; &gt; &gt;,tuple$&lt;&gt;,async_executor::impl$5::schedule::closure_env$0,tuple$&lt;&gt; &gt;(tuple$ (27 samples, 0.02%)</title><rect x="2.5980%" y="469" width="0.0156%" height="15" fill="rgb(218,43,5)" fg:x="4487" fg:w="27"/><text x="2.8480%" y="479.50"></text></g><g><title>boids.exe`bevy_asset::path::impl$18::clone (60 samples, 0.03%)</title><rect x="2.5795%" y="805" width="0.0347%" height="15" fill="rgb(216,11,5)" fg:x="4455" fg:w="60"/><text x="2.8295%" y="815.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::try_resource_scope (61 samples, 0.04%)</title><rect x="2.5795%" y="837" width="0.0353%" height="15" fill="rgb(209,82,29)" fg:x="4455" fg:w="61"/><text x="2.8295%" y="847.50"></text></g><g><title>boids.exe`bevy_asset::server::handle_internal_asset_events::closure$0(bevy_asset::server::handle_internal_asset_events::closure_env$0, bevy_ecs::world::World*, bevy_ecs::change_detection::Mut (61 samples, 0.04%)</title><rect x="2.5795%" y="821" width="0.0353%" height="15" fill="rgb(244,115,12)" fg:x="4455" fg:w="61"/><text x="2.8295%" y="831.50"></text></g><g><title>boids.exe`bevy_render::render_resource::texture::SurfaceTexture::present (78 samples, 0.05%)</title><rect x="2.5702%" y="1445" width="0.0452%" height="15" fill="rgb(222,82,18)" fg:x="4439" fg:w="78"/><text x="2.8202%" y="1455.50"></text></g><g><title>boids.exe`wgpu::api::surface_texture::SurfaceTexture::present (78 samples, 0.05%)</title><rect x="2.5702%" y="1429" width="0.0452%" height="15" fill="rgb(249,227,8)" fg:x="4439" fg:w="78"/><text x="2.8202%" y="1439.50"></text></g><g><title>boids.exe`wgpu::backend::wgpu_core::impl$57::present (78 samples, 0.05%)</title><rect x="2.5702%" y="1413" width="0.0452%" height="15" fill="rgb(253,141,45)" fg:x="4439" fg:w="78"/><text x="2.8202%" y="1423.50"></text></g><g><title>boids.exe`wgpu_core::global::Global::surface_present(wgpu_core::id::Id&lt;enum2$ (78 samples, 0.05%)</title><rect x="2.5702%" y="1397" width="0.0452%" height="15" fill="rgb(234,184,4)" fg:x="4439" fg:w="78"/><text x="2.8202%" y="1407.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(alloc::sync::Arc (78 samples, 0.05%)</title><rect x="2.5702%" y="1381" width="0.0452%" height="15" fill="rgb(218,194,23)" fg:x="4439" fg:w="78"/><text x="2.8202%" y="1391.50"></text></g><g><title>boids.exe`alloc::sync::impl$38::drop(alloc::sync::Arc (78 samples, 0.05%)</title><rect x="2.5702%" y="1365" width="0.0452%" height="15" fill="rgb(235,66,41)" fg:x="4439" fg:w="78"/><text x="2.8202%" y="1375.50"></text></g><g><title>boids.exe`core::sync::atomic::AtomicUsize::fetch_sub (78 samples, 0.05%)</title><rect x="2.5702%" y="1349" width="0.0452%" height="15" fill="rgb(245,217,1)" fg:x="4439" fg:w="78"/><text x="2.8202%" y="1359.50"></text></g><g><title>boids.exe`core::sync::atomic::atomic_sub (78 samples, 0.05%)</title><rect x="2.5702%" y="1333" width="0.0452%" height="15" fill="rgb(229,91,1)" fg:x="4439" fg:w="78"/><text x="2.8202%" y="1343.50"></text></g><g><title>boids.exe`wgpu_core::instance::Surface::present (78 samples, 0.05%)</title><rect x="2.5702%" y="1317" width="0.0452%" height="15" fill="rgb(207,101,30)" fg:x="4439" fg:w="78"/><text x="2.8202%" y="1327.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place (78 samples, 0.05%)</title><rect x="2.5702%" y="1301" width="0.0452%" height="15" fill="rgb(223,82,49)" fg:x="4439" fg:w="78"/><text x="2.8202%" y="1311.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(wgpu_core::lock::vanilla::RwLockWriteGuard&lt;tuple$ (78 samples, 0.05%)</title><rect x="2.5702%" y="1285" width="0.0452%" height="15" fill="rgb(218,167,17)" fg:x="4439" fg:w="78"/><text x="2.8202%" y="1295.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(lock_api::rwlock::RwLockWriteGuard&lt;parking_lot::raw_rwlock::RawRwLock,tuple$ (78 samples, 0.05%)</title><rect x="2.5702%" y="1269" width="0.0452%" height="15" fill="rgb(208,103,14)" fg:x="4439" fg:w="78"/><text x="2.8202%" y="1279.50"></text></g><g><title>boids.exe`lock_api::rwlock::impl$34::drop(lock_api::rwlock::RwLockWriteGuard&lt;parking_lot::raw_rwlock::RawRwLock,tuple$ (78 samples, 0.05%)</title><rect x="2.5702%" y="1253" width="0.0452%" height="15" fill="rgb(238,20,8)" fg:x="4439" fg:w="78"/><text x="2.8202%" y="1263.50"></text></g><g><title>boids.exe`parking_lot::raw_rwlock::impl$0::unlock_exclusive (78 samples, 0.05%)</title><rect x="2.5702%" y="1237" width="0.0452%" height="15" fill="rgb(218,80,54)" fg:x="4439" fg:w="78"/><text x="2.8202%" y="1247.50"></text></g><g><title>boids.exe`core::sync::atomic::AtomicUsize::compare_exchange (78 samples, 0.05%)</title><rect x="2.5702%" y="1221" width="0.0452%" height="15" fill="rgb(240,144,17)" fg:x="4439" fg:w="78"/><text x="2.8202%" y="1231.50"></text></g><g><title>boids.exe`core::sync::atomic::atomic_compare_exchange (78 samples, 0.05%)</title><rect x="2.5702%" y="1205" width="0.0452%" height="15" fill="rgb(245,27,50)" fg:x="4439" fg:w="78"/><text x="2.8202%" y="1215.50"></text></g><g><title>boids.exe`wgpu_hal::dynamic::queue::impl$0::present&lt;wgpu_hal::vulkan::Queue&gt;(wgpu_hal::vulkan::Queue*, ref$&lt;dyn$&lt;wgpu_hal::dynamic::surface::DynSurface&gt; &gt;, alloc::boxed::Box&lt;dyn$ (78 samples, 0.05%)</title><rect x="2.5702%" y="1189" width="0.0452%" height="15" fill="rgb(251,51,7)" fg:x="4439" fg:w="78"/><text x="2.8202%" y="1199.50"></text></g><g><title>boids.exe`wgpu_hal::vulkan::impl$34::present (77 samples, 0.04%)</title><rect x="2.5708%" y="1173" width="0.0446%" height="15" fill="rgb(245,217,29)" fg:x="4440" fg:w="77"/><text x="2.8208%" y="1183.50"></text></g><g><title>boids.exe`ash::extensions_generated::khr::swapchain::Device::queue_present (77 samples, 0.04%)</title><rect x="2.5708%" y="1157" width="0.0446%" height="15" fill="rgb(221,176,29)" fg:x="4440" fg:w="77"/><text x="2.8208%" y="1167.50"></text></g><g><title>`0x7FF817196A1C (69 samples, 0.04%)</title><rect x="2.5754%" y="1141" width="0.0400%" height="15" fill="rgb(212,180,24)" fg:x="4448" fg:w="69"/><text x="2.8254%" y="1151.50"></text></g><g><title>`0x7FF8172A8E3D (69 samples, 0.04%)</title><rect x="2.5754%" y="1125" width="0.0400%" height="15" fill="rgb(254,24,2)" fg:x="4448" fg:w="69"/><text x="2.8254%" y="1135.50"></text></g><g><title>`0x7FF81746A4A0 (68 samples, 0.04%)</title><rect x="2.5760%" y="1109" width="0.0394%" height="15" fill="rgb(230,100,2)" fg:x="4449" fg:w="68"/><text x="2.8260%" y="1119.50"></text></g><g><title>`0x7FF817469065 (64 samples, 0.04%)</title><rect x="2.5783%" y="1093" width="0.0371%" height="15" fill="rgb(219,142,25)" fg:x="4453" fg:w="64"/><text x="2.8283%" y="1103.50"></text></g><g><title>boids.exe`bevy_asset::server::impl$0::load_internal::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (64 samples, 0.04%)</title><rect x="2.5783%" y="1077" width="0.0371%" height="15" fill="rgb(240,73,43)" fg:x="4453" fg:w="64"/><text x="2.8283%" y="1087.50"></text></g><g><title>boids.exe`bevy_platform::collections::hash_map::HashMap&lt;enum2$&lt;atomicow::CowArc&lt;str$&gt; &gt;,bevy_asset::loader::LabeledAsset,bevy_platform::hash::FixedHasher&gt;::get(enum2$&lt;atomicow::CowArc (64 samples, 0.04%)</title><rect x="2.5783%" y="1061" width="0.0371%" height="15" fill="rgb(214,114,15)" fg:x="4453" fg:w="64"/><text x="2.8283%" y="1071.50"></text></g><g><title>boids.exe`hashbrown::map::HashMap&lt;enum2$&lt;atomicow::CowArc&lt;str$&gt; &gt;,bevy_asset::loader::LabeledAsset,bevy_platform::hash::FixedHasher,hashbrown::raw::alloc::inner::Global&gt;::get(enum2$&lt;atomicow::CowArc (64 samples, 0.04%)</title><rect x="2.5783%" y="1045" width="0.0371%" height="15" fill="rgb(207,130,4)" fg:x="4453" fg:w="64"/><text x="2.8283%" y="1055.50"></text></g><g><title>boids.exe`hashbrown::map::HashMap&lt;enum2$&lt;atomicow::CowArc&lt;str$&gt; &gt;,bevy_asset::loader::LabeledAsset,bevy_platform::hash::FixedHasher,hashbrown::raw::alloc::inner::Global&gt;::get_inner(enum2$&lt;atomicow::CowArc (64 samples, 0.04%)</title><rect x="2.5783%" y="1029" width="0.0371%" height="15" fill="rgb(221,25,40)" fg:x="4453" fg:w="64"/><text x="2.8283%" y="1039.50"></text></g><g><title>boids.exe`hashbrown::raw::RawTable&lt;tuple$&lt;enum2$&lt;atomicow::CowArc&lt;str$&gt; &gt;,bevy_asset::loader::LabeledAsset&gt;,hashbrown::raw::alloc::inner::Global&gt;::get(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;enum2$&lt;atomicow::CowArc&lt;str$&gt; &gt;,enum2$&lt;atomicow::CowArc (63 samples, 0.04%)</title><rect x="2.5789%" y="1013" width="0.0365%" height="15" fill="rgb(241,184,7)" fg:x="4454" fg:w="63"/><text x="2.8289%" y="1023.50"></text></g><g><title>boids.exe`hashbrown::raw::RawTable&lt;tuple$&lt;enum2$&lt;atomicow::CowArc&lt;str$&gt; &gt;,bevy_asset::loader::LabeledAsset&gt;,hashbrown::raw::alloc::inner::Global&gt;::find(unsigned long long, hashbrown::map::equivalent_key::closure_env$0&lt;enum2$&lt;atomicow::CowArc&lt;str$&gt; &gt;,enum2$&lt;atomicow::CowArc (63 samples, 0.04%)</title><rect x="2.5789%" y="997" width="0.0365%" height="15" fill="rgb(235,159,4)" fg:x="4454" fg:w="63"/><text x="2.8289%" y="1007.50"></text></g><g><title>boids.exe`hashbrown::raw::RawTableInner::find_inner(unsigned long long, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;usize&gt;,assoc$ (63 samples, 0.04%)</title><rect x="2.5789%" y="981" width="0.0365%" height="15" fill="rgb(214,87,48)" fg:x="4454" fg:w="63"/><text x="2.8289%" y="991.50"></text></g><g><title>boids.exe`hashbrown::raw::RawTableInner::probe_seq (63 samples, 0.04%)</title><rect x="2.5789%" y="965" width="0.0365%" height="15" fill="rgb(246,198,24)" fg:x="4454" fg:w="63"/><text x="2.8289%" y="975.50"></text></g><g><title>boids.exe`bevy_asset::server::AssetServer::register_handle_provider (63 samples, 0.04%)</title><rect x="2.5789%" y="949" width="0.0365%" height="15" fill="rgb(209,66,40)" fg:x="4454" fg:w="63"/><text x="2.8289%" y="959.50"></text></g><g><title>boids.exe`alloc::sync::impl$30::deref(alloc::sync::Arc (63 samples, 0.04%)</title><rect x="2.5789%" y="933" width="0.0365%" height="15" fill="rgb(233,147,39)" fg:x="4454" fg:w="63"/><text x="2.8289%" y="943.50"></text></g><g><title>boids.exe`parking_lot::raw_rwlock::impl$0::lock_exclusive (63 samples, 0.04%)</title><rect x="2.5789%" y="917" width="0.0365%" height="15" fill="rgb(231,145,52)" fg:x="4454" fg:w="63"/><text x="2.8289%" y="927.50"></text></g><g><title>boids.exe`core::sync::atomic::AtomicUsize::compare_exchange_weak (63 samples, 0.04%)</title><rect x="2.5789%" y="901" width="0.0365%" height="15" fill="rgb(206,20,26)" fg:x="4454" fg:w="63"/><text x="2.8289%" y="911.50"></text></g><g><title>boids.exe`core::sync::atomic::atomic_compare_exchange_weak (63 samples, 0.04%)</title><rect x="2.5789%" y="885" width="0.0365%" height="15" fill="rgb(238,220,4)" fg:x="4454" fg:w="63"/><text x="2.8289%" y="895.50"></text></g><g><title>boids.exe`bevy_asset::server::handle_internal_asset_events (62 samples, 0.04%)</title><rect x="2.5795%" y="869" width="0.0359%" height="15" fill="rgb(252,195,42)" fg:x="4455" fg:w="62"/><text x="2.8295%" y="879.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::resource_scope (62 samples, 0.04%)</title><rect x="2.5795%" y="853" width="0.0359%" height="15" fill="rgb(209,10,6)" fg:x="4455" fg:w="62"/><text x="2.8295%" y="863.50"></text></g><g><title>boids.exe`core::ops::function::FnOnce::call_once&lt;bevy_core_pipeline::core_2d::main_opaque_pass_2d_node::impl$0::run::closure_env$0,tuple$&lt;bevy_render::renderer::render_device::RenderDevice&gt; &gt; (35 samples, 0.02%)</title><rect x="2.6154%" y="1237" width="0.0203%" height="15" fill="rgb(229,3,52)" fg:x="4517" fg:w="35"/><text x="2.8654%" y="1247.50"></text></g><g><title>boids.exe`bevy_core_pipeline::core_2d::main_opaque_pass_2d_node::impl$0::run::closure$0 (35 samples, 0.02%)</title><rect x="2.6154%" y="1221" width="0.0203%" height="15" fill="rgb(253,49,37)" fg:x="4517" fg:w="35"/><text x="2.8654%" y="1231.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place&lt;bevy_render::render_phase::draw_state::TrackedRenderPass&gt; (35 samples, 0.02%)</title><rect x="2.6154%" y="1205" width="0.0203%" height="15" fill="rgb(240,103,49)" fg:x="4517" fg:w="35"/><text x="2.8654%" y="1215.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place (35 samples, 0.02%)</title><rect x="2.6154%" y="1189" width="0.0203%" height="15" fill="rgb(250,182,30)" fg:x="4517" fg:w="35"/><text x="2.8654%" y="1199.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;tuple$&lt;enum2$&lt;core::option::Option&lt;bevy_render::render_resource::bind_group::BindGroupId&gt; &gt;,alloc::vec::Vec (35 samples, 0.02%)</title><rect x="2.6154%" y="1173" width="0.0203%" height="15" fill="rgb(248,8,30)" fg:x="4517" fg:w="35"/><text x="2.8654%" y="1183.50"></text></g><g><title>boids.exe`alloc::vec::impl$25::drop(alloc::vec::Vec&lt;tuple$&lt;enum2$&lt;core::option::Option&lt;bevy_render::render_resource::bind_group::BindGroupId&gt; &gt;,alloc::vec::Vec (35 samples, 0.02%)</title><rect x="2.6154%" y="1157" width="0.0203%" height="15" fill="rgb(237,120,30)" fg:x="4517" fg:w="35"/><text x="2.8654%" y="1167.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place&lt;wgpu::api::render_pass::RenderPass&gt; (35 samples, 0.02%)</title><rect x="2.6154%" y="1141" width="0.0203%" height="15" fill="rgb(221,146,34)" fg:x="4517" fg:w="35"/><text x="2.8654%" y="1151.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(enum2$ (35 samples, 0.02%)</title><rect x="2.6154%" y="1125" width="0.0203%" height="15" fill="rgb(242,55,13)" fg:x="4517" fg:w="35"/><text x="2.8654%" y="1135.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place (35 samples, 0.02%)</title><rect x="2.6154%" y="1109" width="0.0203%" height="15" fill="rgb(242,112,31)" fg:x="4517" fg:w="35"/><text x="2.8654%" y="1119.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place (35 samples, 0.02%)</title><rect x="2.6154%" y="1093" width="0.0203%" height="15" fill="rgb(249,192,27)" fg:x="4517" fg:w="35"/><text x="2.8654%" y="1103.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(alloc::sync::Arc (35 samples, 0.02%)</title><rect x="2.6154%" y="1077" width="0.0203%" height="15" fill="rgb(208,204,44)" fg:x="4517" fg:w="35"/><text x="2.8654%" y="1087.50"></text></g><g><title>boids.exe`alloc::sync::impl$38::drop(alloc::sync::Arc (35 samples, 0.02%)</title><rect x="2.6154%" y="1061" width="0.0203%" height="15" fill="rgb(208,93,54)" fg:x="4517" fg:w="35"/><text x="2.8654%" y="1071.50"></text></g><g><title>boids.exe`alloc::sync::Arc&lt;wgpu_core::global::Global,alloc::alloc::Global&gt;::inner (35 samples, 0.02%)</title><rect x="2.6154%" y="1045" width="0.0203%" height="15" fill="rgb(242,1,31)" fg:x="4517" fg:w="35"/><text x="2.8654%" y="1055.50"></text></g><g><title>boids.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;wgpu_core::global::Global&gt; &gt;::as_ref (35 samples, 0.02%)</title><rect x="2.6154%" y="1029" width="0.0203%" height="15" fill="rgb(241,83,25)" fg:x="4517" fg:w="35"/><text x="2.8654%" y="1039.50"></text></g><g><title>boids.exe`wgpu::backend::wgpu_core::impl$51::end (35 samples, 0.02%)</title><rect x="2.6154%" y="1013" width="0.0203%" height="15" fill="rgb(205,169,50)" fg:x="4517" fg:w="35"/><text x="2.8654%" y="1023.50"></text></g><g><title>boids.exe`wgpu_core::global::Global::render_pass_end (35 samples, 0.02%)</title><rect x="2.6154%" y="997" width="0.0203%" height="15" fill="rgb(239,186,37)" fg:x="4517" fg:w="35"/><text x="2.8654%" y="1007.50"></text></g><g><title>boids.exe`core::ops::function::FnOnce::call_once&lt;bevy_core_pipeline::core_2d::main_transparent_pass_2d_node::impl$0::run::closure_env$0,tuple$&lt;bevy_render::renderer::render_device::RenderDevice&gt; &gt; (34 samples, 0.02%)</title><rect x="2.6356%" y="1237" width="0.0197%" height="15" fill="rgb(205,221,10)" fg:x="4552" fg:w="34"/><text x="2.8856%" y="1247.50"></text></g><g><title>boids.exe`bevy_core_pipeline::core_2d::main_transparent_pass_2d_node::impl$0::run::closure$0 (34 samples, 0.02%)</title><rect x="2.6356%" y="1221" width="0.0197%" height="15" fill="rgb(218,196,15)" fg:x="4552" fg:w="34"/><text x="2.8856%" y="1231.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place&lt;bevy_render::render_phase::draw_state::TrackedRenderPass&gt; (30 samples, 0.02%)</title><rect x="2.6379%" y="1205" width="0.0174%" height="15" fill="rgb(218,196,35)" fg:x="4556" fg:w="30"/><text x="2.8879%" y="1215.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place (30 samples, 0.02%)</title><rect x="2.6379%" y="1189" width="0.0174%" height="15" fill="rgb(233,63,24)" fg:x="4556" fg:w="30"/><text x="2.8879%" y="1199.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;tuple$&lt;enum2$&lt;core::option::Option&lt;bevy_render::render_resource::bind_group::BindGroupId&gt; &gt;,alloc::vec::Vec (30 samples, 0.02%)</title><rect x="2.6379%" y="1173" width="0.0174%" height="15" fill="rgb(225,8,4)" fg:x="4556" fg:w="30"/><text x="2.8879%" y="1183.50"></text></g><g><title>boids.exe`alloc::vec::impl$25::drop(alloc::vec::Vec&lt;tuple$&lt;enum2$&lt;core::option::Option&lt;bevy_render::render_resource::bind_group::BindGroupId&gt; &gt;,alloc::vec::Vec (30 samples, 0.02%)</title><rect x="2.6379%" y="1157" width="0.0174%" height="15" fill="rgb(234,105,35)" fg:x="4556" fg:w="30"/><text x="2.8879%" y="1167.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place&lt;wgpu::api::render_pass::RenderPass&gt; (30 samples, 0.02%)</title><rect x="2.6379%" y="1141" width="0.0174%" height="15" fill="rgb(236,21,32)" fg:x="4556" fg:w="30"/><text x="2.8879%" y="1151.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(enum2$ (30 samples, 0.02%)</title><rect x="2.6379%" y="1125" width="0.0174%" height="15" fill="rgb(228,109,6)" fg:x="4556" fg:w="30"/><text x="2.8879%" y="1135.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place (30 samples, 0.02%)</title><rect x="2.6379%" y="1109" width="0.0174%" height="15" fill="rgb(229,215,31)" fg:x="4556" fg:w="30"/><text x="2.8879%" y="1119.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place (30 samples, 0.02%)</title><rect x="2.6379%" y="1093" width="0.0174%" height="15" fill="rgb(221,52,54)" fg:x="4556" fg:w="30"/><text x="2.8879%" y="1103.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(alloc::sync::Arc (30 samples, 0.02%)</title><rect x="2.6379%" y="1077" width="0.0174%" height="15" fill="rgb(252,129,43)" fg:x="4556" fg:w="30"/><text x="2.8879%" y="1087.50"></text></g><g><title>boids.exe`alloc::sync::impl$38::drop(alloc::sync::Arc (30 samples, 0.02%)</title><rect x="2.6379%" y="1061" width="0.0174%" height="15" fill="rgb(248,183,27)" fg:x="4556" fg:w="30"/><text x="2.8879%" y="1071.50"></text></g><g><title>boids.exe`alloc::sync::Arc&lt;wgpu_core::global::Global,alloc::alloc::Global&gt;::inner (30 samples, 0.02%)</title><rect x="2.6379%" y="1045" width="0.0174%" height="15" fill="rgb(250,0,22)" fg:x="4556" fg:w="30"/><text x="2.8879%" y="1055.50"></text></g><g><title>boids.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;wgpu_core::global::Global&gt; &gt;::as_ref (30 samples, 0.02%)</title><rect x="2.6379%" y="1029" width="0.0174%" height="15" fill="rgb(213,166,10)" fg:x="4556" fg:w="30"/><text x="2.8879%" y="1039.50"></text></g><g><title>boids.exe`wgpu::backend::wgpu_core::impl$51::end (30 samples, 0.02%)</title><rect x="2.6379%" y="1013" width="0.0174%" height="15" fill="rgb(207,163,36)" fg:x="4556" fg:w="30"/><text x="2.8879%" y="1023.50"></text></g><g><title>boids.exe`wgpu_core::global::Global::render_pass_end (30 samples, 0.02%)</title><rect x="2.6379%" y="997" width="0.0174%" height="15" fill="rgb(208,122,22)" fg:x="4556" fg:w="30"/><text x="2.8879%" y="1007.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place&lt;bevy_render::render_phase::draw_state::TrackedRenderPass&gt; (21 samples, 0.01%)</title><rect x="2.6559%" y="1205" width="0.0122%" height="15" fill="rgb(207,104,49)" fg:x="4587" fg:w="21"/><text x="2.9059%" y="1215.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place (21 samples, 0.01%)</title><rect x="2.6559%" y="1189" width="0.0122%" height="15" fill="rgb(248,211,50)" fg:x="4587" fg:w="21"/><text x="2.9059%" y="1199.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(enum2$ (21 samples, 0.01%)</title><rect x="2.6559%" y="1173" width="0.0122%" height="15" fill="rgb(217,13,45)" fg:x="4587" fg:w="21"/><text x="2.9059%" y="1183.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place (21 samples, 0.01%)</title><rect x="2.6559%" y="1157" width="0.0122%" height="15" fill="rgb(211,216,49)" fg:x="4587" fg:w="21"/><text x="2.9059%" y="1167.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place (21 samples, 0.01%)</title><rect x="2.6559%" y="1141" width="0.0122%" height="15" fill="rgb(221,58,53)" fg:x="4587" fg:w="21"/><text x="2.9059%" y="1151.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(alloc::sync::Arc (21 samples, 0.01%)</title><rect x="2.6559%" y="1125" width="0.0122%" height="15" fill="rgb(220,112,41)" fg:x="4587" fg:w="21"/><text x="2.9059%" y="1135.50"></text></g><g><title>boids.exe`alloc::sync::impl$38::drop(alloc::sync::Arc (21 samples, 0.01%)</title><rect x="2.6559%" y="1109" width="0.0122%" height="15" fill="rgb(236,38,28)" fg:x="4587" fg:w="21"/><text x="2.9059%" y="1119.50"></text></g><g><title>boids.exe`alloc::sync::Arc&lt;wgpu_core::global::Global,alloc::alloc::Global&gt;::inner (21 samples, 0.01%)</title><rect x="2.6559%" y="1093" width="0.0122%" height="15" fill="rgb(227,195,22)" fg:x="4587" fg:w="21"/><text x="2.9059%" y="1103.50"></text></g><g><title>boids.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;wgpu_core::global::Global&gt; &gt;::as_ref (21 samples, 0.01%)</title><rect x="2.6559%" y="1077" width="0.0122%" height="15" fill="rgb(214,55,33)" fg:x="4587" fg:w="21"/><text x="2.9059%" y="1087.50"></text></g><g><title>boids.exe`wgpu::backend::wgpu_core::impl$51::end (21 samples, 0.01%)</title><rect x="2.6559%" y="1061" width="0.0122%" height="15" fill="rgb(248,80,13)" fg:x="4587" fg:w="21"/><text x="2.9059%" y="1071.50"></text></g><g><title>boids.exe`wgpu_core::global::Global::render_pass_end (21 samples, 0.01%)</title><rect x="2.6559%" y="1045" width="0.0122%" height="15" fill="rgb(238,52,6)" fg:x="4587" fg:w="21"/><text x="2.9059%" y="1055.50"></text></g><g><title>boids.exe`bevy_render::renderer::RenderContext::finish (92 samples, 0.05%)</title><rect x="2.6154%" y="1429" width="0.0533%" height="15" fill="rgb(224,198,47)" fg:x="4517" fg:w="92"/><text x="2.8654%" y="1439.50"></text></g><g><title>boids.exe`alloc::vec::Vec&lt;tuple$&lt;usize,wgpu::api::command_buffer::CommandBuffer&gt;,alloc::alloc::Global&gt;::append(alloc::vec::Vec&lt;tuple$ (92 samples, 0.05%)</title><rect x="2.6154%" y="1413" width="0.0533%" height="15" fill="rgb(233,171,20)" fg:x="4517" fg:w="92"/><text x="2.8654%" y="1423.50"></text></g><g><title>boids.exe`alloc::vec::Vec&lt;tuple$&lt;usize,wgpu::api::command_buffer::CommandBuffer&gt;,alloc::alloc::Global&gt;::as_slice (92 samples, 0.05%)</title><rect x="2.6154%" y="1397" width="0.0533%" height="15" fill="rgb(241,30,25)" fg:x="4517" fg:w="92"/><text x="2.8654%" y="1407.50"></text></g><g><title>boids.exe`alloc::vec::Vec&lt;tuple$&lt;usize,wgpu::api::command_buffer::CommandBuffer&gt;,alloc::alloc::Global&gt;::as_ptr (92 samples, 0.05%)</title><rect x="2.6154%" y="1381" width="0.0533%" height="15" fill="rgb(207,171,38)" fg:x="4517" fg:w="92"/><text x="2.8654%" y="1391.50"></text></g><g><title>boids.exe`alloc::raw_vec::RawVec&lt;tuple$&lt;usize,wgpu::api::command_buffer::CommandBuffer&gt;,alloc::alloc::Global&gt;::ptr (92 samples, 0.05%)</title><rect x="2.6154%" y="1365" width="0.0533%" height="15" fill="rgb(234,70,1)" fg:x="4517" fg:w="92"/><text x="2.8654%" y="1375.50"></text></g><g><title>boids.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (92 samples, 0.05%)</title><rect x="2.6154%" y="1349" width="0.0533%" height="15" fill="rgb(232,178,18)" fg:x="4517" fg:w="92"/><text x="2.8654%" y="1359.50"></text></g><g><title>boids.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (92 samples, 0.05%)</title><rect x="2.6154%" y="1333" width="0.0533%" height="15" fill="rgb(241,78,40)" fg:x="4517" fg:w="92"/><text x="2.8654%" y="1343.50"></text></g><g><title>boids.exe`std::thread::local::LocalKey&lt;alloc::sync::Arc&lt;bevy_tasks::thread_executor::ThreadExecutor,alloc::alloc::Global&gt; &gt;::with&lt;alloc::sync::Arc&lt;bevy_tasks::thread_executor::ThreadExecutor,alloc::alloc::Global&gt;,bevy_tasks::task_pool::impl$2::scope::closure_env$0&lt;bevy_render::renderer::impl$1::finish::closure_env$0,tuple$&lt;usize,wgpu::api::command_buffer::CommandBuffer&gt; &gt;,alloc::vec::Vec&lt;tuple$&lt;usize,wgpu::api::command_buffer::CommandBuffer&gt;,alloc::alloc::Global&gt; &gt;(bevy_tasks::task_pool::impl$2::scope::closure_env$0&lt;bevy_render::renderer::impl$1::finish::closure_env$0,tuple$ (92 samples, 0.05%)</title><rect x="2.6154%" y="1317" width="0.0533%" height="15" fill="rgb(222,35,25)" fg:x="4517" fg:w="92"/><text x="2.8654%" y="1327.50"></text></g><g><title>boids.exe`std::thread::local::LocalKey&lt;alloc::sync::Arc&lt;bevy_tasks::thread_executor::ThreadExecutor,alloc::alloc::Global&gt; &gt;::try_with(bevy_tasks::task_pool::impl$2::scope::closure_env$0&lt;bevy_render::renderer::impl$1::finish::closure_env$0,tuple$ (92 samples, 0.05%)</title><rect x="2.6154%" y="1301" width="0.0533%" height="15" fill="rgb(207,92,16)" fg:x="4517" fg:w="92"/><text x="2.8654%" y="1311.50"></text></g><g><title>boids.exe`bevy_tasks::task_pool::TaskPool::scope_with_executor_inner&lt;bevy_render::renderer::impl$1::finish::closure_env$0,tuple$&lt;usize,wgpu::api::command_buffer::CommandBuffer&gt; &gt; (92 samples, 0.05%)</title><rect x="2.6154%" y="1285" width="0.0533%" height="15" fill="rgb(216,59,51)" fg:x="4517" fg:w="92"/><text x="2.8654%" y="1295.50"></text></g><g><title>boids.exe`bevy_render::renderer::impl$1::finish::closure$0(bevy_render::renderer::impl$1::finish::closure_env$0, bevy_tasks::task_pool::Scope&lt;tuple$ (92 samples, 0.05%)</title><rect x="2.6154%" y="1269" width="0.0533%" height="15" fill="rgb(213,80,28)" fg:x="4517" fg:w="92"/><text x="2.8654%" y="1279.50"></text></g><g><title>boids.exe`alloc::boxed::impl$28::call_once(alloc::boxed::Box&lt;dyn$&lt;core::ops::function::FnOnce&lt;tuple$&lt;bevy_render::renderer::render_device::RenderDevice&gt;,assoc$ (92 samples, 0.05%)</title><rect x="2.6154%" y="1253" width="0.0533%" height="15" fill="rgb(220,93,7)" fg:x="4517" fg:w="92"/><text x="2.8654%" y="1263.50"></text></g><g><title>boids.exe`core::ops::function::FnOnce::call_once&lt;bevy_egui::egui_node::impl$4::run::closure_env$0,tuple$&lt;bevy_render::renderer::render_device::RenderDevice&gt; &gt; (23 samples, 0.01%)</title><rect x="2.6553%" y="1237" width="0.0133%" height="15" fill="rgb(225,24,44)" fg:x="4586" fg:w="23"/><text x="2.9053%" y="1247.50"></text></g><g><title>boids.exe`bevy_egui::egui_node::impl$4::run::closure$0 (23 samples, 0.01%)</title><rect x="2.6553%" y="1221" width="0.0133%" height="15" fill="rgb(243,74,40)" fg:x="4586" fg:w="23"/><text x="2.9053%" y="1231.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(std::sync::poison::mutex::MutexGuard&lt;enum2$&lt;core::option::Option&lt;tuple$ (31 samples, 0.02%)</title><rect x="2.6843%" y="1317" width="0.0179%" height="15" fill="rgb(228,39,7)" fg:x="4636" fg:w="31"/><text x="2.9343%" y="1327.50"></text></g><g><title>boids.exe`std::sync::poison::mutex::impl$14::drop(std::sync::poison::mutex::MutexGuard&lt;enum2$&lt;core::option::Option&lt;tuple$ (31 samples, 0.02%)</title><rect x="2.6843%" y="1301" width="0.0179%" height="15" fill="rgb(227,79,8)" fg:x="4636" fg:w="31"/><text x="2.9343%" y="1311.50"></text></g><g><title>boids.exe`std::sync::poison::Flag::done (31 samples, 0.02%)</title><rect x="2.6843%" y="1285" width="0.0179%" height="15" fill="rgb(236,58,11)" fg:x="4636" fg:w="31"/><text x="2.9343%" y="1295.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place&lt;wgpu::api::render_pass::RenderPass&gt; (31 samples, 0.02%)</title><rect x="2.6843%" y="1269" width="0.0179%" height="15" fill="rgb(249,63,35)" fg:x="4636" fg:w="31"/><text x="2.9343%" y="1279.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(enum2$ (31 samples, 0.02%)</title><rect x="2.6843%" y="1253" width="0.0179%" height="15" fill="rgb(252,114,16)" fg:x="4636" fg:w="31"/><text x="2.9343%" y="1263.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place (31 samples, 0.02%)</title><rect x="2.6843%" y="1237" width="0.0179%" height="15" fill="rgb(254,151,24)" fg:x="4636" fg:w="31"/><text x="2.9343%" y="1247.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place (31 samples, 0.02%)</title><rect x="2.6843%" y="1221" width="0.0179%" height="15" fill="rgb(253,54,39)" fg:x="4636" fg:w="31"/><text x="2.9343%" y="1231.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(alloc::sync::Arc (31 samples, 0.02%)</title><rect x="2.6843%" y="1205" width="0.0179%" height="15" fill="rgb(243,25,45)" fg:x="4636" fg:w="31"/><text x="2.9343%" y="1215.50"></text></g><g><title>boids.exe`alloc::sync::impl$38::drop(alloc::sync::Arc (31 samples, 0.02%)</title><rect x="2.6843%" y="1189" width="0.0179%" height="15" fill="rgb(234,134,9)" fg:x="4636" fg:w="31"/><text x="2.9343%" y="1199.50"></text></g><g><title>boids.exe`alloc::sync::Arc&lt;wgpu_core::global::Global,alloc::alloc::Global&gt;::inner (31 samples, 0.02%)</title><rect x="2.6843%" y="1173" width="0.0179%" height="15" fill="rgb(227,166,31)" fg:x="4636" fg:w="31"/><text x="2.9343%" y="1183.50"></text></g><g><title>boids.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;wgpu_core::global::Global&gt; &gt;::as_ref (31 samples, 0.02%)</title><rect x="2.6843%" y="1157" width="0.0179%" height="15" fill="rgb(245,143,41)" fg:x="4636" fg:w="31"/><text x="2.9343%" y="1167.50"></text></g><g><title>boids.exe`wgpu::backend::wgpu_core::impl$51::end (31 samples, 0.02%)</title><rect x="2.6843%" y="1141" width="0.0179%" height="15" fill="rgb(238,181,32)" fg:x="4636" fg:w="31"/><text x="2.9343%" y="1151.50"></text></g><g><title>boids.exe`wgpu_core::global::Global::render_pass_end (31 samples, 0.02%)</title><rect x="2.6843%" y="1125" width="0.0179%" height="15" fill="rgb(224,113,18)" fg:x="4636" fg:w="31"/><text x="2.9343%" y="1135.50"></text></g><g><title>boids.exe`bevy_core_pipeline::upscaling::node::impl$0::run(bevy_core_pipeline::upscaling::node::UpscalingNode*, bevy_render::render_graph::context::RenderGraphContext*, bevy_render::renderer::RenderContext*, tuple$&lt;ref$&lt;bevy_render::view::ViewTarget&gt;,ref$&lt;bevy_core_pipeline::upscaling::ViewUpscalingPipeline&gt;,enum2$&lt;core::option::Option&lt;ref$ (33 samples, 0.02%)</title><rect x="2.6843%" y="1333" width="0.0191%" height="15" fill="rgb(240,229,28)" fg:x="4636" fg:w="33"/><text x="2.9343%" y="1343.50"></text></g><g><title>boids.exe`bevy_render::render_graph::node::impl$8::run&lt;bevy_core_pipeline::upscaling::node::UpscalingNode&gt;(bevy_render::render_graph::node::ViewNodeRunner (34 samples, 0.02%)</title><rect x="2.6843%" y="1349" width="0.0197%" height="15" fill="rgb(250,185,3)" fg:x="4636" fg:w="34"/><text x="2.9343%" y="1359.50"></text></g><g><title>boids.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$ (70 samples, 0.04%)</title><rect x="2.6686%" y="1429" width="0.0405%" height="15" fill="rgb(212,59,25)" fg:x="4609" fg:w="70"/><text x="2.9186%" y="1439.50"></text></g><g><title>boids.exe`bevy_render::renderer::graph_runner::RenderGraphRunner::run_graph(bevy_render::render_graph::graph::RenderGraph*, enum2$&lt;core::option::Option&lt;bevy_ecs::intern::Interned&lt;dyn$&lt;bevy_render::render_graph::graph::RenderSubGraph&gt; &gt; &gt; &gt;, bevy_render::renderer::RenderContext*, bevy_ecs::world::World*, ref$&lt;slice2$&lt;enum2$&lt;bevy_render::render_graph::node_slot::SlotValue&gt; &gt; &gt;, enum2$&lt;core::option::Option (70 samples, 0.04%)</title><rect x="2.6686%" y="1413" width="0.0405%" height="15" fill="rgb(221,87,20)" fg:x="4609" fg:w="70"/><text x="2.9186%" y="1423.50"></text></g><g><title>boids.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$ (64 samples, 0.04%)</title><rect x="2.6721%" y="1397" width="0.0371%" height="15" fill="rgb(213,74,28)" fg:x="4615" fg:w="64"/><text x="2.9221%" y="1407.50"></text></g><g><title>boids.exe`bevy_render::renderer::graph_runner::RenderGraphRunner::run_graph(bevy_render::render_graph::graph::RenderGraph*, enum2$&lt;core::option::Option&lt;bevy_ecs::intern::Interned&lt;dyn$&lt;bevy_render::render_graph::graph::RenderSubGraph&gt; &gt; &gt; &gt;, bevy_render::renderer::RenderContext*, bevy_ecs::world::World*, ref$&lt;slice2$&lt;enum2$&lt;bevy_render::render_graph::node_slot::SlotValue&gt; &gt; &gt;, enum2$&lt;core::option::Option (61 samples, 0.04%)</title><rect x="2.6738%" y="1381" width="0.0353%" height="15" fill="rgb(224,132,34)" fg:x="4618" fg:w="61"/><text x="2.9238%" y="1391.50"></text></g><g><title>boids.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$ (46 samples, 0.03%)</title><rect x="2.6825%" y="1365" width="0.0266%" height="15" fill="rgb(222,101,24)" fg:x="4633" fg:w="46"/><text x="2.9325%" y="1375.50"></text></g><g><title>boids.exe`enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,wgpu_hal::DeviceError&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;tuple$ (26 samples, 0.02%)</title><rect x="2.7121%" y="1317" width="0.0151%" height="15" fill="rgb(254,142,4)" fg:x="4684" fg:w="26"/><text x="2.9621%" y="1327.50"></text></g><g><title>boids.exe`wgpu_hal::dynamic::queue::impl$0::submit&lt;wgpu_hal::vulkan::Queue&gt;(wgpu_hal::vulkan::Queue*, ref$&lt;slice2$&lt;ref$&lt;dyn$&lt;wgpu_hal::dynamic::DynCommandBuffer&gt; &gt; &gt; &gt;, ref$&lt;slice2$&lt;ref$&lt;dyn$&lt;wgpu_hal::dynamic::DynSurfaceTexture&gt; &gt; &gt; &gt;, tuple$&lt;ref_mut$&lt;dyn$ (26 samples, 0.02%)</title><rect x="2.7121%" y="1301" width="0.0151%" height="15" fill="rgb(230,229,49)" fg:x="4684" fg:w="26"/><text x="2.9621%" y="1311.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;ref$ (25 samples, 0.01%)</title><rect x="2.7126%" y="1285" width="0.0145%" height="15" fill="rgb(238,70,47)" fg:x="4685" fg:w="25"/><text x="2.9626%" y="1295.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec&lt;ref$ (25 samples, 0.01%)</title><rect x="2.7126%" y="1269" width="0.0145%" height="15" fill="rgb(231,160,17)" fg:x="4685" fg:w="25"/><text x="2.9626%" y="1279.50"></text></g><g><title>boids.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec&lt;ref$ (25 samples, 0.01%)</title><rect x="2.7126%" y="1253" width="0.0145%" height="15" fill="rgb(218,68,53)" fg:x="4685" fg:w="25"/><text x="2.9626%" y="1263.50"></text></g><g><title>boids.exe`wgpu_hal::vulkan::impl$34::submit(wgpu_hal::vulkan::Queue*, ref$&lt;slice2$&lt;ref$&lt;wgpu_hal::vulkan::CommandBuffer&gt; &gt; &gt;, ref$&lt;slice2$&lt;ref$&lt;wgpu_hal::vulkan::SurfaceTexture&gt; &gt; &gt;, tuple$&lt;ref_mut$&lt;enum2$ (25 samples, 0.01%)</title><rect x="2.7126%" y="1237" width="0.0145%" height="15" fill="rgb(236,111,10)" fg:x="4685" fg:w="25"/><text x="2.9626%" y="1247.50"></text></g><g><title>boids.exe`enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,ash::vk::enums::Result&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,ash::vk::enums::Result&gt; &gt;, wgpu_hal::DeviceError (*) (25 samples, 0.01%)</title><rect x="2.7126%" y="1221" width="0.0145%" height="15" fill="rgb(224,34,41)" fg:x="4685" fg:w="25"/><text x="2.9626%" y="1231.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(alloc::sync::Arc (33 samples, 0.02%)</title><rect x="2.7364%" y="1301" width="0.0191%" height="15" fill="rgb(241,118,19)" fg:x="4726" fg:w="33"/><text x="2.9864%" y="1311.50"></text></g><g><title>boids.exe`alloc::sync::impl$38::drop(alloc::sync::Arc (33 samples, 0.02%)</title><rect x="2.7364%" y="1285" width="0.0191%" height="15" fill="rgb(238,129,25)" fg:x="4726" fg:w="33"/><text x="2.9864%" y="1295.50"></text></g><g><title>boids.exe`alloc::sync::Arc&lt;wgpu_core::device::queue::Queue,alloc::alloc::Global&gt;::inner (33 samples, 0.02%)</title><rect x="2.7364%" y="1269" width="0.0191%" height="15" fill="rgb(238,22,31)" fg:x="4726" fg:w="33"/><text x="2.9864%" y="1279.50"></text></g><g><title>boids.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;wgpu_core::device::queue::Queue&gt; &gt;::as_ref (33 samples, 0.02%)</title><rect x="2.7364%" y="1253" width="0.0191%" height="15" fill="rgb(222,174,48)" fg:x="4726" fg:w="33"/><text x="2.9864%" y="1263.50"></text></g><g><title>boids.exe`wgpu_core::device::queue::Queue::maintain (33 samples, 0.02%)</title><rect x="2.7364%" y="1237" width="0.0191%" height="15" fill="rgb(206,152,40)" fg:x="4726" fg:w="33"/><text x="2.9864%" y="1247.50"></text></g><g><title>boids.exe`wgpu_core::device::life::LifetimeTracker::triage_submissions (33 samples, 0.02%)</title><rect x="2.7364%" y="1221" width="0.0191%" height="15" fill="rgb(218,99,54)" fg:x="4726" fg:w="33"/><text x="2.9864%" y="1231.50"></text></g><g><title>boids.exe`core::mem::drop (30 samples, 0.02%)</title><rect x="2.7381%" y="1205" width="0.0174%" height="15" fill="rgb(220,174,26)" fg:x="4729" fg:w="30"/><text x="2.9881%" y="1215.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place (30 samples, 0.02%)</title><rect x="2.7381%" y="1189" width="0.0174%" height="15" fill="rgb(245,116,9)" fg:x="4729" fg:w="30"/><text x="2.9881%" y="1199.50"></text></g><g><title>boids.exe`wgpu_core::device::resource::Device::maintain(wgpu_core::lock::vanilla::RwLockReadGuard&lt;core::mem::manually_drop::ManuallyDrop&lt;alloc::boxed::Box&lt;dyn$&lt;wgpu_hal::dynamic::DynFence&gt;,alloc::alloc::Global&gt; &gt; &gt;, enum2$&lt;wgpu_types::Maintain (34 samples, 0.02%)</title><rect x="2.7364%" y="1317" width="0.0197%" height="15" fill="rgb(209,72,35)" fg:x="4726" fg:w="34"/><text x="2.9864%" y="1327.50"></text></g><g><title>boids.exe`bevy_render::renderer::graph_runner::RenderGraphRunner::run(bevy_render::render_graph::graph::RenderGraph*, bevy_render::renderer::render_device::RenderDevice, enum2$&lt;core::option::Option (245 samples, 0.14%)</title><rect x="2.6154%" y="1445" width="0.1419%" height="15" fill="rgb(226,126,21)" fg:x="4517" fg:w="245"/><text x="2.8654%" y="1455.50"></text></g><g><title>boids.exe`wgpu::api::queue::Queue::submit(alloc::vec::Vec (82 samples, 0.05%)</title><rect x="2.7097%" y="1429" width="0.0475%" height="15" fill="rgb(227,192,1)" fg:x="4680" fg:w="82"/><text x="2.9597%" y="1439.50"></text></g><g><title>boids.exe`wgpu::backend::wgpu_core::impl$15::submit(wgpu::backend::wgpu_core::CoreQueue*, ref_mut$&lt;dyn$&lt;core::iter::traits::iterator::Iterator&lt;assoc$&lt;Item,enum2$ (82 samples, 0.05%)</title><rect x="2.7097%" y="1413" width="0.0475%" height="15" fill="rgb(237,180,29)" fg:x="4680" fg:w="82"/><text x="2.9597%" y="1423.50"></text></g><g><title>boids.exe`wgpu_core::global::Global::queue_submit(wgpu_core::id::Id&lt;enum2$&lt;wgpu_core::id::markers::Queue&gt; &gt;, ref$&lt;slice2$&lt;wgpu_core::id::Id&lt;enum2$ (79 samples, 0.05%)</title><rect x="2.7115%" y="1397" width="0.0457%" height="15" fill="rgb(230,197,35)" fg:x="4683" fg:w="79"/><text x="2.9615%" y="1407.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;alloc::sync::Arc (79 samples, 0.05%)</title><rect x="2.7115%" y="1381" width="0.0457%" height="15" fill="rgb(246,193,31)" fg:x="4683" fg:w="79"/><text x="2.9615%" y="1391.50"></text></g><g><title>boids.exe`alloc::vec::impl$25::drop(alloc::vec::Vec&lt;alloc::sync::Arc (79 samples, 0.05%)</title><rect x="2.7115%" y="1365" width="0.0457%" height="15" fill="rgb(241,36,4)" fg:x="4683" fg:w="79"/><text x="2.9615%" y="1375.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(ptr_mut$&lt;slice2$&lt;alloc::sync::Arc (79 samples, 0.05%)</title><rect x="2.7115%" y="1349" width="0.0457%" height="15" fill="rgb(241,130,17)" fg:x="4683" fg:w="79"/><text x="2.9615%" y="1359.50"></text></g><g><title>boids.exe`wgpu_core::device::queue::Queue::submit(ref$&lt;slice2$&lt;alloc::sync::Arc (79 samples, 0.05%)</title><rect x="2.7115%" y="1333" width="0.0457%" height="15" fill="rgb(206,137,32)" fg:x="4683" fg:w="79"/><text x="2.9615%" y="1343.50"></text></g><g><title>boids.exe`bevy_tasks::task_pool::impl$2::execute_scope::async_fn$0::async_block$0(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;bevy_tasks::task_pool::impl$2::execute_scope::async_fn$0::async_block_env$0&lt;tuple$&lt;&gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block$0::async_block_env$0&lt;bevy_ecs::schedule::executor::multi_threaded::impl$2::run::closure_env$1,tuple$ (450 samples, 0.26%)</title><rect x="2.4990%" y="1973" width="0.2606%" height="15" fill="rgb(237,228,51)" fg:x="4316" fg:w="450"/><text x="2.7490%" y="1983.50"></text></g><g><title>boids.exe`core::panic::unwind_safe::impl$28::poll&lt;enum2$&lt;bevy_tasks::task_pool::impl$2::execute_scope::async_fn$0::async_block$0::async_block_env$0&lt;tuple$&lt;&gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block$0::async_block_env$0&lt;bevy_ecs::schedule::executor::multi_threaded::impl$2::run::closure_env$1,tuple$&lt;&gt; &gt; &gt; &gt; &gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_tasks::task_pool::impl$2::execute_scope::async_fn$0::async_block$0::async_block_env$0&lt;tuple$&lt;&gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block$0::async_block_env$0&lt;bevy_ecs::schedule::executor::multi_threaded::impl$2::run::closure_env$1,tuple$ (450 samples, 0.26%)</title><rect x="2.4990%" y="1957" width="0.2606%" height="15" fill="rgb(243,6,42)" fg:x="4316" fg:w="450"/><text x="2.7490%" y="1967.50"></text></g><g><title>boids.exe`bevy_tasks::task_pool::impl$2::execute_scope::async_fn$0::async_block$0::async_block$0(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;bevy_tasks::task_pool::impl$2::execute_scope::async_fn$0::async_block$0::async_block_env$0&lt;tuple$&lt;&gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block$0::async_block_env$0&lt;bevy_ecs::schedule::executor::multi_threaded::impl$2::run::closure_env$1,tuple$ (450 samples, 0.26%)</title><rect x="2.4990%" y="1941" width="0.2606%" height="15" fill="rgb(251,74,28)" fg:x="4316" fg:w="450"/><text x="2.7490%" y="1951.50"></text></g><g><title>boids.exe`bevy_tasks::thread_executor::impl$2::tick::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (450 samples, 0.26%)</title><rect x="2.4990%" y="1925" width="0.2606%" height="15" fill="rgb(218,20,49)" fg:x="4316" fg:w="450"/><text x="2.7490%" y="1935.50"></text></g><g><title>boids.exe`async_executor::impl$5::tick::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (450 samples, 0.26%)</title><rect x="2.4990%" y="1909" width="0.2606%" height="15" fill="rgb(238,28,14)" fg:x="4316" fg:w="450"/><text x="2.7490%" y="1919.50"></text></g><g><title>boids.exe`async_executor::impl$13::tick::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (450 samples, 0.26%)</title><rect x="2.4990%" y="1893" width="0.2606%" height="15" fill="rgb(229,40,46)" fg:x="4316" fg:w="450"/><text x="2.7490%" y="1903.50"></text></g><g><title>boids.exe`async_task::runnable::Runnable&lt;tuple$&lt;&gt; &gt;::run(async_task::runnable::Runnable&lt;tuple$ (440 samples, 0.25%)</title><rect x="2.5048%" y="1877" width="0.2548%" height="15" fill="rgb(244,195,20)" fg:x="4326" fg:w="440"/><text x="2.7548%" y="1887.50"></text></g><g><title>boids.exe`async_task::raw::RawTask&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block_env$1&gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block_env$1&gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$&lt;&gt; &gt;::run&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block_env$1&gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block_env$1&gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$&lt;&gt; &gt;(tuple$ (387 samples, 0.22%)</title><rect x="2.5355%" y="1861" width="0.2241%" height="15" fill="rgb(253,56,35)" fg:x="4379" fg:w="387"/><text x="2.7855%" y="1871.50"></text></g><g><title>boids.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;async_task::raw::impl$3::run::closure_env$1&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block_env$1&gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block_env$1&gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$ (386 samples, 0.22%)</title><rect x="2.5360%" y="1845" width="0.2235%" height="15" fill="rgb(210,149,44)" fg:x="4380" fg:w="386"/><text x="2.7860%" y="1855.50"></text></g><g><title>boids.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;async_task::raw::impl$3::run::closure_env$1&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block_env$1&gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block_env$1&gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$ (386 samples, 0.22%)</title><rect x="2.5360%" y="1829" width="0.2235%" height="15" fill="rgb(240,135,12)" fg:x="4380" fg:w="386"/><text x="2.7860%" y="1839.50"></text></g><g><title>boids.exe`std::panicking::try::do_call (386 samples, 0.22%)</title><rect x="2.5360%" y="1813" width="0.2235%" height="15" fill="rgb(251,24,50)" fg:x="4380" fg:w="386"/><text x="2.7860%" y="1823.50"></text></g><g><title>boids.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;async_task::raw::impl$3::run::closure_env$1&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block_env$1&gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block_env$1&gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$ (386 samples, 0.22%)</title><rect x="2.5360%" y="1797" width="0.2235%" height="15" fill="rgb(243,200,47)" fg:x="4380" fg:w="386"/><text x="2.7860%" y="1807.50"></text></g><g><title>boids.exe`core::ops::function::FnOnce::call_once(async_task::raw::impl$3::run::closure_env$1&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block_env$1&gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block_env$1&gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$ (386 samples, 0.22%)</title><rect x="2.5360%" y="1781" width="0.2235%" height="15" fill="rgb(224,166,26)" fg:x="4380" fg:w="386"/><text x="2.7860%" y="1791.50"></text></g><g><title>boids.exe`async_task::raw::impl$3::run::closure$1(async_task::raw::impl$3::run::closure_env$1&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block_env$1&gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block_env$1&gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$ (386 samples, 0.22%)</title><rect x="2.5360%" y="1765" width="0.2235%" height="15" fill="rgb(233,0,47)" fg:x="4380" fg:w="386"/><text x="2.7860%" y="1775.50"></text></g><g><title>boids.exe`async_executor::impl$21::poll(core::pin::Pin&lt;ref_mut$&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block_env$1&gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$ (386 samples, 0.22%)</title><rect x="2.5360%" y="1749" width="0.2235%" height="15" fill="rgb(253,80,5)" fg:x="4380" fg:w="386"/><text x="2.7860%" y="1759.50"></text></g><g><title>boids.exe`futures_lite::future::impl$11::poll(core::pin::Pin&lt;ref_mut$&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$ (386 samples, 0.22%)</title><rect x="2.5360%" y="1733" width="0.2235%" height="15" fill="rgb(214,133,25)" fg:x="4380" fg:w="386"/><text x="2.7860%" y="1743.50"></text></g><g><title>boids.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;futures_lite::future::impl$11::poll::closure_env$0&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$ (386 samples, 0.22%)</title><rect x="2.5360%" y="1717" width="0.2235%" height="15" fill="rgb(209,27,14)" fg:x="4380" fg:w="386"/><text x="2.7860%" y="1727.50"></text></g><g><title>boids.exe`core::panic::unwind_safe::impl$28::poll&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block_env$1&gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$ (386 samples, 0.22%)</title><rect x="2.5360%" y="1701" width="0.2235%" height="15" fill="rgb(219,102,51)" fg:x="4380" fg:w="386"/><text x="2.7860%" y="1711.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block$1(core::pin::Pin&lt;ref_mut$&lt;enum2$ (386 samples, 0.22%)</title><rect x="2.5360%" y="1685" width="0.2235%" height="15" fill="rgb(237,18,16)" fg:x="4380" fg:w="386"/><text x="2.7860%" y="1695.50"></text></g><g><title>boids.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe (375 samples, 0.22%)</title><rect x="2.5424%" y="1669" width="0.2171%" height="15" fill="rgb(241,85,17)" fg:x="4391" fg:w="375"/><text x="2.7924%" y="1679.50"></text></g><g><title>boids.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe (375 samples, 0.22%)</title><rect x="2.5424%" y="1653" width="0.2171%" height="15" fill="rgb(236,90,42)" fg:x="4391" fg:w="375"/><text x="2.7924%" y="1663.50"></text></g><g><title>boids.exe`std::panicking::try::do_call (375 samples, 0.22%)</title><rect x="2.5424%" y="1637" width="0.2171%" height="15" fill="rgb(249,57,21)" fg:x="4391" fg:w="375"/><text x="2.7924%" y="1647.50"></text></g><g><title>boids.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe (375 samples, 0.22%)</title><rect x="2.5424%" y="1621" width="0.2171%" height="15" fill="rgb(243,12,36)" fg:x="4391" fg:w="375"/><text x="2.7924%" y="1631.50"></text></g><g><title>boids.exe`core::ops::function::FnOnce::call_once (375 samples, 0.22%)</title><rect x="2.5424%" y="1605" width="0.2171%" height="15" fill="rgb(253,128,47)" fg:x="4391" fg:w="375"/><text x="2.7924%" y="1615.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_exclusive_system_task::async_block$1::closure$0 (375 samples, 0.22%)</title><rect x="2.5424%" y="1589" width="0.2171%" height="15" fill="rgb(207,33,20)" fg:x="4391" fg:w="375"/><text x="2.7924%" y="1599.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::executor::__rust_begin_short_backtrace::run(alloc::boxed::Box&lt;dyn$&lt;bevy_ecs::system::system::System&lt;assoc$&lt;In,tuple$&lt;&gt; &gt;,assoc$&lt;Out,enum2$&lt;core::result::Result&lt;tuple$ (375 samples, 0.22%)</title><rect x="2.5424%" y="1573" width="0.2171%" height="15" fill="rgb(233,215,35)" fg:x="4391" fg:w="375"/><text x="2.7924%" y="1583.50"></text></g><g><title>boids.exe`bevy_ecs::system::system::System::run_without_applying_deferred&lt;bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;bevy_ecs::system::exclusive_function_system::ExclusiveFunctionSystem&lt;void (*)(ref_mut$&lt;bevy_ecs::system::function_system::SystemState&lt;bevy_ecs::system::query::Query&lt;bevy_ecs::entity::Entity,bevy_ecs::query::filter::With&lt;bevy_render::view::ViewTarget&gt; &gt; &gt; &gt;),void (*)(ref_mut$&lt;bevy_ecs::world::World&gt;,ref_mut$&lt;bevy_ecs::system::function_system::SystemState&lt;bevy_ecs::system::query::Query&lt;bevy_ecs::entity::Entity,bevy_ecs::query::filter::With&lt;bevy_render::view::ViewTarget&gt; &gt; &gt; &gt;)&gt; &gt; &gt;(bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;bevy_ecs::system::exclusive_function_system::ExclusiveFunctionSystem&lt;void (*)(ref_mut$&lt;bevy_ecs::system::function_system::SystemState&lt;bevy_ecs::system::query::Query&lt;bevy_ecs::entity::Entity,bevy_ecs::query::filter::With&lt;bevy_render::view::ViewTarget&gt; &gt; &gt; &gt;),void (*)(ref_mut$&lt;bevy_ecs::world::World&gt;,ref_mut$&lt;bevy_ecs::system::function_system::SystemState&lt;bevy_ecs::system::query::Query&lt;bevy_ecs::entity::Entity,bevy_ecs::query::filter::With&lt;bevy_render::view::ViewTarget&gt; &gt; &gt; &gt;)&gt; &gt;*, tuple$ (339 samples, 0.20%)</title><rect x="2.5633%" y="1557" width="0.1963%" height="15" fill="rgb(249,188,52)" fg:x="4427" fg:w="339"/><text x="2.8133%" y="1567.50"></text></g><g><title>boids.exe`bevy_ecs::system::schedule_system::impl$1::run_unsafe(bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;bevy_ecs::system::exclusive_function_system::ExclusiveFunctionSystem&lt;void (*)(ref_mut$&lt;bevy_ecs::system::function_system::SystemState&lt;bevy_ecs::system::query::Query&lt;bevy_ecs::entity::Entity,bevy_ecs::query::filter::With&lt;bevy_render::view::ViewTarget&gt; &gt; &gt; &gt;),void (*)(ref_mut$&lt;bevy_ecs::world::World&gt;,ref_mut$&lt;bevy_ecs::system::function_system::SystemState&lt;bevy_ecs::system::query::Query&lt;bevy_ecs::entity::Entity,bevy_ecs::query::filter::With&lt;bevy_render::view::ViewTarget&gt; &gt; &gt; &gt;)&gt; &gt;*, tuple$ (339 samples, 0.20%)</title><rect x="2.5633%" y="1541" width="0.1963%" height="15" fill="rgb(225,12,32)" fg:x="4427" fg:w="339"/><text x="2.8133%" y="1551.50"></text></g><g><title>boids.exe`bevy_ecs::system::exclusive_function_system::impl$2::run_unsafe(bevy_ecs::system::exclusive_function_system::ExclusiveFunctionSystem&lt;void (*)(ref_mut$&lt;bevy_ecs::system::function_system::SystemState&lt;bevy_ecs::system::query::Query&lt;bevy_ecs::entity::Entity,bevy_ecs::query::filter::With&lt;bevy_render::view::ViewTarget&gt; &gt; &gt; &gt;),void (*)(ref_mut$&lt;bevy_ecs::world::World&gt;,ref_mut$&lt;bevy_ecs::system::function_system::SystemState&lt;bevy_ecs::system::query::Query&lt;bevy_ecs::entity::Entity,bevy_ecs::query::filter::With&lt;bevy_render::view::ViewTarget&gt; &gt; &gt; &gt;)&gt;*, tuple$ (339 samples, 0.20%)</title><rect x="2.5633%" y="1525" width="0.1963%" height="15" fill="rgb(247,98,14)" fg:x="4427" fg:w="339"/><text x="2.8133%" y="1535.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::last_change_tick_scope(bevy_ecs::component::Tick, bevy_ecs::system::exclusive_function_system::impl$2::run_unsafe::closure_env$0&lt;void (*)(ref_mut$&lt;bevy_ecs::system::function_system::SystemState&lt;bevy_ecs::system::query::Query&lt;bevy_ecs::entity::Entity,bevy_ecs::query::filter::With&lt;bevy_render::view::ViewTarget&gt; &gt; &gt; &gt;),void (*)(ref_mut$&lt;bevy_ecs::world::World&gt;,ref_mut$&lt;bevy_ecs::system::function_system::SystemState&lt;bevy_ecs::system::query::Query&lt;bevy_ecs::entity::Entity,bevy_ecs::query::filter::With (339 samples, 0.20%)</title><rect x="2.5633%" y="1509" width="0.1963%" height="15" fill="rgb(247,219,48)" fg:x="4427" fg:w="339"/><text x="2.8133%" y="1519.50"></text></g><g><title>boids.exe`bevy_ecs::system::exclusive_function_system::impl$2::run_unsafe::closure$0(bevy_ecs::system::exclusive_function_system::impl$2::run_unsafe::closure_env$0&lt;void (*)(ref_mut$&lt;bevy_ecs::system::function_system::SystemState&lt;bevy_ecs::system::query::Query&lt;bevy_ecs::entity::Entity,bevy_ecs::query::filter::With&lt;bevy_render::view::ViewTarget&gt; &gt; &gt; &gt;),void (*)(ref_mut$&lt;bevy_ecs::world::World&gt;,ref_mut$&lt;bevy_ecs::system::function_system::SystemState&lt;bevy_ecs::system::query::Query&lt;bevy_ecs::entity::Entity,bevy_ecs::query::filter::With (339 samples, 0.20%)</title><rect x="2.5633%" y="1493" width="0.1963%" height="15" fill="rgb(253,60,48)" fg:x="4427" fg:w="339"/><text x="2.8133%" y="1503.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::flush (339 samples, 0.20%)</title><rect x="2.5633%" y="1477" width="0.1963%" height="15" fill="rgb(245,15,52)" fg:x="4427" fg:w="339"/><text x="2.8133%" y="1487.50"></text></g><g><title>boids.exe`bevy_render::renderer::render_system(bevy_ecs::world::World*, bevy_ecs::system::function_system::SystemState&lt;bevy_ecs::system::query::Query&lt;bevy_ecs::entity::Entity,bevy_ecs::query::filter::With (338 samples, 0.20%)</title><rect x="2.5638%" y="1461" width="0.1957%" height="15" fill="rgb(220,133,28)" fg:x="4428" fg:w="338"/><text x="2.8138%" y="1471.50"></text></g><g><title>boids.exe`bevy_tasks::task_pool::impl$2::execute_scope::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;bevy_tasks::task_pool::impl$2::execute_scope::async_fn_env$0&lt;tuple$&lt;&gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block$0::async_block_env$0&lt;bevy_ecs::schedule::executor::multi_threaded::impl$2::run::closure_env$1,tuple$ (462 samples, 0.27%)</title><rect x="2.4984%" y="2005" width="0.2675%" height="15" fill="rgb(217,180,4)" fg:x="4315" fg:w="462"/><text x="2.7484%" y="2015.50"></text></g><g><title>boids.exe`futures_lite::future::impl$7::poll&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block$0::async_block_env$0&lt;bevy_ecs::schedule::executor::multi_threaded::impl$2::run::closure_env$1,tuple$&lt;&gt; &gt; &gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::execute_scope::async_fn$0::async_block_env$0&lt;tuple$&lt;&gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block$0::async_block_env$0&lt;bevy_ecs::schedule::executor::multi_threaded::impl$2::run::closure_env$1,tuple$&lt;&gt; &gt; &gt; &gt; &gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;futures_lite::future::Or&lt;enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block$0::async_block_env$0&lt;bevy_ecs::schedule::executor::multi_threaded::impl$2::run::closure_env$1,tuple$&lt;&gt; &gt; &gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::execute_scope::async_fn$0::async_block_env$0&lt;tuple$&lt;&gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block$0::async_block_env$0&lt;bevy_ecs::schedule::executor::multi_threaded::impl$2::run::closure_env$1,tuple$ (461 samples, 0.27%)</title><rect x="2.4990%" y="1989" width="0.2669%" height="15" fill="rgb(251,24,1)" fg:x="4316" fg:w="461"/><text x="2.7490%" y="1999.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::executor::multi_threaded::impl$2::run(bevy_ecs::schedule::executor::multi_threaded::MultiThreadedExecutor*, bevy_ecs::schedule::executor::SystemSchedule*, bevy_ecs::world::World*, enum2$&lt;core::option::Option&lt;ref$&lt;fixedbitset::FixedBitSet&gt; &gt; &gt;, void (*)(bevy_ecs::error::bevy_error::BevyError, enum2$ (492 samples, 0.28%)</title><rect x="2.4972%" y="2149" width="0.2849%" height="15" fill="rgb(212,185,49)" fg:x="4313" fg:w="492"/><text x="2.7472%" y="2159.50"></text></g><g><title>boids.exe`bevy_tasks::usages::ComputeTaskPool::get_or_init(bevy_tasks::task_pool::TaskPool (*) (492 samples, 0.28%)</title><rect x="2.4972%" y="2133" width="0.2849%" height="15" fill="rgb(215,175,22)" fg:x="4313" fg:w="492"/><text x="2.7472%" y="2143.50"></text></g><g><title>boids.exe`std::thread::local::LocalKey&lt;alloc::sync::Arc&lt;bevy_tasks::thread_executor::ThreadExecutor,alloc::alloc::Global&gt; &gt;::with(bevy_tasks::task_pool::impl$2::scope_with_executor::closure_env$0&lt;bevy_ecs::schedule::executor::multi_threaded::impl$2::run::closure_env$1,tuple$ (492 samples, 0.28%)</title><rect x="2.4972%" y="2117" width="0.2849%" height="15" fill="rgb(250,205,14)" fg:x="4313" fg:w="492"/><text x="2.7472%" y="2127.50"></text></g><g><title>boids.exe`bevy_tasks::task_pool::TaskPool::scope_with_executor_inner&lt;bevy_ecs::schedule::executor::multi_threaded::impl$2::run::closure_env$1,tuple$&lt;&gt; &gt; (492 samples, 0.28%)</title><rect x="2.4972%" y="2101" width="0.2849%" height="15" fill="rgb(225,211,22)" fg:x="4313" fg:w="492"/><text x="2.7472%" y="2111.50"></text></g><g><title>boids.exe`futures_lite::future::block_on(enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block_env$0&lt;bevy_ecs::schedule::executor::multi_threaded::impl$2::run::closure_env$1,tuple$ (491 samples, 0.28%)</title><rect x="2.4978%" y="2085" width="0.2843%" height="15" fill="rgb(251,179,42)" fg:x="4314" fg:w="491"/><text x="2.7478%" y="2095.50"></text></g><g><title>boids.exe`std::thread::local::LocalKey&lt;core::cell::RefCell&lt;tuple$&lt;parking::Parker,core::task::wake::Waker&gt; &gt; &gt;::with&lt;core::cell::RefCell&lt;tuple$&lt;parking::Parker,core::task::wake::Waker&gt; &gt;,futures_lite::future::block_on::closure_env$0&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block_env$0&lt;bevy_ecs::schedule::executor::multi_threaded::impl$2::run::closure_env$1,tuple$&lt;&gt; &gt; &gt; &gt;,alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt; &gt;(futures_lite::future::block_on::closure_env$0&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block_env$0&lt;bevy_ecs::schedule::executor::multi_threaded::impl$2::run::closure_env$1,tuple$ (491 samples, 0.28%)</title><rect x="2.4978%" y="2069" width="0.2843%" height="15" fill="rgb(208,216,51)" fg:x="4314" fg:w="491"/><text x="2.7478%" y="2079.50"></text></g><g><title>boids.exe`std::thread::local::LocalKey&lt;core::cell::RefCell&lt;tuple$&lt;parking::Parker,core::task::wake::Waker&gt; &gt; &gt;::try_with(futures_lite::future::block_on::closure_env$0&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block_env$0&lt;bevy_ecs::schedule::executor::multi_threaded::impl$2::run::closure_env$1,tuple$ (491 samples, 0.28%)</title><rect x="2.4978%" y="2053" width="0.2843%" height="15" fill="rgb(235,36,11)" fg:x="4314" fg:w="491"/><text x="2.7478%" y="2063.50"></text></g><g><title>boids.exe`futures_lite::future::block_on::closure$0(futures_lite::future::block_on::closure_env$0&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block_env$0&lt;bevy_ecs::schedule::executor::multi_threaded::impl$2::run::closure_env$1,tuple$&lt;&gt; &gt; &gt; &gt;, core::cell::RefCell&lt;tuple$ (491 samples, 0.28%)</title><rect x="2.4978%" y="2037" width="0.2843%" height="15" fill="rgb(213,189,28)" fg:x="4314" fg:w="491"/><text x="2.7478%" y="2047.50"></text></g><g><title>boids.exe`bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block$0(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block_env$0&lt;bevy_ecs::schedule::executor::multi_threaded::impl$2::run::closure_env$1,tuple$ (491 samples, 0.28%)</title><rect x="2.4978%" y="2021" width="0.2843%" height="15" fill="rgb(227,203,42)" fg:x="4314" fg:w="491"/><text x="2.7478%" y="2031.50"></text></g><g><title>boids.exe`parking::Inner::park(enum2$&lt;core::option::Option (28 samples, 0.02%)</title><rect x="2.7659%" y="2005" width="0.0162%" height="15" fill="rgb(244,72,36)" fg:x="4777" fg:w="28"/><text x="3.0159%" y="2015.50"></text></g><g><title>boids.exe`std::sync::poison::condvar::Condvar::wait(std::sync::poison::mutex::MutexGuard&lt;tuple$ (27 samples, 0.02%)</title><rect x="2.7665%" y="1989" width="0.0156%" height="15" fill="rgb(213,53,17)" fg:x="4778" fg:w="27"/><text x="3.0165%" y="1999.50"></text></g><g><title>boids.exe`std::sync::poison::Flag::get (27 samples, 0.02%)</title><rect x="2.7665%" y="1973" width="0.0156%" height="15" fill="rgb(207,167,3)" fg:x="4778" fg:w="27"/><text x="3.0165%" y="1983.50"></text></g><g><title>boids.exe`core::sync::atomic::AtomicBool::load (27 samples, 0.02%)</title><rect x="2.7665%" y="1957" width="0.0156%" height="15" fill="rgb(216,98,30)" fg:x="4778" fg:w="27"/><text x="3.0165%" y="1967.50"></text></g><g><title>boids.exe`core::sync::atomic::atomic_load (27 samples, 0.02%)</title><rect x="2.7665%" y="1941" width="0.0156%" height="15" fill="rgb(236,123,15)" fg:x="4778" fg:w="27"/><text x="3.0165%" y="1951.50"></text></g><g><title>boids.exe`std::sys::sync::condvar::futex::Condvar::wait (27 samples, 0.02%)</title><rect x="2.7665%" y="1925" width="0.0156%" height="15" fill="rgb(248,81,50)" fg:x="4778" fg:w="27"/><text x="3.0165%" y="1935.50"></text></g><g><title>boids.exe`std::sys::sync::condvar::futex::Condvar::wait_optional_timeout (27 samples, 0.02%)</title><rect x="2.7665%" y="1909" width="0.0156%" height="15" fill="rgb(214,120,4)" fg:x="4778" fg:w="27"/><text x="3.0165%" y="1919.50"></text></g><g><title>boids.exe`std::sys::pal::windows::futex::futex_wait (27 samples, 0.02%)</title><rect x="2.7665%" y="1893" width="0.0156%" height="15" fill="rgb(208,179,34)" fg:x="4778" fg:w="27"/><text x="3.0165%" y="1903.50"></text></g><g><title>boids.exe`std::sys::pal::windows::futex::wait_on_address (25 samples, 0.01%)</title><rect x="2.7676%" y="1877" width="0.0145%" height="15" fill="rgb(227,140,7)" fg:x="4780" fg:w="25"/><text x="3.0176%" y="1887.50"></text></g><g><title>`0x7FF89ABBF923 (25 samples, 0.01%)</title><rect x="2.7676%" y="1861" width="0.0145%" height="15" fill="rgb(214,22,6)" fg:x="4780" fg:w="25"/><text x="3.0176%" y="1871.50"></text></g><g><title>`0x7FF89D8FBFA3 (25 samples, 0.01%)</title><rect x="2.7676%" y="1845" width="0.0145%" height="15" fill="rgb(207,137,27)" fg:x="4780" fg:w="25"/><text x="3.0176%" y="1855.50"></text></g><g><title>`0x7FF89D8FFEDC (24 samples, 0.01%)</title><rect x="2.7682%" y="1829" width="0.0139%" height="15" fill="rgb(210,8,46)" fg:x="4781" fg:w="24"/><text x="3.0182%" y="1839.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::graph::check_graph(bevy_ecs::schedule::graph::graph_map::Graph&lt;true,bevy_platform::hash::FixedHasher&gt;*, ref$&lt;slice2$&lt;enum2$ (23 samples, 0.01%)</title><rect x="2.7966%" y="2069" width="0.0133%" height="15" fill="rgb(240,16,54)" fg:x="4830" fg:w="23"/><text x="3.0466%" y="2079.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::resource_mut (558 samples, 0.32%)</title><rect x="2.4972%" y="2213" width="0.3231%" height="15" fill="rgb(211,209,29)" fg:x="4313" fg:w="558"/><text x="2.7472%" y="2223.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::get_resource_mut (558 samples, 0.32%)</title><rect x="2.4972%" y="2197" width="0.3231%" height="15" fill="rgb(226,228,24)" fg:x="4313" fg:w="558"/><text x="2.7472%" y="2207.50"></text></g><g><title>boids.exe`bevy_ecs::world::unsafe_world_cell::UnsafeWorldCell::get_resource_mut (558 samples, 0.32%)</title><rect x="2.4972%" y="2181" width="0.3231%" height="15" fill="rgb(222,84,9)" fg:x="4313" fg:w="558"/><text x="2.7472%" y="2191.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::schedule::Schedule::run (558 samples, 0.32%)</title><rect x="2.4972%" y="2165" width="0.3231%" height="15" fill="rgb(234,203,30)" fg:x="4313" fg:w="558"/><text x="2.7472%" y="2175.50"></text></g><g><title>boids.exe`enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;bevy_ecs::schedule::schedule::ScheduleBuildError&gt; &gt; &gt;::unwrap_or_else(enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$ (66 samples, 0.04%)</title><rect x="2.7821%" y="2149" width="0.0382%" height="15" fill="rgb(238,109,14)" fg:x="4805" fg:w="66"/><text x="3.0321%" y="2159.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::schedule::Schedule::initialize (66 samples, 0.04%)</title><rect x="2.7821%" y="2133" width="0.0382%" height="15" fill="rgb(233,206,34)" fg:x="4805" fg:w="66"/><text x="3.0321%" y="2143.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::schedule::ScheduleGraph::update_schedule(bevy_ecs::world::World*, bevy_ecs::schedule::executor::SystemSchedule*, alloc::collections::btree::set::BTreeSet&lt;bevy_ecs::component::ComponentId,alloc::alloc::Global&gt;*, bevy_ecs::intern::Interned&lt;dyn$ (56 samples, 0.03%)</title><rect x="2.7879%" y="2117" width="0.0324%" height="15" fill="rgb(220,167,47)" fg:x="4815" fg:w="56"/><text x="3.0379%" y="2127.50"></text></g><g><title>boids.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;bevy_ecs::schedule::executor::SystemSchedule,enum2$ (56 samples, 0.03%)</title><rect x="2.7879%" y="2101" width="0.0324%" height="15" fill="rgb(238,105,10)" fg:x="4815" fg:w="56"/><text x="3.0379%" y="2111.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::schedule::ScheduleGraph::build_schedule(bevy_ecs::world::World*, bevy_ecs::intern::Interned&lt;dyn$&lt;bevy_ecs::schedule::set::ScheduleLabel&gt; &gt;, alloc::collections::btree::set::BTreeSet (56 samples, 0.03%)</title><rect x="2.7879%" y="2085" width="0.0324%" height="15" fill="rgb(213,227,17)" fg:x="4815" fg:w="56"/><text x="3.0379%" y="2095.50"></text></g><g><title>boids.exe`bevy_app::sub_app::SubApp::update (559 samples, 0.32%)</title><rect x="2.4972%" y="2293" width="0.3237%" height="15" fill="rgb(217,132,38)" fg:x="4313" fg:w="559"/><text x="2.7472%" y="2303.50"></text></g><g><title>boids.exe`bevy_app::sub_app::SubApp::run_default_schedule (559 samples, 0.32%)</title><rect x="2.4972%" y="2277" width="0.3237%" height="15" fill="rgb(242,146,4)" fg:x="4313" fg:w="559"/><text x="2.7472%" y="2287.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::run_schedule(bevy_ecs::intern::Interned&lt;dyn$ (559 samples, 0.32%)</title><rect x="2.4972%" y="2261" width="0.3237%" height="15" fill="rgb(212,61,9)" fg:x="4313" fg:w="559"/><text x="2.7472%" y="2271.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::schedule_scope&lt;tuple$&lt;&gt;,bevy_ecs::intern::Interned&lt;dyn$&lt;bevy_ecs::schedule::set::ScheduleLabel&gt; &gt;,bevy_ecs::world::impl$4::run_schedule::closure_env$0&lt;bevy_ecs::intern::Interned&lt;dyn$&lt;bevy_ecs::schedule::set::ScheduleLabel&gt; &gt; &gt; &gt;(bevy_ecs::intern::Interned&lt;dyn$&lt;bevy_ecs::schedule::set::ScheduleLabel&gt; &gt;, bevy_ecs::world::impl$4::run_schedule::closure_env$0&lt;bevy_ecs::intern::Interned&lt;dyn$ (559 samples, 0.32%)</title><rect x="2.4972%" y="2245" width="0.3237%" height="15" fill="rgb(247,126,22)" fg:x="4313" fg:w="559"/><text x="2.7472%" y="2255.50"></text></g><g><title>boids.exe`bevy_ecs::world::World::try_schedule_scope(bevy_ecs::intern::Interned&lt;dyn$&lt;bevy_ecs::schedule::set::ScheduleLabel&gt; &gt;, bevy_ecs::world::impl$4::run_schedule::closure_env$0&lt;bevy_ecs::intern::Interned&lt;dyn$ (559 samples, 0.32%)</title><rect x="2.4972%" y="2229" width="0.3237%" height="15" fill="rgb(220,196,2)" fg:x="4313" fg:w="559"/><text x="2.7472%" y="2239.50"></text></g><g><title>boids.exe`async_executor::impl$17::runnable::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (22 samples, 0.01%)</title><rect x="2.8250%" y="1941" width="0.0127%" height="15" fill="rgb(208,46,4)" fg:x="4879" fg:w="22"/><text x="3.0750%" y="1951.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::executor::multi_threaded::Context::tick_executor (18 samples, 0.01%)</title><rect x="2.8481%" y="1685" width="0.0104%" height="15" fill="rgb(252,104,46)" fg:x="4919" fg:w="18"/><text x="3.0981%" y="1695.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::executor::multi_threaded::Context::system_completed(unsigned long long, enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;, alloc::boxed::Box&lt;dyn$&lt;bevy_ecs::system::system::System&lt;assoc$&lt;In,tuple$&lt;&gt; &gt;,assoc$&lt;Out,enum2$&lt;core::result::Result&lt;tuple$ (28 samples, 0.02%)</title><rect x="2.8481%" y="1701" width="0.0162%" height="15" fill="rgb(237,152,48)" fg:x="4919" fg:w="28"/><text x="3.0981%" y="1711.50"></text></g><g><title>boids.exe`bevy_ecs::system::schedule_system::impl$1::run_unsafe&lt;bevy_ecs::system::function_system::FunctionSystem&lt;void (*)(bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::ExtractedSprites&gt;,bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::ExtractedSlices&gt;,bevy_render::extract_param::Extract&lt;bevy_ecs::change_detection::Res&lt;bevy_asset::assets::Assets&lt;bevy_image::texture_atlas::TextureAtlasLayout&gt; &gt; &gt;,bevy_render::extract_param::Extract&lt;bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,bevy_render::sync_world::RenderEntity,ref$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_sprite::sprite::Sprite&gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_sprite::texture_slice::computed_slices::ComputedTextureSlices&gt; &gt; &gt; &gt;,tuple$&lt;&gt; &gt; &gt;),void (*)(bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::ExtractedSprites&gt;,bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::ExtractedSlices&gt;,bevy_render::extract_param::Extract&lt;bevy_ecs::change_detection::Res&lt;bevy_asset::assets::Assets&lt;bevy_image::texture_atlas::TextureAtlasLayout&gt; &gt; &gt;,bevy_render::extract_param::Extract&lt;bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,bevy_render::sync_world::RenderEntity,ref$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_sprite::sprite::Sprite&gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_sprite::texture_slice::computed_slices::ComputedTextureSlices&gt; &gt; &gt; &gt;,tuple$&lt;&gt; &gt; &gt;)&gt; &gt;(bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;bevy_ecs::system::function_system::FunctionSystem&lt;void (*)(bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::ExtractedSprites&gt;,bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::ExtractedSlices&gt;,bevy_render::extract_param::Extract&lt;bevy_ecs::change_detection::Res&lt;bevy_asset::assets::Assets&lt;bevy_image::texture_atlas::TextureAtlasLayout&gt; &gt; &gt;,bevy_render::extract_param::Extract&lt;bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,bevy_render::sync_world::RenderEntity,ref$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_sprite::sprite::Sprite&gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_sprite::texture_slice::computed_slices::ComputedTextureSlices&gt; &gt; &gt; &gt;,tuple$&lt;&gt; &gt; &gt;),void (*)(bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::ExtractedSprites&gt;,bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::ExtractedSlices&gt;,bevy_render::extract_param::Extract&lt;bevy_ecs::change_detection::Res&lt;bevy_asset::assets::Assets&lt;bevy_image::texture_atlas::TextureAtlasLayout&gt; &gt; &gt;,bevy_render::extract_param::Extract&lt;bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,bevy_render::sync_world::RenderEntity,ref$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_sprite::sprite::Sprite&gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_sprite::texture_slice::computed_slices::ComputedTextureSlices&gt; &gt; &gt; &gt;,tuple$&lt;&gt; &gt; &gt;)&gt; &gt;*, tuple$ (31 samples, 0.02%)</title><rect x="2.8672%" y="1589" width="0.0179%" height="15" fill="rgb(221,59,37)" fg:x="4952" fg:w="31"/><text x="3.1172%" y="1599.50"></text></g><g><title>boids.exe`bevy_ecs::system::function_system::impl$7::run_unsafe(bevy_ecs::system::function_system::FunctionSystem&lt;void (*)(bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::ExtractedSprites&gt;,bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::ExtractedSlices&gt;,bevy_render::extract_param::Extract&lt;bevy_ecs::change_detection::Res&lt;bevy_asset::assets::Assets&lt;bevy_image::texture_atlas::TextureAtlasLayout&gt; &gt; &gt;,bevy_render::extract_param::Extract&lt;bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,bevy_render::sync_world::RenderEntity,ref$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_sprite::sprite::Sprite&gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_sprite::texture_slice::computed_slices::ComputedTextureSlices&gt; &gt; &gt; &gt;,tuple$&lt;&gt; &gt; &gt;),void (*)(bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::ExtractedSprites&gt;,bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::ExtractedSlices&gt;,bevy_render::extract_param::Extract&lt;bevy_ecs::change_detection::Res&lt;bevy_asset::assets::Assets&lt;bevy_image::texture_atlas::TextureAtlasLayout&gt; &gt; &gt;,bevy_render::extract_param::Extract&lt;bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,bevy_render::sync_world::RenderEntity,ref$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_sprite::sprite::Sprite&gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_sprite::texture_slice::computed_slices::ComputedTextureSlices&gt; &gt; &gt; &gt;,tuple$&lt;&gt; &gt; &gt;)&gt;*, tuple$ (30 samples, 0.02%)</title><rect x="2.8678%" y="1573" width="0.0174%" height="15" fill="rgb(209,202,51)" fg:x="4953" fg:w="30"/><text x="3.1178%" y="1583.50"></text></g><g><title>boids.exe`bevy_sprite::render::extract_sprites(bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::ExtractedSprites&gt;, bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::ExtractedSlices&gt;, bevy_render::extract_param::Extract&lt;bevy_ecs::change_detection::Res&lt;bevy_asset::assets::Assets&lt;bevy_image::texture_atlas::TextureAtlasLayout&gt; &gt; &gt;, bevy_render::extract_param::Extract&lt;bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,bevy_render::sync_world::RenderEntity,ref$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_sprite::sprite::Sprite&gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_sprite::texture_slice::computed_slices::ComputedTextureSlices&gt; &gt; &gt; &gt;,tuple$ (30 samples, 0.02%)</title><rect x="2.8678%" y="1557" width="0.0174%" height="15" fill="rgb(228,81,30)" fg:x="4953" fg:w="30"/><text x="3.1178%" y="1567.50"></text></g><g><title>boids.exe`core::convert::impl$3::into(enum2$ (25 samples, 0.01%)</title><rect x="2.8707%" y="1541" width="0.0145%" height="15" fill="rgb(227,42,39)" fg:x="4958" fg:w="25"/><text x="3.1207%" y="1551.50"></text></g><g><title>boids.exe`bevy_color::color::impl$5::from(enum2$ (25 samples, 0.01%)</title><rect x="2.8707%" y="1525" width="0.0145%" height="15" fill="rgb(221,26,2)" fg:x="4958" fg:w="25"/><text x="3.1207%" y="1535.50"></text></g><g><title>boids.exe`core::convert::impl$3::into (24 samples, 0.01%)</title><rect x="2.8713%" y="1509" width="0.0139%" height="15" fill="rgb(254,61,31)" fg:x="4959" fg:w="24"/><text x="3.1213%" y="1519.50"></text></g><g><title>boids.exe`bevy_color::srgba::impl$11::from (24 samples, 0.01%)</title><rect x="2.8713%" y="1493" width="0.0139%" height="15" fill="rgb(222,173,38)" fg:x="4959" fg:w="24"/><text x="3.1213%" y="1503.50"></text></g><g><title>boids.exe`bevy_color::srgba::Srgba::gamma_function (24 samples, 0.01%)</title><rect x="2.8713%" y="1477" width="0.0139%" height="15" fill="rgb(218,50,12)" fg:x="4959" fg:w="24"/><text x="3.1213%" y="1487.50"></text></g><g><title>boids.exe`bevy_math::ops::std_ops::powf (19 samples, 0.01%)</title><rect x="2.8742%" y="1461" width="0.0110%" height="15" fill="rgb(223,88,40)" fg:x="4964" fg:w="19"/><text x="3.1242%" y="1471.50"></text></g><g><title>boids.exe`std::f32::impl$0::powf (19 samples, 0.01%)</title><rect x="2.8742%" y="1445" width="0.0110%" height="15" fill="rgb(237,54,19)" fg:x="4964" fg:w="19"/><text x="3.1242%" y="1455.50"></text></g><g><title>boids.exe`alloc::vec::Vec&lt;ref$&lt;boids::LocalBoid&gt;,alloc::alloc::Global&gt;::as_mut_ptr (21 samples, 0.01%)</title><rect x="2.9026%" y="1397" width="0.0122%" height="15" fill="rgb(251,129,25)" fg:x="5013" fg:w="21"/><text x="3.1526%" y="1407.50"></text></g><g><title>boids.exe`alloc::raw_vec::RawVec&lt;ref$&lt;boids::LocalBoid&gt;,alloc::alloc::Global&gt;::ptr (21 samples, 0.01%)</title><rect x="2.9026%" y="1381" width="0.0122%" height="15" fill="rgb(238,97,19)" fg:x="5013" fg:w="21"/><text x="3.1526%" y="1391.50"></text></g><g><title>boids.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (21 samples, 0.01%)</title><rect x="2.9026%" y="1365" width="0.0122%" height="15" fill="rgb(240,169,18)" fg:x="5013" fg:w="21"/><text x="3.1526%" y="1375.50"></text></g><g><title>boids.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (21 samples, 0.01%)</title><rect x="2.9026%" y="1349" width="0.0122%" height="15" fill="rgb(230,187,49)" fg:x="5013" fg:w="21"/><text x="3.1526%" y="1359.50"></text></g><g><title>boids.exe`alloc::raw_vec::impl$4::reserve::do_reserve_and_handle&lt;alloc::alloc::Global&gt;(alloc::raw_vec::RawVecInner (21 samples, 0.01%)</title><rect x="2.9026%" y="1333" width="0.0122%" height="15" fill="rgb(209,44,26)" fg:x="5013" fg:w="21"/><text x="3.1526%" y="1343.50"></text></g><g><title>boids.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (20 samples, 0.01%)</title><rect x="2.9031%" y="1317" width="0.0116%" height="15" fill="rgb(244,0,6)" fg:x="5014" fg:w="20"/><text x="3.1531%" y="1327.50"></text></g><g><title>boids.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (19 samples, 0.01%)</title><rect x="2.9037%" y="1301" width="0.0110%" height="15" fill="rgb(248,18,21)" fg:x="5015" fg:w="19"/><text x="3.1537%" y="1311.50"></text></g><g><title>boids.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (19 samples, 0.01%)</title><rect x="2.9037%" y="1285" width="0.0110%" height="15" fill="rgb(245,180,19)" fg:x="5015" fg:w="19"/><text x="3.1537%" y="1295.50"></text></g><g><title>boids.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (19 samples, 0.01%)</title><rect x="2.9037%" y="1269" width="0.0110%" height="15" fill="rgb(252,118,36)" fg:x="5015" fg:w="19"/><text x="3.1537%" y="1279.50"></text></g><g><title>boids.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (19 samples, 0.01%)</title><rect x="2.9037%" y="1253" width="0.0110%" height="15" fill="rgb(210,224,19)" fg:x="5015" fg:w="19"/><text x="3.1537%" y="1263.50"></text></g><g><title>boids.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (19 samples, 0.01%)</title><rect x="2.9037%" y="1237" width="0.0110%" height="15" fill="rgb(218,30,24)" fg:x="5015" fg:w="19"/><text x="3.1537%" y="1247.50"></text></g><g><title>`0x7FF89D8F21BA (19 samples, 0.01%)</title><rect x="2.9037%" y="1221" width="0.0110%" height="15" fill="rgb(219,75,50)" fg:x="5015" fg:w="19"/><text x="3.1537%" y="1231.50"></text></g><g><title>`0x7FF89D8F22F7 (18 samples, 0.01%)</title><rect x="2.9043%" y="1205" width="0.0104%" height="15" fill="rgb(234,72,50)" fg:x="5016" fg:w="18"/><text x="3.1543%" y="1215.50"></text></g><g><title>boids.exe`alloc::vec::Vec&lt;ref$&lt;boids::LocalBoid&gt;,alloc::alloc::Global&gt;::is_empty (37 samples, 0.02%)</title><rect x="2.8985%" y="1493" width="0.0214%" height="15" fill="rgb(219,100,48)" fg:x="5006" fg:w="37"/><text x="3.1485%" y="1503.50"></text></g><g><title>boids.exe`alloc::vec::Vec&lt;ref$&lt;boids::LocalBoid&gt;,alloc::alloc::Global&gt;::len (37 samples, 0.02%)</title><rect x="2.8985%" y="1477" width="0.0214%" height="15" fill="rgb(253,5,41)" fg:x="5006" fg:w="37"/><text x="3.1485%" y="1487.50"></text></g><g><title>boids.exe`alloc::vec::spec_from_iter::impl$0::from_iter&lt;ref$&lt;boids::LocalBoid&gt;,core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter&lt;boids::LocalBoid&gt;,boids::calculate_separation::closure_env$0&gt; &gt;(core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter (37 samples, 0.02%)</title><rect x="2.8985%" y="1461" width="0.0214%" height="15" fill="rgb(247,181,11)" fg:x="5006" fg:w="37"/><text x="3.1485%" y="1471.50"></text></g><g><title>boids.exe`alloc::vec::spec_from_iter_nested::impl$0::from_iter(core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter (37 samples, 0.02%)</title><rect x="2.8985%" y="1445" width="0.0214%" height="15" fill="rgb(222,223,25)" fg:x="5006" fg:w="37"/><text x="3.1485%" y="1455.50"></text></g><g><title>boids.exe`alloc::vec::spec_extend::impl$0::spec_extend(alloc::vec::Vec&lt;ref$&lt;boids::LocalBoid&gt;,alloc::alloc::Global&gt;*, core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter (30 samples, 0.02%)</title><rect x="2.9026%" y="1429" width="0.0174%" height="15" fill="rgb(214,198,28)" fg:x="5013" fg:w="30"/><text x="3.1526%" y="1439.50"></text></g><g><title>boids.exe`alloc::vec::Vec&lt;ref$&lt;boids::LocalBoid&gt;,alloc::alloc::Global&gt;::extend_desugared(core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter (30 samples, 0.02%)</title><rect x="2.9026%" y="1413" width="0.0174%" height="15" fill="rgb(230,46,43)" fg:x="5013" fg:w="30"/><text x="3.1526%" y="1423.50"></text></g><g><title>boids.exe`boids::calculate_separation(alloc::vec::Vec (48 samples, 0.03%)</title><rect x="2.8985%" y="1509" width="0.0278%" height="15" fill="rgb(233,65,53)" fg:x="5006" fg:w="48"/><text x="3.1485%" y="1519.50"></text></g><g><title>boids.exe`core::intrinsics::copy_nonoverlapping(core::cmp::Reverse&lt;boids::LocalBoid&gt;*, core::cmp::Reverse (50 samples, 0.03%)</title><rect x="2.9830%" y="1413" width="0.0290%" height="15" fill="rgb(221,121,27)" fg:x="5152" fg:w="50"/><text x="3.2330%" y="1423.50"></text></g><g><title>boids.exe`alloc::collections::binary_heap::Hole&lt;core::cmp::Reverse&lt;boids::LocalBoid&gt; &gt;::move_to (55 samples, 0.03%)</title><rect x="2.9830%" y="1429" width="0.0318%" height="15" fill="rgb(247,70,47)" fg:x="5152" fg:w="55"/><text x="3.2330%" y="1439.50"></text></g><g><title>boids.exe`core::cmp::impls::impl$10::le(core::cmp::Reverse&lt;boids::LocalBoid&gt;**, core::cmp::Reverse (31 samples, 0.02%)</title><rect x="3.0189%" y="1429" width="0.0179%" height="15" fill="rgb(228,85,35)" fg:x="5214" fg:w="31"/><text x="3.2689%" y="1439.50"></text></g><g><title>boids.exe`core::cmp::impl$1::le(core::cmp::Reverse&lt;boids::LocalBoid&gt;*, core::cmp::Reverse (23 samples, 0.01%)</title><rect x="3.0236%" y="1413" width="0.0133%" height="15" fill="rgb(209,50,18)" fg:x="5222" fg:w="23"/><text x="3.2736%" y="1423.50"></text></g><g><title>boids.exe`core::cmp::PartialOrd::le (23 samples, 0.01%)</title><rect x="3.0236%" y="1397" width="0.0133%" height="15" fill="rgb(250,19,35)" fg:x="5222" fg:w="23"/><text x="3.2736%" y="1407.50"></text></g><g><title>boids.exe`boids::impl$3::partial_cmp (23 samples, 0.01%)</title><rect x="3.0236%" y="1381" width="0.0133%" height="15" fill="rgb(253,107,29)" fg:x="5222" fg:w="23"/><text x="3.2736%" y="1391.50"></text></g><g><title>boids.exe`core::cmp::impls::impl$53::partial_cmp (23 samples, 0.01%)</title><rect x="3.0236%" y="1365" width="0.0133%" height="15" fill="rgb(252,179,29)" fg:x="5222" fg:w="23"/><text x="3.2736%" y="1375.50"></text></g><g><title>boids.exe`alloc::collections::binary_heap::BinaryHeap&lt;core::cmp::Reverse&lt;boids::LocalBoid&gt;,alloc::alloc::Global&gt;::pop&lt;core::cmp::Reverse&lt;boids::LocalBoid&gt;,alloc::alloc::Global&gt; (198 samples, 0.11%)</title><rect x="2.9280%" y="1493" width="0.1146%" height="15" fill="rgb(238,194,6)" fg:x="5057" fg:w="198"/><text x="3.1780%" y="1503.50"></text></g><g><title>boids.exe`enum2$&lt;core::option::Option&lt;core::cmp::Reverse&lt;boids::LocalBoid&gt; &gt; &gt;::map(enum2$&lt;core::option::Option&lt;core::cmp::Reverse&lt;boids::LocalBoid&gt; &gt; &gt;, alloc::collections::binary_heap::impl$10::pop::closure_env$0&lt;core::cmp::Reverse (188 samples, 0.11%)</title><rect x="2.9338%" y="1477" width="0.1089%" height="15" fill="rgb(238,164,29)" fg:x="5067" fg:w="188"/><text x="3.1838%" y="1487.50"></text></g><g><title>boids.exe`alloc::collections::binary_heap::impl$10::pop::closure$0(alloc::collections::binary_heap::impl$10::pop::closure_env$0&lt;core::cmp::Reverse&lt;boids::LocalBoid&gt;,alloc::alloc::Global&gt;, core::cmp::Reverse (188 samples, 0.11%)</title><rect x="2.9338%" y="1461" width="0.1089%" height="15" fill="rgb(224,25,9)" fg:x="5067" fg:w="188"/><text x="3.1838%" y="1471.50"></text></g><g><title>boids.exe`alloc::collections::binary_heap::BinaryHeap&lt;core::cmp::Reverse&lt;boids::LocalBoid&gt;,alloc::alloc::Global&gt;::sift_down_to_bottom (185 samples, 0.11%)</title><rect x="2.9356%" y="1445" width="0.1071%" height="15" fill="rgb(244,153,23)" fg:x="5070" fg:w="185"/><text x="3.1856%" y="1455.50"></text></g><g><title>boids.exe`core::cmp::impl$1::ge(core::cmp::Reverse&lt;boids::LocalBoid&gt;*, core::cmp::Reverse (535 samples, 0.31%)</title><rect x="3.6066%" y="1381" width="0.3098%" height="15" fill="rgb(212,203,14)" fg:x="6229" fg:w="535"/><text x="3.8566%" y="1391.50"></text></g><g><title>boids.exe`core::cmp::PartialOrd::ge (535 samples, 0.31%)</title><rect x="3.6066%" y="1365" width="0.3098%" height="15" fill="rgb(220,164,20)" fg:x="6229" fg:w="535"/><text x="3.8566%" y="1375.50"></text></g><g><title>boids.exe`enum2$&lt;core::option::Option&lt;core::cmp::Ordering&gt; &gt;::is_some_and(enum2$&lt;core::option::Option&lt;core::cmp::Ordering&gt; &gt;, bool (*) (535 samples, 0.31%)</title><rect x="3.6066%" y="1349" width="0.3098%" height="15" fill="rgb(222,203,48)" fg:x="6229" fg:w="535"/><text x="3.8566%" y="1359.50"></text></g><g><title>boids.exe`alloc::collections::binary_heap::Hole&lt;core::cmp::Reverse&lt;boids::LocalBoid&gt; &gt;::get (985 samples, 0.57%)</title><rect x="3.5435%" y="1397" width="0.5703%" height="15" fill="rgb(215,159,22)" fg:x="6120" fg:w="985"/><text x="3.7935%" y="1407.50"></text></g><g><title>boids.exe`core::slice::impl$0::get_unchecked(ref$&lt;slice2$&lt;core::cmp::Reverse (341 samples, 0.20%)</title><rect x="3.9164%" y="1381" width="0.1974%" height="15" fill="rgb(216,183,47)" fg:x="6764" fg:w="341"/><text x="4.1664%" y="1391.50"></text></g><g><title>boids.exe`core::slice::index::impl$2::get_unchecked(unsigned long long, ptr_const$&lt;slice2$&lt;core::cmp::Reverse (341 samples, 0.20%)</title><rect x="3.9164%" y="1365" width="0.1974%" height="15" fill="rgb(229,195,25)" fg:x="6764" fg:w="341"/><text x="4.1664%" y="1375.50"></text></g><g><title>boids.exe`core::slice::index::get_noubcheck(ptr_const$&lt;slice2$&lt;core::cmp::Reverse (341 samples, 0.20%)</title><rect x="3.9164%" y="1349" width="0.1974%" height="15" fill="rgb(224,132,51)" fg:x="6764" fg:w="341"/><text x="4.1664%" y="1359.50"></text></g><g><title>boids.exe`core::intrinsics::copy_nonoverlapping(core::cmp::Reverse&lt;boids::LocalBoid&gt;*, core::cmp::Reverse (448 samples, 0.26%)</title><rect x="4.1138%" y="1381" width="0.2594%" height="15" fill="rgb(240,63,7)" fg:x="7105" fg:w="448"/><text x="4.3638%" y="1391.50"></text></g><g><title>boids.exe`alloc::collections::binary_heap::Hole&lt;core::cmp::Reverse&lt;boids::LocalBoid&gt; &gt;::move_to (955 samples, 0.55%)</title><rect x="4.1138%" y="1397" width="0.5530%" height="15" fill="rgb(249,182,41)" fg:x="7105" fg:w="955"/><text x="4.3638%" y="1407.50"></text></g><g><title>boids.exe`core::ptr::mut_ptr::impl$0::add(core::cmp::Reverse (507 samples, 0.29%)</title><rect x="4.3732%" y="1381" width="0.2936%" height="15" fill="rgb(243,47,26)" fg:x="7553" fg:w="507"/><text x="4.6232%" y="1391.50"></text></g><g><title>boids.exe`alloc::collections::binary_heap::Hole&lt;core::cmp::Reverse&lt;boids::LocalBoid&gt; &gt;::new(ref_mut$&lt;slice2$&lt;core::cmp::Reverse (156 samples, 0.09%)</title><rect x="4.6668%" y="1397" width="0.0903%" height="15" fill="rgb(233,48,2)" fg:x="8060" fg:w="156"/><text x="4.9168%" y="1407.50"></text></g><g><title>boids.exe`core::slice::impl$0::get_unchecked(ref$&lt;slice2$&lt;core::cmp::Reverse (156 samples, 0.09%)</title><rect x="4.6668%" y="1381" width="0.0903%" height="15" fill="rgb(244,165,34)" fg:x="8060" fg:w="156"/><text x="4.9168%" y="1391.50"></text></g><g><title>boids.exe`core::cmp::impls::impl$10::le(core::cmp::Reverse&lt;boids::LocalBoid&gt;**, core::cmp::Reverse (120 samples, 0.07%)</title><rect x="4.7571%" y="1397" width="0.0695%" height="15" fill="rgb(207,89,7)" fg:x="8216" fg:w="120"/><text x="5.0071%" y="1407.50"></text></g><g><title>boids.exe`alloc::vec::Vec&lt;boids::LocalBoid,alloc::alloc::Global&gt;::new (4,213 samples, 2.44%)</title><rect x="3.0427%" y="1493" width="2.4393%" height="15" fill="rgb(244,117,36)" fg:x="5255" fg:w="4213"/><text x="3.2927%" y="1503.50">bo..</text></g><g><title>boids.exe`alloc::collections::binary_heap::impl$51::from_iter&lt;core::cmp::Reverse&lt;boids::LocalBoid&gt;,alloc::vec::into_iter::IntoIter&lt;core::cmp::Reverse&lt;boids::LocalBoid&gt;,alloc::alloc::Global&gt; &gt;(alloc::vec::into_iter::IntoIter&lt;core::cmp::Reverse (4,213 samples, 2.44%)</title><rect x="3.0427%" y="1477" width="2.4393%" height="15" fill="rgb(226,144,34)" fg:x="5255" fg:w="4213"/><text x="3.2927%" y="1487.50">bo..</text></g><g><title>boids.exe`alloc::collections::binary_heap::impl$48::from(alloc::vec::Vec&lt;core::cmp::Reverse (4,213 samples, 2.44%)</title><rect x="3.0427%" y="1461" width="2.4393%" height="15" fill="rgb(213,23,19)" fg:x="5255" fg:w="4213"/><text x="3.2927%" y="1471.50">bo..</text></g><g><title>boids.exe`alloc::collections::binary_heap::BinaryHeap&lt;core::cmp::Reverse&lt;boids::LocalBoid&gt;,alloc::alloc::Global&gt;::rebuild (4,212 samples, 2.44%)</title><rect x="3.0433%" y="1445" width="2.4388%" height="15" fill="rgb(217,75,12)" fg:x="5256" fg:w="4212"/><text x="3.2933%" y="1455.50">bo..</text></g><g><title>boids.exe`alloc::collections::binary_heap::BinaryHeap&lt;core::cmp::Reverse&lt;boids::LocalBoid&gt;,alloc::alloc::Global&gt;::sift_down (3,987 samples, 2.31%)</title><rect x="3.1735%" y="1429" width="2.3085%" height="15" fill="rgb(224,159,17)" fg:x="5481" fg:w="3987"/><text x="3.4235%" y="1439.50">b..</text></g><g><title>boids.exe`alloc::collections::binary_heap::BinaryHeap&lt;core::cmp::Reverse&lt;boids::LocalBoid&gt;,alloc::alloc::Global&gt;::sift_down_range (3,987 samples, 2.31%)</title><rect x="3.1735%" y="1413" width="2.3085%" height="15" fill="rgb(217,118,1)" fg:x="5481" fg:w="3987"/><text x="3.4235%" y="1423.50">b..</text></g><g><title>boids.exe`core::ptr::drop_in_place(alloc::collections::binary_heap::Hole&lt;core::cmp::Reverse (1,132 samples, 0.66%)</title><rect x="4.8266%" y="1397" width="0.6554%" height="15" fill="rgb(232,180,48)" fg:x="8336" fg:w="1132"/><text x="5.0766%" y="1407.50"></text></g><g><title>boids.exe`alloc::collections::binary_heap::impl$13::drop(alloc::collections::binary_heap::Hole&lt;core::cmp::Reverse (1,132 samples, 0.66%)</title><rect x="4.8266%" y="1381" width="0.6554%" height="15" fill="rgb(230,27,33)" fg:x="8336" fg:w="1132"/><text x="5.0766%" y="1391.50"></text></g><g><title>boids.exe`core::slice::impl$0::get_unchecked_mut(ref_mut$&lt;slice2$&lt;core::cmp::Reverse (1,132 samples, 0.66%)</title><rect x="4.8266%" y="1365" width="0.6554%" height="15" fill="rgb(205,31,21)" fg:x="8336" fg:w="1132"/><text x="5.0766%" y="1375.50"></text></g><g><title>boids.exe`core::slice::index::impl$2::get_unchecked_mut(unsigned long long, ptr_mut$&lt;slice2$&lt;core::cmp::Reverse (865 samples, 0.50%)</title><rect x="4.9812%" y="1349" width="0.5008%" height="15" fill="rgb(253,59,4)" fg:x="8603" fg:w="865"/><text x="5.2312%" y="1359.50"></text></g><g><title>boids.exe`core::slice::index::get_mut_noubcheck(ptr_mut$&lt;slice2$&lt;core::cmp::Reverse (865 samples, 0.50%)</title><rect x="4.9812%" y="1333" width="0.5008%" height="15" fill="rgb(224,201,9)" fg:x="8603" fg:w="865"/><text x="5.2312%" y="1343.50"></text></g><g><title>`0x7FF89D8F3535 (23 samples, 0.01%)</title><rect x="5.4919%" y="1317" width="0.0133%" height="15" fill="rgb(229,206,30)" fg:x="9485" fg:w="23"/><text x="5.7419%" y="1327.50"></text></g><g><title>`0x7FF89D8F22F7 (44 samples, 0.03%)</title><rect x="5.4907%" y="1333" width="0.0255%" height="15" fill="rgb(212,67,47)" fg:x="9483" fg:w="44"/><text x="5.7407%" y="1343.50"></text></g><g><title>`0x7FF89D8F21BA (49 samples, 0.03%)</title><rect x="5.4901%" y="1349" width="0.0284%" height="15" fill="rgb(211,96,50)" fg:x="9482" fg:w="49"/><text x="5.7401%" y="1359.50"></text></g><g><title>boids.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (59 samples, 0.03%)</title><rect x="5.4855%" y="1397" width="0.0342%" height="15" fill="rgb(252,114,18)" fg:x="9474" fg:w="59"/><text x="5.7355%" y="1407.50"></text></g><g><title>boids.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (59 samples, 0.03%)</title><rect x="5.4855%" y="1381" width="0.0342%" height="15" fill="rgb(223,58,37)" fg:x="9474" fg:w="59"/><text x="5.7355%" y="1391.50"></text></g><g><title>boids.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (59 samples, 0.03%)</title><rect x="5.4855%" y="1365" width="0.0342%" height="15" fill="rgb(237,70,4)" fg:x="9474" fg:w="59"/><text x="5.7355%" y="1375.50"></text></g><g><title>boids.exe`alloc::raw_vec::RawVec&lt;boids::LocalBoid,alloc::alloc::Global&gt;::grow_one&lt;boids::LocalBoid,alloc::alloc::Global&gt; (65 samples, 0.04%)</title><rect x="5.4832%" y="1477" width="0.0376%" height="15" fill="rgb(244,85,46)" fg:x="9470" fg:w="65"/><text x="5.7332%" y="1487.50"></text></g><g><title>boids.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (62 samples, 0.04%)</title><rect x="5.4849%" y="1461" width="0.0359%" height="15" fill="rgb(223,39,52)" fg:x="9473" fg:w="62"/><text x="5.7349%" y="1471.50"></text></g><g><title>boids.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (62 samples, 0.04%)</title><rect x="5.4849%" y="1445" width="0.0359%" height="15" fill="rgb(218,200,14)" fg:x="9473" fg:w="62"/><text x="5.7349%" y="1455.50"></text></g><g><title>boids.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (62 samples, 0.04%)</title><rect x="5.4849%" y="1429" width="0.0359%" height="15" fill="rgb(208,171,16)" fg:x="9473" fg:w="62"/><text x="5.7349%" y="1439.50"></text></g><g><title>boids.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (61 samples, 0.04%)</title><rect x="5.4855%" y="1413" width="0.0353%" height="15" fill="rgb(234,200,18)" fg:x="9474" fg:w="61"/><text x="5.7355%" y="1423.50"></text></g><g><title>boids.exe`alloc::vec::Vec&lt;boids::LocalBoid,alloc::alloc::Global&gt;::push (98 samples, 0.06%)</title><rect x="5.4820%" y="1493" width="0.0567%" height="15" fill="rgb(228,45,11)" fg:x="9468" fg:w="98"/><text x="5.7320%" y="1503.50"></text></g><g><title>boids.exe`core::ptr::write (28 samples, 0.02%)</title><rect x="5.5226%" y="1477" width="0.0162%" height="15" fill="rgb(237,182,11)" fg:x="9538" fg:w="28"/><text x="5.7726%" y="1487.50"></text></g><g><title>`0x7FF89D8F29EF (39 samples, 0.02%)</title><rect x="6.3262%" y="1189" width="0.0226%" height="15" fill="rgb(241,175,49)" fg:x="10926" fg:w="39"/><text x="6.5762%" y="1199.50"></text></g><g><title>`0x7FF89D8ED269 (38 samples, 0.02%)</title><rect x="6.3268%" y="1173" width="0.0220%" height="15" fill="rgb(247,38,35)" fg:x="10927" fg:w="38"/><text x="6.5768%" y="1183.50"></text></g><g><title>`0x7FF89D957A17 (44 samples, 0.03%)</title><rect x="6.3581%" y="1173" width="0.0255%" height="15" fill="rgb(228,39,49)" fg:x="10981" fg:w="44"/><text x="6.6081%" y="1183.50"></text></g><g><title>`0x7FF89D957A1B (22 samples, 0.01%)</title><rect x="6.3835%" y="1173" width="0.0127%" height="15" fill="rgb(226,101,26)" fg:x="11025" fg:w="22"/><text x="6.6335%" y="1183.50"></text></g><g><title>`0x7FF89D957A22 (18 samples, 0.01%)</title><rect x="6.3963%" y="1173" width="0.0104%" height="15" fill="rgb(206,141,19)" fg:x="11047" fg:w="18"/><text x="6.6463%" y="1183.50"></text></g><g><title>`0x7FF89D957A26 (36 samples, 0.02%)</title><rect x="6.4067%" y="1173" width="0.0208%" height="15" fill="rgb(211,200,13)" fg:x="11065" fg:w="36"/><text x="6.6567%" y="1183.50"></text></g><g><title>`0x7FF89D8F2B2E (181 samples, 0.10%)</title><rect x="6.3511%" y="1189" width="0.1048%" height="15" fill="rgb(241,121,6)" fg:x="10969" fg:w="181"/><text x="6.6011%" y="1199.50"></text></g><g><title>`0x7FF89D957A2A (49 samples, 0.03%)</title><rect x="6.4275%" y="1173" width="0.0284%" height="15" fill="rgb(234,221,29)" fg:x="11101" fg:w="49"/><text x="6.6775%" y="1183.50"></text></g><g><title>`0x7FF89D8E9C38 (22 samples, 0.01%)</title><rect x="6.4594%" y="1141" width="0.0127%" height="15" fill="rgb(229,136,5)" fg:x="11156" fg:w="22"/><text x="6.7094%" y="1151.50"></text></g><g><title>`0x7FF89D8F5049 (22 samples, 0.01%)</title><rect x="6.4594%" y="1125" width="0.0127%" height="15" fill="rgb(238,36,11)" fg:x="11156" fg:w="22"/><text x="6.7094%" y="1135.50"></text></g><g><title>`0x7FF89D8F2B41 (31 samples, 0.02%)</title><rect x="6.4559%" y="1189" width="0.0179%" height="15" fill="rgb(251,55,41)" fg:x="11150" fg:w="31"/><text x="6.7059%" y="1199.50"></text></g><g><title>`0x7FF89D8EB021 (31 samples, 0.02%)</title><rect x="6.4559%" y="1173" width="0.0179%" height="15" fill="rgb(242,34,40)" fg:x="11150" fg:w="31"/><text x="6.7059%" y="1183.50"></text></g><g><title>`0x7FF89D8EC354 (29 samples, 0.02%)</title><rect x="6.4571%" y="1157" width="0.0168%" height="15" fill="rgb(215,42,17)" fg:x="11152" fg:w="29"/><text x="6.7071%" y="1167.50"></text></g><g><title>`0x7FF89D8ECCCA (41 samples, 0.02%)</title><rect x="6.4837%" y="1173" width="0.0237%" height="15" fill="rgb(207,44,46)" fg:x="11198" fg:w="41"/><text x="6.7337%" y="1183.50"></text></g><g><title>`0x7FF89D8F3535 (81 samples, 0.05%)</title><rect x="6.4739%" y="1189" width="0.0469%" height="15" fill="rgb(211,206,28)" fg:x="11181" fg:w="81"/><text x="6.7239%" y="1199.50"></text></g><g><title>`0x7FF89D8ED269 (21 samples, 0.01%)</title><rect x="6.5086%" y="1173" width="0.0122%" height="15" fill="rgb(237,167,16)" fg:x="11241" fg:w="21"/><text x="6.7586%" y="1183.50"></text></g><g><title>`0x7FF89D8F3580 (53 samples, 0.03%)</title><rect x="6.5208%" y="1189" width="0.0307%" height="15" fill="rgb(233,66,6)" fg:x="11262" fg:w="53"/><text x="6.7708%" y="1199.50"></text></g><g><title>`0x7FF89D8F3592 (25 samples, 0.01%)</title><rect x="6.5514%" y="1189" width="0.0145%" height="15" fill="rgb(246,123,29)" fg:x="11315" fg:w="25"/><text x="6.8014%" y="1199.50"></text></g><g><title>`0x7FF89D8EB021 (24 samples, 0.01%)</title><rect x="6.5520%" y="1173" width="0.0139%" height="15" fill="rgb(209,62,40)" fg:x="11316" fg:w="24"/><text x="6.8020%" y="1183.50"></text></g><g><title>`0x7FF89D8F22F7 (446 samples, 0.26%)</title><rect x="6.3083%" y="1205" width="0.2582%" height="15" fill="rgb(218,4,25)" fg:x="10895" fg:w="446"/><text x="6.5583%" y="1215.50"></text></g><g><title>`0x7FF89D8F21BA (456 samples, 0.26%)</title><rect x="6.3071%" y="1221" width="0.2640%" height="15" fill="rgb(253,91,49)" fg:x="10893" fg:w="456"/><text x="6.5571%" y="1231.50"></text></g><g><title>boids.exe`alloc::vec::Vec&lt;core::cmp::Reverse&lt;boids::LocalBoid&gt;,alloc::alloc::Global&gt;::as_mut_ptr (1,459 samples, 0.84%)</title><rect x="5.7316%" y="1397" width="0.8448%" height="15" fill="rgb(228,155,29)" fg:x="9899" fg:w="1459"/><text x="5.9816%" y="1407.50"></text></g><g><title>boids.exe`alloc::raw_vec::RawVec&lt;core::cmp::Reverse&lt;boids::LocalBoid&gt;,alloc::alloc::Global&gt;::ptr (479 samples, 0.28%)</title><rect x="6.2990%" y="1381" width="0.2773%" height="15" fill="rgb(243,57,37)" fg:x="10879" fg:w="479"/><text x="6.5490%" y="1391.50"></text></g><g><title>boids.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (479 samples, 0.28%)</title><rect x="6.2990%" y="1365" width="0.2773%" height="15" fill="rgb(244,167,17)" fg:x="10879" fg:w="479"/><text x="6.5490%" y="1375.50"></text></g><g><title>boids.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (479 samples, 0.28%)</title><rect x="6.2990%" y="1349" width="0.2773%" height="15" fill="rgb(207,181,38)" fg:x="10879" fg:w="479"/><text x="6.5490%" y="1359.50"></text></g><g><title>boids.exe`alloc::raw_vec::impl$4::reserve::do_reserve_and_handle&lt;alloc::alloc::Global&gt;(alloc::raw_vec::RawVecInner (479 samples, 0.28%)</title><rect x="6.2990%" y="1333" width="0.2773%" height="15" fill="rgb(211,8,23)" fg:x="10879" fg:w="479"/><text x="6.5490%" y="1343.50"></text></g><g><title>boids.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (479 samples, 0.28%)</title><rect x="6.2990%" y="1317" width="0.2773%" height="15" fill="rgb(235,11,44)" fg:x="10879" fg:w="479"/><text x="6.5490%" y="1327.50"></text></g><g><title>boids.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (470 samples, 0.27%)</title><rect x="6.3042%" y="1301" width="0.2721%" height="15" fill="rgb(248,18,52)" fg:x="10888" fg:w="470"/><text x="6.5542%" y="1311.50"></text></g><g><title>boids.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (470 samples, 0.27%)</title><rect x="6.3042%" y="1285" width="0.2721%" height="15" fill="rgb(208,4,7)" fg:x="10888" fg:w="470"/><text x="6.5542%" y="1295.50"></text></g><g><title>boids.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (469 samples, 0.27%)</title><rect x="6.3048%" y="1269" width="0.2716%" height="15" fill="rgb(240,17,39)" fg:x="10889" fg:w="469"/><text x="6.5548%" y="1279.50"></text></g><g><title>boids.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (469 samples, 0.27%)</title><rect x="6.3048%" y="1253" width="0.2716%" height="15" fill="rgb(207,170,3)" fg:x="10889" fg:w="469"/><text x="6.5548%" y="1263.50"></text></g><g><title>boids.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (469 samples, 0.27%)</title><rect x="6.3048%" y="1237" width="0.2716%" height="15" fill="rgb(236,100,52)" fg:x="10889" fg:w="469"/><text x="6.5548%" y="1247.50"></text></g><g><title>`0x7FF89AFEF226 (124 samples, 0.07%)</title><rect x="7.2214%" y="1317" width="0.0718%" height="15" fill="rgb(246,78,51)" fg:x="12472" fg:w="124"/><text x="7.4714%" y="1327.50"></text></g><g><title>`0x7FF89AFEF22A (296 samples, 0.17%)</title><rect x="7.2932%" y="1317" width="0.1714%" height="15" fill="rgb(211,17,15)" fg:x="12596" fg:w="296"/><text x="7.5432%" y="1327.50"></text></g><g><title>`0x7FF89AFEF234 (68 samples, 0.04%)</title><rect x="7.4645%" y="1317" width="0.0394%" height="15" fill="rgb(209,59,46)" fg:x="12892" fg:w="68"/><text x="7.7145%" y="1327.50"></text></g><g><title>`0x7FF89AFEF237 (23 samples, 0.01%)</title><rect x="7.5039%" y="1317" width="0.0133%" height="15" fill="rgb(210,92,25)" fg:x="12960" fg:w="23"/><text x="7.7539%" y="1327.50"></text></g><g><title>`0x7FF89AFEF23A (124 samples, 0.07%)</title><rect x="7.5172%" y="1317" width="0.0718%" height="15" fill="rgb(238,174,52)" fg:x="12983" fg:w="124"/><text x="7.7672%" y="1327.50"></text></g><g><title>`0x7FF89AFEF241 (89 samples, 0.05%)</title><rect x="7.5890%" y="1317" width="0.0515%" height="15" fill="rgb(230,73,7)" fg:x="13107" fg:w="89"/><text x="7.8390%" y="1327.50"></text></g><g><title>`0x7FF89AFEF244 (118 samples, 0.07%)</title><rect x="7.6406%" y="1317" width="0.0683%" height="15" fill="rgb(243,124,40)" fg:x="13196" fg:w="118"/><text x="7.8906%" y="1327.50"></text></g><g><title>`0x7FF89AFEF24A (238 samples, 0.14%)</title><rect x="7.7089%" y="1317" width="0.1378%" height="15" fill="rgb(244,170,11)" fg:x="13314" fg:w="238"/><text x="7.9589%" y="1327.50"></text></g><g><title>`0x7FF89AFEF24F (519 samples, 0.30%)</title><rect x="7.8467%" y="1317" width="0.3005%" height="15" fill="rgb(207,114,54)" fg:x="13552" fg:w="519"/><text x="8.0967%" y="1327.50"></text></g><g><title>`0x7FF89AFEF253 (40 samples, 0.02%)</title><rect x="8.1472%" y="1317" width="0.0232%" height="15" fill="rgb(205,42,20)" fg:x="14071" fg:w="40"/><text x="8.3972%" y="1327.50"></text></g><g><title>`0x7FF89AFEF259 (53 samples, 0.03%)</title><rect x="8.1767%" y="1317" width="0.0307%" height="15" fill="rgb(230,30,28)" fg:x="14122" fg:w="53"/><text x="8.4267%" y="1327.50"></text></g><g><title>`0x7FF89AFEF25C (125 samples, 0.07%)</title><rect x="8.2074%" y="1317" width="0.0724%" height="15" fill="rgb(205,73,54)" fg:x="14175" fg:w="125"/><text x="8.4574%" y="1327.50"></text></g><g><title>`0x7FF89AFEF266 (31 samples, 0.02%)</title><rect x="8.2879%" y="1317" width="0.0179%" height="15" fill="rgb(254,227,23)" fg:x="14314" fg:w="31"/><text x="8.5379%" y="1327.50"></text></g><g><title>`0x7FF89AFEF26B (147 samples, 0.09%)</title><rect x="8.3058%" y="1317" width="0.0851%" height="15" fill="rgb(228,202,34)" fg:x="14345" fg:w="147"/><text x="8.5558%" y="1327.50"></text></g><g><title>`0x7FF89AFEF26E (220 samples, 0.13%)</title><rect x="8.3909%" y="1317" width="0.1274%" height="15" fill="rgb(222,225,37)" fg:x="14492" fg:w="220"/><text x="8.6409%" y="1327.50"></text></g><g><title>`0x7FF89AFEF271 (96 samples, 0.06%)</title><rect x="8.5183%" y="1317" width="0.0556%" height="15" fill="rgb(221,14,54)" fg:x="14712" fg:w="96"/><text x="8.7683%" y="1327.50"></text></g><g><title>`0x7FF89AFEF274 (65 samples, 0.04%)</title><rect x="8.5739%" y="1317" width="0.0376%" height="15" fill="rgb(254,102,2)" fg:x="14808" fg:w="65"/><text x="8.8239%" y="1327.50"></text></g><g><title>`0x7FF89AFEF278 (53 samples, 0.03%)</title><rect x="8.6115%" y="1317" width="0.0307%" height="15" fill="rgb(232,104,17)" fg:x="14873" fg:w="53"/><text x="8.8615%" y="1327.50"></text></g><g><title>`0x7FF89AFEF27D (114 samples, 0.07%)</title><rect x="8.6422%" y="1317" width="0.0660%" height="15" fill="rgb(250,220,14)" fg:x="14926" fg:w="114"/><text x="8.8922%" y="1327.50"></text></g><g><title>`0x7FF89AFEF27F (39 samples, 0.02%)</title><rect x="8.7082%" y="1317" width="0.0226%" height="15" fill="rgb(241,158,9)" fg:x="15040" fg:w="39"/><text x="8.9582%" y="1327.50"></text></g><g><title>`0x7FF89AFEF281 (64 samples, 0.04%)</title><rect x="8.7308%" y="1317" width="0.0371%" height="15" fill="rgb(246,9,43)" fg:x="15079" fg:w="64"/><text x="8.9808%" y="1327.50"></text></g><g><title>`0x7FF89AFEF284 (118 samples, 0.07%)</title><rect x="8.7679%" y="1317" width="0.0683%" height="15" fill="rgb(206,73,33)" fg:x="15143" fg:w="118"/><text x="9.0179%" y="1327.50"></text></g><g><title>`0x7FF89AFEF290 (213 samples, 0.12%)</title><rect x="8.8362%" y="1317" width="0.1233%" height="15" fill="rgb(222,79,8)" fg:x="15261" fg:w="213"/><text x="9.0862%" y="1327.50"></text></g><g><title>`0x7FF89AFEF299 (224 samples, 0.13%)</title><rect x="8.9595%" y="1317" width="0.1297%" height="15" fill="rgb(234,8,54)" fg:x="15474" fg:w="224"/><text x="9.2095%" y="1327.50"></text></g><g><title>`0x7FF89AFEF29E (43 samples, 0.02%)</title><rect x="9.0892%" y="1317" width="0.0249%" height="15" fill="rgb(209,134,38)" fg:x="15698" fg:w="43"/><text x="9.3392%" y="1327.50"></text></g><g><title>`0x7FF89AFEF2A7 (42 samples, 0.02%)</title><rect x="9.1141%" y="1317" width="0.0243%" height="15" fill="rgb(230,127,29)" fg:x="15741" fg:w="42"/><text x="9.3641%" y="1327.50"></text></g><g><title>`0x7FF89AFEF2CF (31 samples, 0.02%)</title><rect x="9.1384%" y="1317" width="0.0179%" height="15" fill="rgb(242,44,41)" fg:x="15783" fg:w="31"/><text x="9.3884%" y="1327.50"></text></g><g><title>`0x7FF89AFEF2D5 (463 samples, 0.27%)</title><rect x="9.1564%" y="1317" width="0.2681%" height="15" fill="rgb(222,56,43)" fg:x="15814" fg:w="463"/><text x="9.4064%" y="1327.50"></text></g><g><title>`0x7FF89AFEF2E0 (85 samples, 0.05%)</title><rect x="9.4250%" y="1317" width="0.0492%" height="15" fill="rgb(238,39,47)" fg:x="16278" fg:w="85"/><text x="9.6750%" y="1327.50"></text></g><g><title>`0x7FF89AFEF2E2 (105 samples, 0.06%)</title><rect x="9.4743%" y="1317" width="0.0608%" height="15" fill="rgb(226,79,43)" fg:x="16363" fg:w="105"/><text x="9.7243%" y="1327.50"></text></g><g><title>`0x7FF89AFEF2E5 (485 samples, 0.28%)</title><rect x="9.5351%" y="1317" width="0.2808%" height="15" fill="rgb(242,105,53)" fg:x="16468" fg:w="485"/><text x="9.7851%" y="1327.50"></text></g><g><title>`0x7FF89AFEF2E8 (132 samples, 0.08%)</title><rect x="9.8159%" y="1317" width="0.0764%" height="15" fill="rgb(251,132,46)" fg:x="16953" fg:w="132"/><text x="10.0659%" y="1327.50"></text></g><g><title>`0x7FF89AFEF2F1 (490 samples, 0.28%)</title><rect x="9.8935%" y="1317" width="0.2837%" height="15" fill="rgb(231,77,14)" fg:x="17087" fg:w="490"/><text x="10.1435%" y="1327.50"></text></g><g><title>`0x7FF89AFEF2F4 (185 samples, 0.11%)</title><rect x="10.1772%" y="1317" width="0.1071%" height="15" fill="rgb(240,135,9)" fg:x="17577" fg:w="185"/><text x="10.4272%" y="1327.50"></text></g><g><title>`0x7FF89AFEF2F8 (428 samples, 0.25%)</title><rect x="10.2843%" y="1317" width="0.2478%" height="15" fill="rgb(248,109,14)" fg:x="17762" fg:w="428"/><text x="10.5343%" y="1327.50"></text></g><g><title>`0x7FF89AFEF302 (1,155 samples, 0.67%)</title><rect x="10.5408%" y="1317" width="0.6688%" height="15" fill="rgb(227,146,52)" fg:x="18205" fg:w="1155"/><text x="10.7908%" y="1327.50"></text></g><g><title>`0x7FF89AFEF307 (269 samples, 0.16%)</title><rect x="11.2095%" y="1317" width="0.1558%" height="15" fill="rgb(232,54,3)" fg:x="19360" fg:w="269"/><text x="11.4595%" y="1327.50"></text></g><g><title>`0x7FF89AFEF350 (19 samples, 0.01%)</title><rect x="11.3821%" y="1317" width="0.0110%" height="15" fill="rgb(229,201,43)" fg:x="19658" fg:w="19"/><text x="11.6321%" y="1327.50"></text></g><g><title>`0x7FF89AFEF35F (20 samples, 0.01%)</title><rect x="11.3937%" y="1317" width="0.0116%" height="15" fill="rgb(252,161,33)" fg:x="19678" fg:w="20"/><text x="11.6437%" y="1327.50"></text></g><g><title>`0x7FF89AFEF396 (72 samples, 0.04%)</title><rect x="11.4064%" y="1317" width="0.0417%" height="15" fill="rgb(226,146,40)" fg:x="19700" fg:w="72"/><text x="11.6564%" y="1327.50"></text></g><g><title>`0x7FF89AFEF39A (53 samples, 0.03%)</title><rect x="11.4481%" y="1317" width="0.0307%" height="15" fill="rgb(219,47,25)" fg:x="19772" fg:w="53"/><text x="11.6981%" y="1327.50"></text></g><g><title>`0x7FF89AFEF39E (235 samples, 0.14%)</title><rect x="11.4788%" y="1317" width="0.1361%" height="15" fill="rgb(250,135,13)" fg:x="19825" fg:w="235"/><text x="11.7288%" y="1327.50"></text></g><g><title>`0x7FF89AFEF3A2 (68 samples, 0.04%)</title><rect x="11.6148%" y="1317" width="0.0394%" height="15" fill="rgb(219,229,18)" fg:x="20060" fg:w="68"/><text x="11.8648%" y="1327.50"></text></g><g><title>`0x7FF89AFEF3A6 (176 samples, 0.10%)</title><rect x="11.6542%" y="1317" width="0.1019%" height="15" fill="rgb(217,152,27)" fg:x="20128" fg:w="176"/><text x="11.9042%" y="1327.50"></text></g><g><title>`0x7FF89AFEF3AA (50 samples, 0.03%)</title><rect x="11.7561%" y="1317" width="0.0290%" height="15" fill="rgb(225,71,47)" fg:x="20304" fg:w="50"/><text x="12.0061%" y="1327.50"></text></g><g><title>`0x7FF89AFEF3B0 (31 samples, 0.02%)</title><rect x="11.7851%" y="1317" width="0.0179%" height="15" fill="rgb(220,139,14)" fg:x="20354" fg:w="31"/><text x="12.0351%" y="1327.50"></text></g><g><title>`0x7FF89AFEF3B5 (18 samples, 0.01%)</title><rect x="11.8030%" y="1317" width="0.0104%" height="15" fill="rgb(247,54,32)" fg:x="20385" fg:w="18"/><text x="12.0530%" y="1327.50"></text></g><g><title>`0x7FF89AFEF3C1 (31 samples, 0.02%)</title><rect x="11.8175%" y="1317" width="0.0179%" height="15" fill="rgb(252,131,39)" fg:x="20410" fg:w="31"/><text x="12.0675%" y="1327.50"></text></g><g><title>`0x7FF89AFEF3CA (44 samples, 0.03%)</title><rect x="11.8354%" y="1317" width="0.0255%" height="15" fill="rgb(210,108,39)" fg:x="20441" fg:w="44"/><text x="12.0854%" y="1327.50"></text></g><g><title>`0x7FF89AFEF3CE (88 samples, 0.05%)</title><rect x="11.8609%" y="1317" width="0.0510%" height="15" fill="rgb(205,23,29)" fg:x="20485" fg:w="88"/><text x="12.1109%" y="1327.50"></text></g><g><title>`0x7FF89AFEF46A (69 samples, 0.04%)</title><rect x="11.9194%" y="1317" width="0.0400%" height="15" fill="rgb(246,139,46)" fg:x="20586" fg:w="69"/><text x="12.1694%" y="1327.50"></text></g><g><title>boids.exe`alloc::vec::spec_extend::impl$0::spec_extend(alloc::vec::Vec&lt;core::cmp::Reverse&lt;boids::LocalBoid&gt;,alloc::alloc::Global&gt;*, core::iter::adapters::map::Map&lt;core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter&lt;tuple$ (11,215 samples, 6.49%)</title><rect x="5.5411%" y="1429" width="6.4935%" height="15" fill="rgb(250,81,26)" fg:x="9570" fg:w="11215"/><text x="5.7911%" y="1439.50">boids.exe..</text></g><g><title>boids.exe`alloc::vec::Vec&lt;core::cmp::Reverse&lt;boids::LocalBoid&gt;,alloc::alloc::Global&gt;::extend_desugared(core::iter::adapters::map::Map&lt;core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter&lt;tuple$ (11,215 samples, 6.49%)</title><rect x="5.5411%" y="1413" width="6.4935%" height="15" fill="rgb(214,104,7)" fg:x="9570" fg:w="11215"/><text x="5.7911%" y="1423.50">boids.exe..</text></g><g><title>boids.exe`core::iter::adapters::map::impl$2::next(core::iter::adapters::map::Map&lt;core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter&lt;tuple$ (9,426 samples, 5.46%)</title><rect x="6.5769%" y="1397" width="5.4577%" height="15" fill="rgb(233,189,8)" fg:x="11359" fg:w="9426"/><text x="6.8269%" y="1407.50">boids.e..</text></g><g><title>boids.exe`enum2$&lt;core::option::Option&lt;ref$&lt;tuple$&lt;bevy_ecs::entity::Entity,glam::f32::vec2::Vec2,glam::f32::vec2::Vec2&gt; &gt; &gt; &gt;::map(enum2$&lt;core::option::Option&lt;ref$&lt;tuple$ (9,410 samples, 5.45%)</title><rect x="6.5862%" y="1381" width="5.4484%" height="15" fill="rgb(228,141,17)" fg:x="11375" fg:w="9410"/><text x="6.8362%" y="1391.50">boids.e..</text></g><g><title>boids.exe`core::ops::function::impls::impl$4::call_once(boids::local_n_boid_query::closure_env$1*, tuple$ (9,410 samples, 5.45%)</title><rect x="6.5862%" y="1365" width="5.4484%" height="15" fill="rgb(247,157,1)" fg:x="11375" fg:w="9410"/><text x="6.8362%" y="1375.50">boids.e..</text></g><g><title>boids.exe`boids::local_n_boid_query::closure$1(boids::local_n_boid_query::closure_env$1*, tuple$ (9,410 samples, 5.45%)</title><rect x="6.5862%" y="1349" width="5.4484%" height="15" fill="rgb(249,225,5)" fg:x="11375" fg:w="9410"/><text x="6.8362%" y="1359.50">boids.e..</text></g><g><title>boids.exe`boids::toroidal_distance (8,926 samples, 5.17%)</title><rect x="6.8664%" y="1333" width="5.1682%" height="15" fill="rgb(242,55,13)" fg:x="11859" fg:w="8926"/><text x="7.1164%" y="1343.50">boids...</text></g><g><title>boids.exe`fmodf (130 samples, 0.08%)</title><rect x="11.9594%" y="1317" width="0.0753%" height="15" fill="rgb(230,49,50)" fg:x="20655" fg:w="130"/><text x="12.2094%" y="1327.50"></text></g><g><title>boids.exe`alloc::vec::impl$16::into_iter(alloc::vec::Vec&lt;core::cmp::Reverse (11,222 samples, 6.50%)</title><rect x="5.5388%" y="1493" width="6.4976%" height="15" fill="rgb(241,111,38)" fg:x="9566" fg:w="11222"/><text x="5.7888%" y="1503.50">boids.exe..</text></g><g><title>boids.exe`core::mem::manually_drop::ManuallyDrop&lt;alloc::vec::Vec&lt;core::cmp::Reverse&lt;boids::LocalBoid&gt;,alloc::alloc::Global&gt; &gt;::new(alloc::vec::Vec&lt;core::cmp::Reverse (11,222 samples, 6.50%)</title><rect x="5.5388%" y="1477" width="6.4976%" height="15" fill="rgb(252,155,4)" fg:x="9566" fg:w="11222"/><text x="5.7888%" y="1487.50">boids.exe..</text></g><g><title>boids.exe`alloc::vec::spec_from_iter::impl$0::from_iter&lt;core::cmp::Reverse&lt;boids::LocalBoid&gt;,core::iter::adapters::map::Map&lt;core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter&lt;tuple$&lt;bevy_ecs::entity::Entity,glam::f32::vec2::Vec2,glam::f32::vec2::Vec2&gt; &gt;,boids::local_n_boid_query::closure_env$0&gt;,boids::local_n_boid_query::closure_env$1&gt; &gt;(core::iter::adapters::map::Map&lt;core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter&lt;tuple$ (11,222 samples, 6.50%)</title><rect x="5.5388%" y="1461" width="6.4976%" height="15" fill="rgb(212,69,32)" fg:x="9566" fg:w="11222"/><text x="5.7888%" y="1471.50">boids.exe..</text></g><g><title>boids.exe`alloc::vec::spec_from_iter_nested::impl$0::from_iter(core::iter::adapters::map::Map&lt;core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter&lt;tuple$ (11,222 samples, 6.50%)</title><rect x="5.5388%" y="1445" width="6.4976%" height="15" fill="rgb(243,107,47)" fg:x="9566" fg:w="11222"/><text x="5.7888%" y="1455.50">boids.exe..</text></g><g><title>`0x7FF89D8E9C38 (20 samples, 0.01%)</title><rect x="12.0410%" y="1349" width="0.0116%" height="15" fill="rgb(247,130,12)" fg:x="20796" fg:w="20"/><text x="12.2910%" y="1359.50"></text></g><g><title>`0x7FF89D8F5049 (18 samples, 0.01%)</title><rect x="12.0422%" y="1333" width="0.0104%" height="15" fill="rgb(233,74,16)" fg:x="20798" fg:w="18"/><text x="12.2922%" y="1343.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(alloc::collections::binary_heap::BinaryHeap&lt;core::cmp::Reverse (32 samples, 0.02%)</title><rect x="12.0364%" y="1493" width="0.0185%" height="15" fill="rgb(208,58,18)" fg:x="20788" fg:w="32"/><text x="12.2864%" y="1503.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;core::cmp::Reverse (32 samples, 0.02%)</title><rect x="12.0364%" y="1477" width="0.0185%" height="15" fill="rgb(242,225,1)" fg:x="20788" fg:w="32"/><text x="12.2864%" y="1487.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec&lt;core::cmp::Reverse (32 samples, 0.02%)</title><rect x="12.0364%" y="1461" width="0.0185%" height="15" fill="rgb(249,39,40)" fg:x="20788" fg:w="32"/><text x="12.2864%" y="1471.50"></text></g><g><title>boids.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec&lt;core::cmp::Reverse (32 samples, 0.02%)</title><rect x="12.0364%" y="1445" width="0.0185%" height="15" fill="rgb(207,72,44)" fg:x="20788" fg:w="32"/><text x="12.2864%" y="1455.50"></text></g><g><title>boids.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (32 samples, 0.02%)</title><rect x="12.0364%" y="1429" width="0.0185%" height="15" fill="rgb(215,193,12)" fg:x="20788" fg:w="32"/><text x="12.2864%" y="1439.50"></text></g><g><title>boids.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (32 samples, 0.02%)</title><rect x="12.0364%" y="1413" width="0.0185%" height="15" fill="rgb(248,41,39)" fg:x="20788" fg:w="32"/><text x="12.2864%" y="1423.50"></text></g><g><title>boids.exe`alloc::alloc::dealloc (32 samples, 0.02%)</title><rect x="12.0364%" y="1397" width="0.0185%" height="15" fill="rgb(253,85,4)" fg:x="20788" fg:w="32"/><text x="12.2864%" y="1407.50"></text></g><g><title>`0x7FF89D8EB021 (32 samples, 0.02%)</title><rect x="12.0364%" y="1381" width="0.0185%" height="15" fill="rgb(243,70,31)" fg:x="20788" fg:w="32"/><text x="12.2864%" y="1391.50"></text></g><g><title>`0x7FF89D8EC354 (31 samples, 0.02%)</title><rect x="12.0369%" y="1365" width="0.0179%" height="15" fill="rgb(253,195,26)" fg:x="20789" fg:w="31"/><text x="12.2869%" y="1375.50"></text></g><g><title>boids.exe`boids::local_n_boid_query(bevy_ecs::entity::Entity, glam::f32::vec2::Vec2, ref$&lt;slice2$&lt;tuple$ (15,767 samples, 9.13%)</title><rect x="2.9263%" y="1509" width="9.1292%" height="15" fill="rgb(243,42,11)" fg:x="5054" fg:w="15767"/><text x="3.1763%" y="1519.50">boids.exe`boi..</text></g><g><title>boids.exe`bevy_ecs::system::schedule_system::impl$1::run_unsafe&lt;bevy_ecs::system::function_system::FunctionSystem&lt;void (*)(bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,ref_mut$&lt;bevy_transform::components::transform::Transform&gt;,ref_mut$&lt;boids::Boid&gt; &gt;,tuple$&lt;&gt; &gt;,bevy_ecs::change_detection::Res&lt;bevy_time::time::Time&lt;tuple$&lt;&gt; &gt; &gt;,bevy_ecs::change_detection::Res&lt;boids::BoidsParameters&gt;,bevy_ecs::system::query::Query&lt;ref$&lt;bevy_window::window::Window&gt;,bevy_ecs::query::filter::With&lt;bevy_window::window::PrimaryWindow&gt; &gt;),void (*)(bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,ref_mut$&lt;bevy_transform::components::transform::Transform&gt;,ref_mut$&lt;boids::Boid&gt; &gt;,tuple$&lt;&gt; &gt;,bevy_ecs::change_detection::Res&lt;bevy_time::time::Time&lt;tuple$&lt;&gt; &gt; &gt;,bevy_ecs::change_detection::Res&lt;boids::BoidsParameters&gt;,bevy_ecs::system::query::Query&lt;ref$&lt;bevy_window::window::Window&gt;,bevy_ecs::query::filter::With&lt;bevy_window::window::PrimaryWindow&gt; &gt;)&gt; &gt;(bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;bevy_ecs::system::function_system::FunctionSystem&lt;void (*)(bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,ref_mut$&lt;bevy_transform::components::transform::Transform&gt;,ref_mut$&lt;boids::Boid&gt; &gt;,tuple$&lt;&gt; &gt;,bevy_ecs::change_detection::Res&lt;bevy_time::time::Time&lt;tuple$&lt;&gt; &gt; &gt;,bevy_ecs::change_detection::Res&lt;boids::BoidsParameters&gt;,bevy_ecs::system::query::Query&lt;ref$&lt;bevy_window::window::Window&gt;,bevy_ecs::query::filter::With&lt;bevy_window::window::PrimaryWindow&gt; &gt;),void (*)(bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,ref_mut$&lt;bevy_transform::components::transform::Transform&gt;,ref_mut$&lt;boids::Boid&gt; &gt;,tuple$&lt;&gt; &gt;,bevy_ecs::change_detection::Res&lt;bevy_time::time::Time&lt;tuple$&lt;&gt; &gt; &gt;,bevy_ecs::change_detection::Res&lt;boids::BoidsParameters&gt;,bevy_ecs::system::query::Query&lt;ref$&lt;bevy_window::window::Window&gt;,bevy_ecs::query::filter::With&lt;bevy_window::window::PrimaryWindow&gt; &gt;)&gt; &gt;*, tuple$ (15,832 samples, 9.17%)</title><rect x="2.8921%" y="1589" width="9.1668%" height="15" fill="rgb(239,66,17)" fg:x="4995" fg:w="15832"/><text x="3.1421%" y="1599.50">boids.exe`bev..</text></g><g><title>boids.exe`bevy_ecs::system::function_system::impl$7::run_unsafe(bevy_ecs::system::function_system::FunctionSystem&lt;void (*)(bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,ref_mut$&lt;bevy_transform::components::transform::Transform&gt;,ref_mut$&lt;boids::Boid&gt; &gt;,tuple$&lt;&gt; &gt;,bevy_ecs::change_detection::Res&lt;bevy_time::time::Time&lt;tuple$&lt;&gt; &gt; &gt;,bevy_ecs::change_detection::Res&lt;boids::BoidsParameters&gt;,bevy_ecs::system::query::Query&lt;ref$&lt;bevy_window::window::Window&gt;,bevy_ecs::query::filter::With&lt;bevy_window::window::PrimaryWindow&gt; &gt;),void (*)(bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,ref_mut$&lt;bevy_transform::components::transform::Transform&gt;,ref_mut$&lt;boids::Boid&gt; &gt;,tuple$&lt;&gt; &gt;,bevy_ecs::change_detection::Res&lt;bevy_time::time::Time&lt;tuple$&lt;&gt; &gt; &gt;,bevy_ecs::change_detection::Res&lt;boids::BoidsParameters&gt;,bevy_ecs::system::query::Query&lt;ref$&lt;bevy_window::window::Window&gt;,bevy_ecs::query::filter::With&lt;bevy_window::window::PrimaryWindow&gt; &gt;)&gt;*, tuple$ (15,832 samples, 9.17%)</title><rect x="2.8921%" y="1573" width="9.1668%" height="15" fill="rgb(217,132,21)" fg:x="4995" fg:w="15832"/><text x="3.1421%" y="1583.50">boids.exe`bev..</text></g><g><title>boids.exe`core::ops::function::impls::impl$3::call_mut&lt;tuple$&lt;bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,ref_mut$&lt;bevy_transform::components::transform::Transform&gt;,ref_mut$&lt;boids::Boid&gt; &gt;,tuple$&lt;&gt; &gt;,bevy_ecs::change_detection::Res&lt;bevy_time::time::Time&lt;tuple$&lt;&gt; &gt; &gt;,bevy_ecs::change_detection::Res&lt;boids::BoidsParameters&gt;,bevy_ecs::system::query::Query&lt;ref$&lt;bevy_window::window::Window&gt;,bevy_ecs::query::filter::With&lt;bevy_window::window::PrimaryWindow&gt; &gt; &gt;,void (*)(bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,ref_mut$&lt;bevy_transform::components::transform::Transform&gt;,ref_mut$&lt;boids::Boid&gt; &gt;,tuple$&lt;&gt; &gt;,bevy_ecs::change_detection::Res&lt;bevy_time::time::Time&lt;tuple$&lt;&gt; &gt; &gt;,bevy_ecs::change_detection::Res&lt;boids::BoidsParameters&gt;,bevy_ecs::system::query::Query&lt;ref$&lt;bevy_window::window::Window&gt;,bevy_ecs::query::filter::With&lt;bevy_window::window::PrimaryWindow&gt; &gt;)&gt;(void (***)(bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,ref_mut$&lt;bevy_transform::components::transform::Transform&gt;,ref_mut$&lt;boids::Boid&gt; &gt;,tuple$&lt;&gt; &gt;, bevy_ecs::change_detection::Res&lt;bevy_time::time::Time&lt;tuple$&lt;&gt; &gt; &gt;, bevy_ecs::change_detection::Res&lt;boids::BoidsParameters&gt;, bevy_ecs::system::query::Query&lt;ref$&lt;bevy_window::window::Window&gt;,bevy_ecs::query::filter::With&lt;bevy_window::window::PrimaryWindow&gt; &gt;), bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,ref_mut$&lt;bevy_transform::components::transform::Transform&gt;,ref_mut$&lt;boids::Boid&gt; &gt;,tuple$&lt;&gt; &gt;, bevy_ecs::change_detection::Res&lt;bevy_time::time::Time&lt;tuple$&lt;&gt; &gt; &gt;, bevy_ecs::change_detection::Res&lt;boids::BoidsParameters&gt;, bevy_ecs::system::query::Query&lt;ref$&lt;bevy_window::window::Window&gt;,bevy_ecs::query::filter::With (15,832 samples, 9.17%)</title><rect x="2.8921%" y="1557" width="9.1668%" height="15" fill="rgb(252,202,21)" fg:x="4995" fg:w="15832"/><text x="3.1421%" y="1567.50">boids.exe`cor..</text></g><g><title>boids.exe`core::ops::function::FnMut::call_mut(void (**)(bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,ref_mut$&lt;bevy_transform::components::transform::Transform&gt;,ref_mut$&lt;boids::Boid&gt; &gt;,tuple$&lt;&gt; &gt;, bevy_ecs::change_detection::Res&lt;bevy_time::time::Time&lt;tuple$&lt;&gt; &gt; &gt;, bevy_ecs::change_detection::Res&lt;boids::BoidsParameters&gt;, bevy_ecs::system::query::Query&lt;ref$&lt;bevy_window::window::Window&gt;,bevy_ecs::query::filter::With&lt;bevy_window::window::PrimaryWindow&gt; &gt;), bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,ref_mut$&lt;bevy_transform::components::transform::Transform&gt;,ref_mut$&lt;boids::Boid&gt; &gt;,tuple$&lt;&gt; &gt;, bevy_ecs::change_detection::Res&lt;bevy_time::time::Time&lt;tuple$&lt;&gt; &gt; &gt;, bevy_ecs::change_detection::Res&lt;boids::BoidsParameters&gt;, bevy_ecs::system::query::Query&lt;ref$&lt;bevy_window::window::Window&gt;,bevy_ecs::query::filter::With (15,832 samples, 9.17%)</title><rect x="2.8921%" y="1541" width="9.1668%" height="15" fill="rgb(233,98,36)" fg:x="4995" fg:w="15832"/><text x="3.1421%" y="1551.50">boids.exe`cor..</text></g><g><title>boids.exe`boids::update_boids(bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,ref_mut$&lt;bevy_transform::components::transform::Transform&gt;,ref_mut$&lt;boids::Boid&gt; &gt;,tuple$&lt;&gt; &gt;, bevy_ecs::change_detection::Res&lt;bevy_time::time::Time&lt;tuple$&lt;&gt; &gt; &gt;, bevy_ecs::change_detection::Res&lt;boids::BoidsParameters&gt;, bevy_ecs::system::query::Query&lt;ref$&lt;bevy_window::window::Window&gt;,bevy_ecs::query::filter::With (15,832 samples, 9.17%)</title><rect x="2.8921%" y="1525" width="9.1668%" height="15" fill="rgb(216,153,54)" fg:x="4995" fg:w="15832"/><text x="3.1421%" y="1535.50">boids.exe`boi..</text></g><g><title>boids.exe`bevy_ecs::system::schedule_system::impl$1::run_unsafe&lt;bevy_ecs::system::function_system::FunctionSystem&lt;void (*)(bevy_egui::EguiContexts,bevy_ecs::change_detection::ResMut&lt;boids::BoidsParameters&gt;,bevy_ecs::system::commands::Commands,bevy_ecs::system::query::Query&lt;bevy_ecs::entity::Entity,bevy_ecs::query::filter::With&lt;boids::Boid&gt; &gt;),void (*)(bevy_egui::EguiContexts,bevy_ecs::change_detection::ResMut&lt;boids::BoidsParameters&gt;,bevy_ecs::system::commands::Commands,bevy_ecs::system::query::Query&lt;bevy_ecs::entity::Entity,bevy_ecs::query::filter::With&lt;boids::Boid&gt; &gt;)&gt; &gt;(bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;bevy_ecs::system::function_system::FunctionSystem&lt;void (*)(bevy_egui::EguiContexts,bevy_ecs::change_detection::ResMut&lt;boids::BoidsParameters&gt;,bevy_ecs::system::commands::Commands,bevy_ecs::system::query::Query&lt;bevy_ecs::entity::Entity,bevy_ecs::query::filter::With&lt;boids::Boid&gt; &gt;),void (*)(bevy_egui::EguiContexts,bevy_ecs::change_detection::ResMut&lt;boids::BoidsParameters&gt;,bevy_ecs::system::commands::Commands,bevy_ecs::system::query::Query&lt;bevy_ecs::entity::Entity,bevy_ecs::query::filter::With&lt;boids::Boid&gt; &gt;)&gt; &gt;*, tuple$ (25 samples, 0.01%)</title><rect x="12.0694%" y="1589" width="0.0145%" height="15" fill="rgb(250,99,7)" fg:x="20845" fg:w="25"/><text x="12.3194%" y="1599.50"></text></g><g><title>boids.exe`bevy_ecs::system::function_system::impl$7::run_unsafe(bevy_ecs::system::function_system::FunctionSystem&lt;void (*)(bevy_egui::EguiContexts,bevy_ecs::change_detection::ResMut&lt;boids::BoidsParameters&gt;,bevy_ecs::system::commands::Commands,bevy_ecs::system::query::Query&lt;bevy_ecs::entity::Entity,bevy_ecs::query::filter::With&lt;boids::Boid&gt; &gt;),void (*)(bevy_egui::EguiContexts,bevy_ecs::change_detection::ResMut&lt;boids::BoidsParameters&gt;,bevy_ecs::system::commands::Commands,bevy_ecs::system::query::Query&lt;bevy_ecs::entity::Entity,bevy_ecs::query::filter::With&lt;boids::Boid&gt; &gt;)&gt;*, tuple$ (25 samples, 0.01%)</title><rect x="12.0694%" y="1573" width="0.0145%" height="15" fill="rgb(207,56,50)" fg:x="20845" fg:w="25"/><text x="12.3194%" y="1583.50"></text></g><g><title>boids.exe`core::ops::function::impls::impl$3::call_mut&lt;tuple$&lt;bevy_egui::EguiContexts,bevy_ecs::change_detection::ResMut&lt;boids::BoidsParameters&gt;,bevy_ecs::system::commands::Commands,bevy_ecs::system::query::Query&lt;bevy_ecs::entity::Entity,bevy_ecs::query::filter::With&lt;boids::Boid&gt; &gt; &gt;,void (*)(bevy_egui::EguiContexts,bevy_ecs::change_detection::ResMut&lt;boids::BoidsParameters&gt;,bevy_ecs::system::commands::Commands,bevy_ecs::system::query::Query&lt;bevy_ecs::entity::Entity,bevy_ecs::query::filter::With&lt;boids::Boid&gt; &gt;)&gt;(void (***)(bevy_egui::EguiContexts, bevy_ecs::change_detection::ResMut&lt;boids::BoidsParameters&gt;, bevy_ecs::system::commands::Commands, bevy_ecs::system::query::Query&lt;bevy_ecs::entity::Entity,bevy_ecs::query::filter::With&lt;boids::Boid&gt; &gt;), bevy_egui::EguiContexts, bevy_ecs::change_detection::ResMut&lt;boids::BoidsParameters&gt;, bevy_ecs::system::commands::Commands, bevy_ecs::system::query::Query&lt;bevy_ecs::entity::Entity,bevy_ecs::query::filter::With (25 samples, 0.01%)</title><rect x="12.0694%" y="1557" width="0.0145%" height="15" fill="rgb(244,61,34)" fg:x="20845" fg:w="25"/><text x="12.3194%" y="1567.50"></text></g><g><title>boids.exe`core::ops::function::FnMut::call_mut(void (**)(bevy_egui::EguiContexts, bevy_ecs::change_detection::ResMut&lt;boids::BoidsParameters&gt;, bevy_ecs::system::commands::Commands, bevy_ecs::system::query::Query&lt;bevy_ecs::entity::Entity,bevy_ecs::query::filter::With&lt;boids::Boid&gt; &gt;), bevy_egui::EguiContexts, bevy_ecs::change_detection::ResMut&lt;boids::BoidsParameters&gt;, bevy_ecs::system::commands::Commands, bevy_ecs::system::query::Query&lt;bevy_ecs::entity::Entity,bevy_ecs::query::filter::With (25 samples, 0.01%)</title><rect x="12.0694%" y="1541" width="0.0145%" height="15" fill="rgb(241,50,38)" fg:x="20845" fg:w="25"/><text x="12.3194%" y="1551.50"></text></g><g><title>boids.exe`boids::egui_system(bevy_egui::EguiContexts, bevy_ecs::change_detection::ResMut&lt;boids::BoidsParameters&gt;, bevy_ecs::system::commands::Commands, bevy_ecs::system::query::Query&lt;bevy_ecs::entity::Entity,bevy_ecs::query::filter::With (25 samples, 0.01%)</title><rect x="12.0694%" y="1525" width="0.0145%" height="15" fill="rgb(212,166,30)" fg:x="20845" fg:w="25"/><text x="12.3194%" y="1535.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(enum2$&lt;core::option::Option&lt;egui::response::InnerResponse&lt;enum2$&lt;core::option::Option&lt;tuple$ (24 samples, 0.01%)</title><rect x="12.0699%" y="1509" width="0.0139%" height="15" fill="rgb(249,127,32)" fg:x="20846" fg:w="24"/><text x="12.3199%" y="1519.50"></text></g><g><title>boids.exe`egui::containers::window::Window::show_dyn&lt;tuple$&lt;&gt; &gt;(egui::containers::window::Window, egui::context::Context*, alloc::boxed::Box&lt;dyn$&lt;core::ops::function::FnOnce&lt;tuple$&lt;ref_mut$&lt;egui::ui::Ui&gt; &gt;,assoc$&lt;Output,tuple$ (24 samples, 0.01%)</title><rect x="12.0699%" y="1493" width="0.0139%" height="15" fill="rgb(209,103,0)" fg:x="20846" fg:w="24"/><text x="12.3199%" y="1503.50"></text></g><g><title>boids.exe`egui::context::Context::with_accessibility_parent(egui::id::Id, egui::containers::window::impl$1::show_dyn::closure_env$7&lt;tuple$ (21 samples, 0.01%)</title><rect x="12.0717%" y="1477" width="0.0122%" height="15" fill="rgb(238,209,51)" fg:x="20849" fg:w="21"/><text x="12.3217%" y="1487.50"></text></g><g><title>boids.exe`egui::containers::window::impl$1::show_dyn::closure$7(egui::containers::window::impl$1::show_dyn::closure_env$7&lt;tuple$ (21 samples, 0.01%)</title><rect x="12.0717%" y="1461" width="0.0122%" height="15" fill="rgb(237,56,23)" fg:x="20849" fg:w="21"/><text x="12.3217%" y="1471.50"></text></g><g><title>boids.exe`enum2$&lt;core::option::Option&lt;egui::response::InnerResponse&lt;tuple$&lt;&gt; &gt; &gt; &gt;::map_or(enum2$&lt;core::option::Option&lt;egui::response::InnerResponse&lt;tuple$&lt;&gt; &gt; &gt; &gt;, tuple$&lt;enum2$&lt;core::option::Option&lt;tuple$&lt;&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;egui::response::Response&gt; &gt; &gt;, egui::containers::window::impl$1::show_dyn::closure$7::closure_env$1&lt;tuple$ (20 samples, 0.01%)</title><rect x="12.0723%" y="1445" width="0.0116%" height="15" fill="rgb(215,153,46)" fg:x="20850" fg:w="20"/><text x="12.3223%" y="1455.50"></text></g><g><title>boids.exe`egui::containers::collapsing_header::CollapsingState::show_body_unindented&lt;tuple$&lt;&gt;,egui::containers::window::impl$1::show_dyn::closure$7::closure_env$0&lt;tuple$&lt;&gt; &gt; &gt;(egui::ui::Ui*, egui::containers::window::impl$1::show_dyn::closure$7::closure_env$0&lt;tuple$ (20 samples, 0.01%)</title><rect x="12.0723%" y="1429" width="0.0116%" height="15" fill="rgb(224,49,31)" fg:x="20850" fg:w="20"/><text x="12.3223%" y="1439.50"></text></g><g><title>boids.exe`emath::rect::Rect::size (20 samples, 0.01%)</title><rect x="12.0723%" y="1413" width="0.0116%" height="15" fill="rgb(250,18,42)" fg:x="20850" fg:w="20"/><text x="12.3223%" y="1423.50"></text></g><g><title>boids.exe`egui::ui::Ui::scope&lt;tuple$&lt;&gt;,egui::containers::window::impl$1::show_dyn::closure$7::closure_env$0&lt;tuple$&lt;&gt; &gt; &gt;(egui::containers::window::impl$1::show_dyn::closure$7::closure_env$0&lt;tuple$ (20 samples, 0.01%)</title><rect x="12.0723%" y="1397" width="0.0116%" height="15" fill="rgb(215,176,39)" fg:x="20850" fg:w="20"/><text x="12.3223%" y="1407.50"></text></g><g><title>boids.exe`egui::ui::Ui::scope_dyn&lt;tuple$&lt;&gt; &gt;(egui::ui_builder::UiBuilder, alloc::boxed::Box&lt;dyn$&lt;core::ops::function::FnOnce&lt;tuple$&lt;ref_mut$&lt;egui::ui::Ui&gt; &gt;,assoc$&lt;Output,tuple$ (20 samples, 0.01%)</title><rect x="12.0723%" y="1381" width="0.0116%" height="15" fill="rgb(223,77,29)" fg:x="20850" fg:w="20"/><text x="12.3223%" y="1391.50"></text></g><g><title>boids.exe`alloc::boxed::impl$28::call_once(alloc::boxed::Box&lt;dyn$&lt;core::ops::function::FnOnce&lt;tuple$&lt;ref_mut$&lt;egui::ui::Ui&gt; &gt;,assoc$&lt;Output,tuple$ (20 samples, 0.01%)</title><rect x="12.0723%" y="1365" width="0.0116%" height="15" fill="rgb(234,94,52)" fg:x="20850" fg:w="20"/><text x="12.3223%" y="1375.50"></text></g><g><title>boids.exe`alloc::boxed::impl$8::drop(alloc::boxed::Box&lt;dyn$&lt;core::ops::function::FnOnce&lt;tuple$&lt;ref_mut$&lt;egui::ui::Ui&gt; &gt;,assoc$&lt;Output,tuple$ (20 samples, 0.01%)</title><rect x="12.0723%" y="1349" width="0.0116%" height="15" fill="rgb(220,154,50)" fg:x="20850" fg:w="20"/><text x="12.3223%" y="1359.50"></text></g><g><title>boids.exe`core::alloc::layout::Layout::for_value_raw(ptr_const$&lt;dyn$&lt;core::ops::function::FnOnce&lt;tuple$&lt;ref_mut$&lt;egui::ui::Ui&gt; &gt;,assoc$&lt;Output,tuple$ (20 samples, 0.01%)</title><rect x="12.0723%" y="1333" width="0.0116%" height="15" fill="rgb(212,11,10)" fg:x="20850" fg:w="20"/><text x="12.3223%" y="1343.50"></text></g><g><title>boids.exe`core::mem::size_of_val_raw(ptr_const$&lt;dyn$&lt;core::ops::function::FnOnce&lt;tuple$&lt;ref_mut$&lt;egui::ui::Ui&gt; &gt;,assoc$&lt;Output,tuple$ (20 samples, 0.01%)</title><rect x="12.0723%" y="1317" width="0.0116%" height="15" fill="rgb(205,166,19)" fg:x="20850" fg:w="20"/><text x="12.3223%" y="1327.50"></text></g><g><title>boids.exe`core::ops::function::FnOnce::call_once&lt;egui::containers::window::impl$1::show_dyn::closure$7::closure_env$0&lt;tuple$&lt;&gt; &gt;,tuple$&lt;ref_mut$&lt;egui::ui::Ui&gt; &gt; &gt;(egui::containers::window::impl$1::show_dyn::closure$7::closure_env$0&lt;tuple$ (20 samples, 0.01%)</title><rect x="12.0723%" y="1301" width="0.0116%" height="15" fill="rgb(244,198,16)" fg:x="20850" fg:w="20"/><text x="12.3223%" y="1311.50"></text></g><g><title>boids.exe`egui::containers::resize::Resize::show&lt;tuple$&lt;&gt;,egui::containers::window::impl$1::show_dyn::closure$7::closure$0::closure_env$0&lt;tuple$&lt;&gt; &gt; &gt;(egui::containers::resize::Resize, egui::ui::Ui*, egui::containers::window::impl$1::show_dyn::closure$7::closure$0::closure_env$0&lt;tuple$ (20 samples, 0.01%)</title><rect x="12.0723%" y="1285" width="0.0116%" height="15" fill="rgb(219,69,12)" fg:x="20850" fg:w="20"/><text x="12.3223%" y="1295.50"></text></g><g><title>boids.exe`egui::containers::window::impl$1::show_dyn::closure$7::closure$0::closure$0(egui::containers::window::impl$1::show_dyn::closure$7::closure$0::closure_env$0&lt;tuple$ (20 samples, 0.01%)</title><rect x="12.0723%" y="1269" width="0.0116%" height="15" fill="rgb(245,30,7)" fg:x="20850" fg:w="20"/><text x="12.3223%" y="1279.50"></text></g><g><title>boids.exe`alloc::boxed::impl$28::call_once(alloc::boxed::Box&lt;dyn$&lt;core::ops::function::FnOnce&lt;tuple$&lt;ref_mut$&lt;egui::ui::Ui&gt; &gt;,assoc$&lt;Output,tuple$ (20 samples, 0.01%)</title><rect x="12.0723%" y="1253" width="0.0116%" height="15" fill="rgb(218,221,48)" fg:x="20850" fg:w="20"/><text x="12.3223%" y="1263.50"></text></g><g><title>boids.exe`alloc::boxed::impl$8::drop(alloc::boxed::Box&lt;dyn$&lt;core::ops::function::FnOnce&lt;tuple$&lt;ref_mut$&lt;egui::ui::Ui&gt; &gt;,assoc$&lt;Output,tuple$ (20 samples, 0.01%)</title><rect x="12.0723%" y="1237" width="0.0116%" height="15" fill="rgb(216,66,15)" fg:x="20850" fg:w="20"/><text x="12.3223%" y="1247.50"></text></g><g><title>boids.exe`core::alloc::layout::Layout::for_value_raw(ptr_const$&lt;dyn$&lt;core::ops::function::FnOnce&lt;tuple$&lt;ref_mut$&lt;egui::ui::Ui&gt; &gt;,assoc$&lt;Output,tuple$ (20 samples, 0.01%)</title><rect x="12.0723%" y="1221" width="0.0116%" height="15" fill="rgb(226,122,50)" fg:x="20850" fg:w="20"/><text x="12.3223%" y="1231.50"></text></g><g><title>boids.exe`core::mem::size_of_val_raw(ptr_const$&lt;dyn$&lt;core::ops::function::FnOnce&lt;tuple$&lt;ref_mut$&lt;egui::ui::Ui&gt; &gt;,assoc$&lt;Output,tuple$ (20 samples, 0.01%)</title><rect x="12.0723%" y="1205" width="0.0116%" height="15" fill="rgb(239,156,16)" fg:x="20850" fg:w="20"/><text x="12.3223%" y="1215.50"></text></g><g><title>boids.exe`core::ops::function::FnOnce::call_once&lt;boids::egui_system::closure_env$0,tuple$&lt;ref_mut$&lt;egui::ui::Ui&gt; &gt; &gt; (20 samples, 0.01%)</title><rect x="12.0723%" y="1189" width="0.0116%" height="15" fill="rgb(224,27,38)" fg:x="20850" fg:w="20"/><text x="12.3223%" y="1199.50"></text></g><g><title>boids.exe`async_task::raw::RawTask&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env$0&gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env$0&gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$&lt;&gt; &gt;::run&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env$0&gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env$0&gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$&lt;&gt; &gt;(tuple$ (15,957 samples, 9.24%)</title><rect x="2.8452%" y="1893" width="9.2392%" height="15" fill="rgb(224,39,27)" fg:x="4914" fg:w="15957"/><text x="3.0952%" y="1903.50">boids.exe`asy..</text></g><g><title>boids.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;async_task::raw::impl$3::run::closure_env$1&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env$0&gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env$0&gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$ (15,953 samples, 9.24%)</title><rect x="2.8475%" y="1877" width="9.2369%" height="15" fill="rgb(215,92,29)" fg:x="4918" fg:w="15953"/><text x="3.0975%" y="1887.50">boids.exe`std..</text></g><g><title>boids.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;async_task::raw::impl$3::run::closure_env$1&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env$0&gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env$0&gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$ (15,953 samples, 9.24%)</title><rect x="2.8475%" y="1861" width="9.2369%" height="15" fill="rgb(207,159,16)" fg:x="4918" fg:w="15953"/><text x="3.0975%" y="1871.50">boids.exe`std..</text></g><g><title>boids.exe`std::panicking::try::do_call (15,953 samples, 9.24%)</title><rect x="2.8475%" y="1845" width="9.2369%" height="15" fill="rgb(238,163,47)" fg:x="4918" fg:w="15953"/><text x="3.0975%" y="1855.50">boids.exe`std..</text></g><g><title>boids.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;async_task::raw::impl$3::run::closure_env$1&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env$0&gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env$0&gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$ (15,953 samples, 9.24%)</title><rect x="2.8475%" y="1829" width="9.2369%" height="15" fill="rgb(219,91,49)" fg:x="4918" fg:w="15953"/><text x="3.0975%" y="1839.50">boids.exe`cor..</text></g><g><title>boids.exe`core::ops::function::FnOnce::call_once(async_task::raw::impl$3::run::closure_env$1&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env$0&gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env$0&gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$ (15,953 samples, 9.24%)</title><rect x="2.8475%" y="1813" width="9.2369%" height="15" fill="rgb(227,167,31)" fg:x="4918" fg:w="15953"/><text x="3.0975%" y="1823.50">boids.exe`cor..</text></g><g><title>boids.exe`async_task::raw::impl$3::run::closure$1(async_task::raw::impl$3::run::closure_env$1&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env$0&gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env$0&gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$ (15,953 samples, 9.24%)</title><rect x="2.8475%" y="1797" width="9.2369%" height="15" fill="rgb(234,80,54)" fg:x="4918" fg:w="15953"/><text x="3.0975%" y="1807.50">boids.exe`asy..</text></g><g><title>boids.exe`async_executor::impl$21::poll(core::pin::Pin&lt;ref_mut$&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env$0&gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$ (15,953 samples, 9.24%)</title><rect x="2.8475%" y="1781" width="9.2369%" height="15" fill="rgb(212,114,2)" fg:x="4918" fg:w="15953"/><text x="3.0975%" y="1791.50">boids.exe`asy..</text></g><g><title>boids.exe`futures_lite::future::impl$11::poll(core::pin::Pin&lt;ref_mut$&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$ (15,953 samples, 9.24%)</title><rect x="2.8475%" y="1765" width="9.2369%" height="15" fill="rgb(234,50,24)" fg:x="4918" fg:w="15953"/><text x="3.0975%" y="1775.50">boids.exe`fut..</text></g><g><title>boids.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;futures_lite::future::impl$11::poll::closure_env$0&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$ (15,953 samples, 9.24%)</title><rect x="2.8475%" y="1749" width="9.2369%" height="15" fill="rgb(221,68,8)" fg:x="4918" fg:w="15953"/><text x="3.0975%" y="1759.50">boids.exe`std..</text></g><g><title>boids.exe`core::panic::unwind_safe::impl$28::poll&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env$0&gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$ (15,953 samples, 9.24%)</title><rect x="2.8475%" y="1733" width="9.2369%" height="15" fill="rgb(254,180,31)" fg:x="4918" fg:w="15953"/><text x="3.0975%" y="1743.50">boids.exe`cor..</text></g><g><title>boids.exe`bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (15,952 samples, 9.24%)</title><rect x="2.8481%" y="1717" width="9.2363%" height="15" fill="rgb(247,130,50)" fg:x="4919" fg:w="15952"/><text x="3.0981%" y="1727.50">boids.exe`bev..</text></g><g><title>boids.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe (15,924 samples, 9.22%)</title><rect x="2.8643%" y="1701" width="9.2201%" height="15" fill="rgb(211,109,4)" fg:x="4947" fg:w="15924"/><text x="3.1143%" y="1711.50">boids.exe`std..</text></g><g><title>boids.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe (15,924 samples, 9.22%)</title><rect x="2.8643%" y="1685" width="9.2201%" height="15" fill="rgb(238,50,21)" fg:x="4947" fg:w="15924"/><text x="3.1143%" y="1695.50">boids.exe`std..</text></g><g><title>boids.exe`std::panicking::try::do_call (15,924 samples, 9.22%)</title><rect x="2.8643%" y="1669" width="9.2201%" height="15" fill="rgb(225,57,45)" fg:x="4947" fg:w="15924"/><text x="3.1143%" y="1679.50">boids.exe`std..</text></g><g><title>boids.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe (15,924 samples, 9.22%)</title><rect x="2.8643%" y="1653" width="9.2201%" height="15" fill="rgb(209,196,50)" fg:x="4947" fg:w="15924"/><text x="3.1143%" y="1663.50">boids.exe`cor..</text></g><g><title>boids.exe`core::ops::function::FnOnce::call_once (15,924 samples, 9.22%)</title><rect x="2.8643%" y="1637" width="9.2201%" height="15" fill="rgb(242,140,13)" fg:x="4947" fg:w="15924"/><text x="3.1143%" y="1647.50">boids.exe`cor..</text></g><g><title>boids.exe`bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block$0::closure$0 (15,924 samples, 9.22%)</title><rect x="2.8643%" y="1621" width="9.2201%" height="15" fill="rgb(217,111,7)" fg:x="4947" fg:w="15924"/><text x="3.1143%" y="1631.50">boids.exe`bev..</text></g><g><title>boids.exe`bevy_ecs::schedule::executor::__rust_begin_short_backtrace::run_unsafe(alloc::boxed::Box&lt;dyn$&lt;bevy_ecs::system::system::System&lt;assoc$&lt;In,tuple$&lt;&gt; &gt;,assoc$&lt;Out,enum2$&lt;core::result::Result&lt;tuple$ (15,924 samples, 9.22%)</title><rect x="2.8643%" y="1605" width="9.2201%" height="15" fill="rgb(253,193,51)" fg:x="4947" fg:w="15924"/><text x="3.1143%" y="1615.50">boids.exe`bev..</text></g><g><title>boids.exe`bevy_tasks::task_pool::impl$2::execute_global_scope::async_fn$0::async_block$0(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;bevy_tasks::task_pool::impl$2::execute_global_scope::async_fn$0::async_block_env$0&lt;enum2$&lt;core::result::Result&lt;bevy_app::sub_app::SubApp,async_channel::RecvError&gt; &gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block$0::async_block_env$0&lt;bevy_render::pipelined_rendering::impl$2::cleanup::closure$0::closure_env$0,enum2$&lt;core::result::Result (15,996 samples, 9.26%)</title><rect x="2.8244%" y="2133" width="9.2618%" height="15" fill="rgb(252,70,29)" fg:x="4878" fg:w="15996"/><text x="3.0744%" y="2143.50">boids.exe`bev..</text></g><g><title>boids.exe`futures_lite::future::impl$11::poll(core::pin::Pin&lt;ref_mut$&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;async_executor::impl$5::run::async_fn_env$0&lt;never$,enum2$&lt;bevy_tasks::task_pool::impl$2::execute_global_scope::async_fn$0::async_block$0::async_block_env$0&lt;enum2$&lt;core::result::Result&lt;bevy_app::sub_app::SubApp,async_channel::RecvError&gt; &gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block$0::async_block_env$0&lt;bevy_render::pipelined_rendering::impl$2::cleanup::closure$0::closure_env$0,enum2$&lt;core::result::Result (15,996 samples, 9.26%)</title><rect x="2.8244%" y="2117" width="9.2618%" height="15" fill="rgb(232,127,12)" fg:x="4878" fg:w="15996"/><text x="3.0744%" y="2127.50">boids.exe`fut..</text></g><g><title>boids.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;futures_lite::future::impl$11::poll::closure_env$0&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;async_executor::impl$5::run::async_fn_env$0&lt;never$,enum2$&lt;bevy_tasks::task_pool::impl$2::execute_global_scope::async_fn$0::async_block$0::async_block_env$0&lt;enum2$&lt;core::result::Result&lt;bevy_app::sub_app::SubApp,async_channel::RecvError&gt; &gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block$0::async_block_env$0&lt;bevy_render::pipelined_rendering::impl$2::cleanup::closure$0::closure_env$0,enum2$&lt;core::result::Result (15,996 samples, 9.26%)</title><rect x="2.8244%" y="2101" width="9.2618%" height="15" fill="rgb(211,180,21)" fg:x="4878" fg:w="15996"/><text x="3.0744%" y="2111.50">boids.exe`std..</text></g><g><title>boids.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;futures_lite::future::impl$11::poll::closure_env$0&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;async_executor::impl$5::run::async_fn_env$0&lt;never$,enum2$&lt;bevy_tasks::task_pool::impl$2::execute_global_scope::async_fn$0::async_block$0::async_block_env$0&lt;enum2$&lt;core::result::Result&lt;bevy_app::sub_app::SubApp,async_channel::RecvError&gt; &gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block$0::async_block_env$0&lt;bevy_render::pipelined_rendering::impl$2::cleanup::closure$0::closure_env$0,enum2$&lt;core::result::Result (15,996 samples, 9.26%)</title><rect x="2.8244%" y="2085" width="9.2618%" height="15" fill="rgb(229,72,13)" fg:x="4878" fg:w="15996"/><text x="3.0744%" y="2095.50">boids.exe`std..</text></g><g><title>boids.exe`std::panicking::try::do_call (15,996 samples, 9.26%)</title><rect x="2.8244%" y="2069" width="9.2618%" height="15" fill="rgb(240,211,49)" fg:x="4878" fg:w="15996"/><text x="3.0744%" y="2079.50">boids.exe`std..</text></g><g><title>boids.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;futures_lite::future::impl$11::poll::closure_env$0&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;async_executor::impl$5::run::async_fn_env$0&lt;never$,enum2$&lt;bevy_tasks::task_pool::impl$2::execute_global_scope::async_fn$0::async_block$0::async_block_env$0&lt;enum2$&lt;core::result::Result&lt;bevy_app::sub_app::SubApp,async_channel::RecvError&gt; &gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block$0::async_block_env$0&lt;bevy_render::pipelined_rendering::impl$2::cleanup::closure$0::closure_env$0,enum2$&lt;core::result::Result (15,996 samples, 9.26%)</title><rect x="2.8244%" y="2053" width="9.2618%" height="15" fill="rgb(219,149,40)" fg:x="4878" fg:w="15996"/><text x="3.0744%" y="2063.50">boids.exe`cor..</text></g><g><title>boids.exe`futures_lite::future::impl$11::poll::closure$0(futures_lite::future::impl$11::poll::closure_env$0&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;async_executor::impl$5::run::async_fn_env$0&lt;never$,enum2$&lt;bevy_tasks::task_pool::impl$2::execute_global_scope::async_fn$0::async_block$0::async_block_env$0&lt;enum2$&lt;core::result::Result&lt;bevy_app::sub_app::SubApp,async_channel::RecvError&gt; &gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block$0::async_block_env$0&lt;bevy_render::pipelined_rendering::impl$2::cleanup::closure$0::closure_env$0,enum2$&lt;core::result::Result (15,996 samples, 9.26%)</title><rect x="2.8244%" y="2037" width="9.2618%" height="15" fill="rgb(210,127,46)" fg:x="4878" fg:w="15996"/><text x="3.0744%" y="2047.50">boids.exe`fut..</text></g><g><title>boids.exe`core::panic::unwind_safe::impl$28::poll(core::pin::Pin&lt;ref_mut$&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;async_executor::impl$5::run::async_fn_env$0&lt;never$,enum2$&lt;bevy_tasks::task_pool::impl$2::execute_global_scope::async_fn$0::async_block$0::async_block_env$0&lt;enum2$&lt;core::result::Result&lt;bevy_app::sub_app::SubApp,async_channel::RecvError&gt; &gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block$0::async_block_env$0&lt;bevy_render::pipelined_rendering::impl$2::cleanup::closure$0::closure_env$0,enum2$&lt;core::result::Result (15,996 samples, 9.26%)</title><rect x="2.8244%" y="2021" width="9.2618%" height="15" fill="rgb(220,106,7)" fg:x="4878" fg:w="15996"/><text x="3.0744%" y="2031.50">boids.exe`cor..</text></g><g><title>boids.exe`async_executor::impl$5::run::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;async_executor::impl$5::run::async_fn_env$0&lt;never$,enum2$&lt;bevy_tasks::task_pool::impl$2::execute_global_scope::async_fn$0::async_block$0::async_block_env$0&lt;enum2$&lt;core::result::Result&lt;bevy_app::sub_app::SubApp,async_channel::RecvError&gt; &gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block$0::async_block_env$0&lt;bevy_render::pipelined_rendering::impl$2::cleanup::closure$0::closure_env$0,enum2$&lt;core::result::Result (15,996 samples, 9.26%)</title><rect x="2.8244%" y="2005" width="9.2618%" height="15" fill="rgb(249,31,22)" fg:x="4878" fg:w="15996"/><text x="3.0744%" y="2015.50">boids.exe`asy..</text></g><g><title>boids.exe`async_executor::impl$13::run::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;async_executor::impl$13::run::async_fn_env$0&lt;never$,enum2$&lt;bevy_tasks::task_pool::impl$2::execute_global_scope::async_fn$0::async_block$0::async_block_env$0&lt;enum2$&lt;core::result::Result&lt;bevy_app::sub_app::SubApp,async_channel::RecvError&gt; &gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block$0::async_block_env$0&lt;bevy_render::pipelined_rendering::impl$2::cleanup::closure$0::closure_env$0,enum2$&lt;core::result::Result (15,996 samples, 9.26%)</title><rect x="2.8244%" y="1989" width="9.2618%" height="15" fill="rgb(253,1,49)" fg:x="4878" fg:w="15996"/><text x="3.0744%" y="1999.50">boids.exe`asy..</text></g><g><title>boids.exe`futures_lite::future::impl$7::poll(core::pin::Pin&lt;ref_mut$&lt;futures_lite::future::Or&lt;enum2$&lt;bevy_tasks::task_pool::impl$2::execute_global_scope::async_fn$0::async_block$0::async_block_env$0&lt;enum2$&lt;core::result::Result&lt;bevy_app::sub_app::SubApp,async_channel::RecvError&gt; &gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block$0::async_block_env$0&lt;bevy_render::pipelined_rendering::impl$2::cleanup::closure$0::closure_env$0,enum2$&lt;core::result::Result&lt;bevy_app::sub_app::SubApp,async_channel::RecvError&gt; &gt; &gt; &gt; &gt; &gt;,enum2$&lt;async_executor::impl$13::run::async_fn$0::async_block_env$0&lt;never$,enum2$&lt;bevy_tasks::task_pool::impl$2::execute_global_scope::async_fn$0::async_block$0::async_block_env$0&lt;enum2$&lt;core::result::Result&lt;bevy_app::sub_app::SubApp,async_channel::RecvError&gt; &gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block$0::async_block_env$0&lt;bevy_render::pipelined_rendering::impl$2::cleanup::closure$0::closure_env$0,enum2$&lt;core::result::Result (15,995 samples, 9.26%)</title><rect x="2.8250%" y="1973" width="9.2612%" height="15" fill="rgb(227,144,33)" fg:x="4879" fg:w="15995"/><text x="3.0750%" y="1983.50">boids.exe`fut..</text></g><g><title>boids.exe`async_executor::impl$13::run::async_fn$0::async_block$0(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;async_executor::impl$13::run::async_fn$0::async_block_env$0&lt;never$,enum2$&lt;bevy_tasks::task_pool::impl$2::execute_global_scope::async_fn$0::async_block$0::async_block_env$0&lt;enum2$&lt;core::result::Result&lt;bevy_app::sub_app::SubApp,async_channel::RecvError&gt; &gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block$0::async_block_env$0&lt;bevy_render::pipelined_rendering::impl$2::cleanup::closure$0::closure_env$0,enum2$&lt;core::result::Result (15,995 samples, 9.26%)</title><rect x="2.8250%" y="1957" width="9.2612%" height="15" fill="rgb(249,163,44)" fg:x="4879" fg:w="15995"/><text x="3.0750%" y="1967.50">boids.exe`asy..</text></g><g><title>boids.exe`core::iter::range::impl$6::next(core::ops::range::Range (15,973 samples, 9.25%)</title><rect x="2.8377%" y="1941" width="9.2485%" height="15" fill="rgb(234,15,39)" fg:x="4901" fg:w="15973"/><text x="3.0877%" y="1951.50">boids.exe`cor..</text></g><g><title>boids.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (15,973 samples, 9.25%)</title><rect x="2.8377%" y="1925" width="9.2485%" height="15" fill="rgb(207,66,16)" fg:x="4901" fg:w="15973"/><text x="3.0877%" y="1935.50">boids.exe`cor..</text></g><g><title>boids.exe`core::cmp::impls::impl$76::lt (15,973 samples, 9.25%)</title><rect x="2.8377%" y="1909" width="9.2485%" height="15" fill="rgb(233,112,24)" fg:x="4901" fg:w="15973"/><text x="3.0877%" y="1919.50">boids.exe`cor..</text></g><g><title>boids.exe`bevy_tasks::task_pool::impl$2::execute_global_scope::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;bevy_tasks::task_pool::impl$2::execute_global_scope::async_fn_env$0&lt;enum2$&lt;core::result::Result&lt;bevy_app::sub_app::SubApp,async_channel::RecvError&gt; &gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block$0::async_block_env$0&lt;bevy_render::pipelined_rendering::impl$2::cleanup::closure$0::closure_env$0,enum2$&lt;core::result::Result (16,000 samples, 9.26%)</title><rect x="2.8244%" y="2165" width="9.2641%" height="15" fill="rgb(230,90,22)" fg:x="4878" fg:w="16000"/><text x="3.0744%" y="2175.50">boids.exe`bev..</text></g><g><title>boids.exe`futures_lite::future::impl$7::poll&lt;alloc::vec::Vec&lt;enum2$&lt;core::result::Result&lt;bevy_app::sub_app::SubApp,async_channel::RecvError&gt; &gt;,alloc::alloc::Global&gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block$0::async_block_env$0&lt;bevy_render::pipelined_rendering::impl$2::cleanup::closure$0::closure_env$0,enum2$&lt;core::result::Result&lt;bevy_app::sub_app::SubApp,async_channel::RecvError&gt; &gt; &gt; &gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::execute_global_scope::async_fn$0::async_block_env$0&lt;enum2$&lt;core::result::Result&lt;bevy_app::sub_app::SubApp,async_channel::RecvError&gt; &gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block$0::async_block_env$0&lt;bevy_render::pipelined_rendering::impl$2::cleanup::closure$0::closure_env$0,enum2$&lt;core::result::Result&lt;bevy_app::sub_app::SubApp,async_channel::RecvError&gt; &gt; &gt; &gt; &gt; &gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;futures_lite::future::Or&lt;enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block$0::async_block_env$0&lt;bevy_render::pipelined_rendering::impl$2::cleanup::closure$0::closure_env$0,enum2$&lt;core::result::Result&lt;bevy_app::sub_app::SubApp,async_channel::RecvError&gt; &gt; &gt; &gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::execute_global_scope::async_fn$0::async_block_env$0&lt;enum2$&lt;core::result::Result&lt;bevy_app::sub_app::SubApp,async_channel::RecvError&gt; &gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block$0::async_block_env$0&lt;bevy_render::pipelined_rendering::impl$2::cleanup::closure$0::closure_env$0,enum2$&lt;core::result::Result (16,000 samples, 9.26%)</title><rect x="2.8244%" y="2149" width="9.2641%" height="15" fill="rgb(229,61,13)" fg:x="4878" fg:w="16000"/><text x="3.0744%" y="2159.50">boids.exe`fut..</text></g><g><title>`0x7FF89D8FFEDC (20 samples, 0.01%)</title><rect x="12.0902%" y="1989" width="0.0116%" height="15" fill="rgb(225,57,24)" fg:x="20881" fg:w="20"/><text x="12.3402%" y="1999.50"></text></g><g><title>`0x7FF89ABBF923 (23 samples, 0.01%)</title><rect x="12.0896%" y="2021" width="0.0133%" height="15" fill="rgb(208,169,48)" fg:x="20880" fg:w="23"/><text x="12.3396%" y="2031.50"></text></g><g><title>`0x7FF89D8FBFA3 (23 samples, 0.01%)</title><rect x="12.0896%" y="2005" width="0.0133%" height="15" fill="rgb(244,218,51)" fg:x="20880" fg:w="23"/><text x="12.3396%" y="2015.50"></text></g><g><title>boids.exe`std::sys::pal::windows::futex::futex_wait (25 samples, 0.01%)</title><rect x="12.0891%" y="2053" width="0.0145%" height="15" fill="rgb(214,148,10)" fg:x="20879" fg:w="25"/><text x="12.3391%" y="2063.50"></text></g><g><title>boids.exe`std::sys::pal::windows::futex::wait_on_address (24 samples, 0.01%)</title><rect x="12.0896%" y="2037" width="0.0139%" height="15" fill="rgb(225,174,27)" fg:x="20880" fg:w="24"/><text x="12.3396%" y="2047.50"></text></g><g><title>boids.exe`core::ops::function::FnOnce::call_once&lt;std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;bevy_render::pipelined_rendering::impl$2::cleanup::closure_env$0,tuple$&lt;&gt; &gt;,tuple$&lt;&gt; &gt;(std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;bevy_render::pipelined_rendering::impl$2::cleanup::closure_env$0,tuple$ (16,594 samples, 9.61%)</title><rect x="2.4961%" y="2437" width="9.6080%" height="15" fill="rgb(230,96,26)" fg:x="4311" fg:w="16594"/><text x="2.7461%" y="2447.50">boids.exe`core..</text></g><g><title>boids.exe`std::thread::impl$0::spawn_unchecked_::closure$1(std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;bevy_render::pipelined_rendering::impl$2::cleanup::closure_env$0,tuple$ (16,594 samples, 9.61%)</title><rect x="2.4961%" y="2421" width="9.6080%" height="15" fill="rgb(232,10,30)" fg:x="4311" fg:w="16594"/><text x="2.7461%" y="2431.50">boids.exe`std:..</text></g><g><title>boids.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;bevy_render::pipelined_rendering::impl$2::cleanup::closure_env$0,tuple$ (16,594 samples, 9.61%)</title><rect x="2.4961%" y="2405" width="9.6080%" height="15" fill="rgb(222,8,50)" fg:x="4311" fg:w="16594"/><text x="2.7461%" y="2415.50">boids.exe`std:..</text></g><g><title>boids.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;bevy_render::pipelined_rendering::impl$2::cleanup::closure_env$0,tuple$ (16,594 samples, 9.61%)</title><rect x="2.4961%" y="2389" width="9.6080%" height="15" fill="rgb(213,81,27)" fg:x="4311" fg:w="16594"/><text x="2.7461%" y="2399.50">boids.exe`std:..</text></g><g><title>boids.exe`std::panicking::try::do_call (16,594 samples, 9.61%)</title><rect x="2.4961%" y="2373" width="9.6080%" height="15" fill="rgb(245,50,10)" fg:x="4311" fg:w="16594"/><text x="2.7461%" y="2383.50">boids.exe`std:..</text></g><g><title>boids.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;bevy_render::pipelined_rendering::impl$2::cleanup::closure_env$0,tuple$ (16,594 samples, 9.61%)</title><rect x="2.4961%" y="2357" width="9.6080%" height="15" fill="rgb(216,100,18)" fg:x="4311" fg:w="16594"/><text x="2.7461%" y="2367.50">boids.exe`core..</text></g><g><title>boids.exe`std::thread::impl$0::spawn_unchecked_::closure$1::closure$0(std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;bevy_render::pipelined_rendering::impl$2::cleanup::closure_env$0,tuple$ (16,594 samples, 9.61%)</title><rect x="2.4961%" y="2341" width="9.6080%" height="15" fill="rgb(236,147,54)" fg:x="4311" fg:w="16594"/><text x="2.7461%" y="2351.50">boids.exe`std:..</text></g><g><title>boids.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;bevy_render::pipelined_rendering::impl$2::cleanup::closure_env$0,tuple$&lt;&gt; &gt; (16,594 samples, 9.61%)</title><rect x="2.4961%" y="2325" width="9.6080%" height="15" fill="rgb(205,143,26)" fg:x="4311" fg:w="16594"/><text x="2.7461%" y="2335.50">boids.exe`std:..</text></g><g><title>boids.exe`bevy_render::pipelined_rendering::impl$2::cleanup::closure$0 (16,594 samples, 9.61%)</title><rect x="2.4961%" y="2309" width="9.6080%" height="15" fill="rgb(236,26,9)" fg:x="4311" fg:w="16594"/><text x="2.7461%" y="2319.50">boids.exe`bevy..</text></g><g><title>boids.exe`bevy_tasks::task_pool::TaskPool::scope (16,033 samples, 9.28%)</title><rect x="2.8209%" y="2293" width="9.2832%" height="15" fill="rgb(221,165,53)" fg:x="4872" fg:w="16033"/><text x="3.0709%" y="2303.50">boids.exe`bev..</text></g><g><title>boids.exe`std::thread::local::LocalKey&lt;alloc::sync::Arc&lt;bevy_tasks::thread_executor::ThreadExecutor,alloc::alloc::Global&gt; &gt;::with(bevy_tasks::task_pool::impl$2::scope::closure_env$0&lt;bevy_render::pipelined_rendering::impl$2::cleanup::closure$0::closure_env$0,enum2$&lt;core::result::Result (16,033 samples, 9.28%)</title><rect x="2.8209%" y="2277" width="9.2832%" height="15" fill="rgb(214,110,17)" fg:x="4872" fg:w="16033"/><text x="3.0709%" y="2287.50">boids.exe`std..</text></g><g><title>boids.exe`bevy_tasks::task_pool::TaskPool::scope_with_executor_inner&lt;bevy_render::pipelined_rendering::impl$2::cleanup::closure$0::closure_env$0,enum2$&lt;core::result::Result&lt;bevy_app::sub_app::SubApp,async_channel::RecvError&gt; &gt; &gt; (16,033 samples, 9.28%)</title><rect x="2.8209%" y="2261" width="9.2832%" height="15" fill="rgb(237,197,12)" fg:x="4872" fg:w="16033"/><text x="3.0709%" y="2271.50">boids.exe`bev..</text></g><g><title>boids.exe`futures_lite::future::block_on(enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block_env$0&lt;bevy_render::pipelined_rendering::impl$2::cleanup::closure$0::closure_env$0,enum2$&lt;core::result::Result (16,027 samples, 9.28%)</title><rect x="2.8244%" y="2245" width="9.2797%" height="15" fill="rgb(205,84,17)" fg:x="4878" fg:w="16027"/><text x="3.0744%" y="2255.50">boids.exe`fut..</text></g><g><title>boids.exe`std::thread::local::LocalKey&lt;core::cell::RefCell&lt;tuple$&lt;parking::Parker,core::task::wake::Waker&gt; &gt; &gt;::with&lt;core::cell::RefCell&lt;tuple$&lt;parking::Parker,core::task::wake::Waker&gt; &gt;,futures_lite::future::block_on::closure_env$0&lt;alloc::vec::Vec&lt;enum2$&lt;core::result::Result&lt;bevy_app::sub_app::SubApp,async_channel::RecvError&gt; &gt;,alloc::alloc::Global&gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block_env$0&lt;bevy_render::pipelined_rendering::impl$2::cleanup::closure$0::closure_env$0,enum2$&lt;core::result::Result&lt;bevy_app::sub_app::SubApp,async_channel::RecvError&gt; &gt; &gt; &gt; &gt;,alloc::vec::Vec&lt;enum2$&lt;core::result::Result&lt;bevy_app::sub_app::SubApp,async_channel::RecvError&gt; &gt;,alloc::alloc::Global&gt; &gt;(futures_lite::future::block_on::closure_env$0&lt;alloc::vec::Vec&lt;enum2$&lt;core::result::Result&lt;bevy_app::sub_app::SubApp,async_channel::RecvError&gt; &gt;,alloc::alloc::Global&gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block_env$0&lt;bevy_render::pipelined_rendering::impl$2::cleanup::closure$0::closure_env$0,enum2$&lt;core::result::Result (16,027 samples, 9.28%)</title><rect x="2.8244%" y="2229" width="9.2797%" height="15" fill="rgb(237,18,45)" fg:x="4878" fg:w="16027"/><text x="3.0744%" y="2239.50">boids.exe`std..</text></g><g><title>boids.exe`std::thread::local::LocalKey&lt;core::cell::RefCell&lt;tuple$&lt;parking::Parker,core::task::wake::Waker&gt; &gt; &gt;::try_with(futures_lite::future::block_on::closure_env$0&lt;alloc::vec::Vec&lt;enum2$&lt;core::result::Result&lt;bevy_app::sub_app::SubApp,async_channel::RecvError&gt; &gt;,alloc::alloc::Global&gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block_env$0&lt;bevy_render::pipelined_rendering::impl$2::cleanup::closure$0::closure_env$0,enum2$&lt;core::result::Result (16,027 samples, 9.28%)</title><rect x="2.8244%" y="2213" width="9.2797%" height="15" fill="rgb(221,87,14)" fg:x="4878" fg:w="16027"/><text x="3.0744%" y="2223.50">boids.exe`std..</text></g><g><title>boids.exe`futures_lite::future::block_on::closure$0(futures_lite::future::block_on::closure_env$0&lt;alloc::vec::Vec&lt;enum2$&lt;core::result::Result&lt;bevy_app::sub_app::SubApp,async_channel::RecvError&gt; &gt;,alloc::alloc::Global&gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block_env$0&lt;bevy_render::pipelined_rendering::impl$2::cleanup::closure$0::closure_env$0,enum2$&lt;core::result::Result&lt;bevy_app::sub_app::SubApp,async_channel::RecvError&gt; &gt; &gt; &gt; &gt;, core::cell::RefCell&lt;tuple$ (16,027 samples, 9.28%)</title><rect x="2.8244%" y="2197" width="9.2797%" height="15" fill="rgb(238,186,15)" fg:x="4878" fg:w="16027"/><text x="3.0744%" y="2207.50">boids.exe`fut..</text></g><g><title>boids.exe`bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block$0(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block_env$0&lt;bevy_render::pipelined_rendering::impl$2::cleanup::closure$0::closure_env$0,enum2$&lt;core::result::Result (16,027 samples, 9.28%)</title><rect x="2.8244%" y="2181" width="9.2797%" height="15" fill="rgb(208,115,11)" fg:x="4878" fg:w="16027"/><text x="3.0744%" y="2191.50">boids.exe`bev..</text></g><g><title>boids.exe`parking::Inner::park(enum2$&lt;core::option::Option (27 samples, 0.02%)</title><rect x="12.0885%" y="2165" width="0.0156%" height="15" fill="rgb(254,175,0)" fg:x="20878" fg:w="27"/><text x="12.3385%" y="2175.50"></text></g><g><title>boids.exe`std::sync::poison::condvar::Condvar::wait(std::sync::poison::mutex::MutexGuard&lt;tuple$ (26 samples, 0.02%)</title><rect x="12.0891%" y="2149" width="0.0151%" height="15" fill="rgb(227,24,42)" fg:x="20879" fg:w="26"/><text x="12.3391%" y="2159.50"></text></g><g><title>boids.exe`std::sync::poison::Flag::get (26 samples, 0.02%)</title><rect x="12.0891%" y="2133" width="0.0151%" height="15" fill="rgb(223,211,37)" fg:x="20879" fg:w="26"/><text x="12.3391%" y="2143.50"></text></g><g><title>boids.exe`core::sync::atomic::AtomicBool::load (26 samples, 0.02%)</title><rect x="12.0891%" y="2117" width="0.0151%" height="15" fill="rgb(235,49,27)" fg:x="20879" fg:w="26"/><text x="12.3391%" y="2127.50"></text></g><g><title>boids.exe`core::sync::atomic::atomic_load (26 samples, 0.02%)</title><rect x="12.0891%" y="2101" width="0.0151%" height="15" fill="rgb(254,97,51)" fg:x="20879" fg:w="26"/><text x="12.3391%" y="2111.50"></text></g><g><title>boids.exe`std::sys::sync::condvar::futex::Condvar::wait (26 samples, 0.02%)</title><rect x="12.0891%" y="2085" width="0.0151%" height="15" fill="rgb(249,51,40)" fg:x="20879" fg:w="26"/><text x="12.3391%" y="2095.50"></text></g><g><title>boids.exe`std::sys::sync::condvar::futex::Condvar::wait_optional_timeout (26 samples, 0.02%)</title><rect x="12.0891%" y="2069" width="0.0151%" height="15" fill="rgb(210,128,45)" fg:x="20879" fg:w="26"/><text x="12.3391%" y="2079.50"></text></g><g><title>`0x7FF89D8DA0D1 (58 samples, 0.03%)</title><rect x="12.1249%" y="1845" width="0.0336%" height="15" fill="rgb(224,137,50)" fg:x="20941" fg:w="58"/><text x="12.3749%" y="1855.50"></text></g><g><title>`0x7FF89D951B74 (58 samples, 0.03%)</title><rect x="12.1249%" y="1829" width="0.0336%" height="15" fill="rgb(242,15,9)" fg:x="20941" fg:w="58"/><text x="12.3749%" y="1839.50"></text></g><g><title>boids.exe`async_executor::State::notify (76 samples, 0.04%)</title><rect x="12.1163%" y="1973" width="0.0440%" height="15" fill="rgb(233,187,41)" fg:x="20926" fg:w="76"/><text x="12.3663%" y="1983.50"></text></g><g><title>boids.exe`alloc::task::raw_waker::wake&lt;parking::Inner&gt;(tuple$ (72 samples, 0.04%)</title><rect x="12.1186%" y="1957" width="0.0417%" height="15" fill="rgb(227,2,29)" fg:x="20930" fg:w="72"/><text x="12.3686%" y="1967.50"></text></g><g><title>boids.exe`parking::impl$8::wake(alloc::sync::Arc (72 samples, 0.04%)</title><rect x="12.1186%" y="1941" width="0.0417%" height="15" fill="rgb(222,70,3)" fg:x="20930" fg:w="72"/><text x="12.3686%" y="1951.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(alloc::sync::Arc (72 samples, 0.04%)</title><rect x="12.1186%" y="1925" width="0.0417%" height="15" fill="rgb(213,11,42)" fg:x="20930" fg:w="72"/><text x="12.3686%" y="1935.50"></text></g><g><title>boids.exe`alloc::sync::impl$38::drop(alloc::sync::Arc (72 samples, 0.04%)</title><rect x="12.1186%" y="1909" width="0.0417%" height="15" fill="rgb(225,150,9)" fg:x="20930" fg:w="72"/><text x="12.3686%" y="1919.50"></text></g><g><title>boids.exe`core::sync::atomic::AtomicUsize::fetch_sub (72 samples, 0.04%)</title><rect x="12.1186%" y="1893" width="0.0417%" height="15" fill="rgb(230,162,45)" fg:x="20930" fg:w="72"/><text x="12.3686%" y="1903.50"></text></g><g><title>boids.exe`core::sync::atomic::atomic_sub (72 samples, 0.04%)</title><rect x="12.1186%" y="1877" width="0.0417%" height="15" fill="rgb(222,14,52)" fg:x="20930" fg:w="72"/><text x="12.3686%" y="1887.50"></text></g><g><title>boids.exe`parking::Inner::unpark (71 samples, 0.04%)</title><rect x="12.1192%" y="1861" width="0.0411%" height="15" fill="rgb(254,198,14)" fg:x="20931" fg:w="71"/><text x="12.3692%" y="1871.50"></text></g><g><title>boids.exe`concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&lt;tuple$&lt;&gt; &gt; &gt;::pop&lt;async_task::runnable::Runnable&lt;tuple$&lt;&gt; &gt; &gt; (34 samples, 0.02%)</title><rect x="12.1747%" y="1909" width="0.0197%" height="15" fill="rgb(220,217,30)" fg:x="21027" fg:w="34"/><text x="12.4247%" y="1919.50"></text></g><g><title>boids.exe`async_executor::impl$17::runnable::async_fn$0::closure$0 (65 samples, 0.04%)</title><rect x="12.1655%" y="1925" width="0.0376%" height="15" fill="rgb(215,146,41)" fg:x="21011" fg:w="65"/><text x="12.4155%" y="1935.50"></text></g><g><title>boids.exe`async_executor::impl$17::runnable::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (161 samples, 0.09%)</title><rect x="12.1157%" y="1989" width="0.0932%" height="15" fill="rgb(217,27,36)" fg:x="20925" fg:w="161"/><text x="12.3657%" y="1999.50"></text></g><g><title>boids.exe`async_executor::impl$15::runnable_with::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;async_executor::impl$15::runnable_with::async_fn_env$0 (84 samples, 0.05%)</title><rect x="12.1603%" y="1973" width="0.0486%" height="15" fill="rgb(219,218,39)" fg:x="21002" fg:w="84"/><text x="12.4103%" y="1983.50"></text></g><g><title>boids.exe`futures_lite::future::impl$3::poll(core::pin::Pin&lt;ref_mut$&lt;futures_lite::future::PollFn&lt;async_executor::impl$15::runnable_with::async_fn$0::closure_env$0 (84 samples, 0.05%)</title><rect x="12.1603%" y="1957" width="0.0486%" height="15" fill="rgb(219,4,42)" fg:x="21002" fg:w="84"/><text x="12.4103%" y="1967.50"></text></g><g><title>boids.exe`async_executor::impl$15::runnable_with::async_fn$0::closure$0(async_executor::impl$15::runnable_with::async_fn$0::closure_env$0 (84 samples, 0.05%)</title><rect x="12.1603%" y="1941" width="0.0486%" height="15" fill="rgb(249,119,36)" fg:x="21002" fg:w="84"/><text x="12.4103%" y="1951.50"></text></g><g><title>boids.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$ (20 samples, 0.01%)</title><rect x="12.2118%" y="1845" width="0.0116%" height="15" fill="rgb(209,23,33)" fg:x="21091" fg:w="20"/><text x="12.4618%" y="1855.50"></text></g><g><title>boids.exe`bevy_render::render_resource::pipeline_cache::ShaderCache::add_import_to_composer(naga_oil::compose::Composer*, bevy_platform::collections::hash_map::HashMap&lt;enum2$&lt;bevy_render::render_resource::shader::ShaderImport&gt;,enum2$&lt;bevy_asset::id::AssetId&lt;bevy_render::render_resource::shader::Shader&gt; &gt;,bevy_platform::hash::FixedHasher&gt;*, bevy_platform::collections::hash_map::HashMap&lt;enum2$&lt;bevy_asset::id::AssetId&lt;bevy_render::render_resource::shader::Shader&gt; &gt;,bevy_render::render_resource::shader::Shader,bevy_platform::hash::FixedHasher&gt;*, enum2$ (20 samples, 0.01%)</title><rect x="12.2118%" y="1829" width="0.0116%" height="15" fill="rgb(211,10,0)" fg:x="21091" fg:w="20"/><text x="12.4618%" y="1839.50"></text></g><g><title>boids.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;naga::Module,enum2$ (18 samples, 0.01%)</title><rect x="12.2292%" y="1637" width="0.0104%" height="15" fill="rgb(208,99,37)" fg:x="21121" fg:w="18"/><text x="12.4792%" y="1647.50"></text></g><g><title>boids.exe`naga::front::wgsl::lower::Lowerer::lower (18 samples, 0.01%)</title><rect x="12.2292%" y="1621" width="0.0104%" height="15" fill="rgb(213,132,31)" fg:x="21121" fg:w="18"/><text x="12.4792%" y="1631.50"></text></g><g><title>boids.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$ (23 samples, 0.01%)</title><rect x="12.2454%" y="1573" width="0.0133%" height="15" fill="rgb(243,129,40)" fg:x="21149" fg:w="23"/><text x="12.4954%" y="1583.50"></text></g><g><title>boids.exe`naga::front::wgsl::parse::Parser::statement (23 samples, 0.01%)</title><rect x="12.2454%" y="1557" width="0.0133%" height="15" fill="rgb(210,66,33)" fg:x="21149" fg:w="23"/><text x="12.4954%" y="1567.50"></text></g><g><title>boids.exe`naga::front::wgsl::parse::Parser::global_decl (33 samples, 0.02%)</title><rect x="12.2402%" y="1605" width="0.0191%" height="15" fill="rgb(209,189,4)" fg:x="21140" fg:w="33"/><text x="12.4902%" y="1615.50"></text></g><g><title>boids.exe`naga::front::wgsl::parse::Parser::function_decl(naga::front::wgsl::parse::lexer::Lexer*, enum2$&lt;core::option::Option&lt;naga::arena::handle::Handle&lt;naga::diagnostic_filter::DiagnosticFilterNode&gt; &gt; &gt;, naga::front::wgsl::parse::ast::TranslationUnit*, indexmap::set::IndexSet&lt;naga::front::wgsl::parse::ast::Dependency,core::hash::BuildHasherDefault (24 samples, 0.01%)</title><rect x="12.2454%" y="1589" width="0.0139%" height="15" fill="rgb(214,107,37)" fg:x="21149" fg:w="24"/><text x="12.4954%" y="1599.50"></text></g><g><title>boids.exe`alloc::string::impl$30::deref (55 samples, 0.03%)</title><rect x="12.2280%" y="1781" width="0.0318%" height="15" fill="rgb(245,88,54)" fg:x="21119" fg:w="55"/><text x="12.4780%" y="1791.50"></text></g><g><title>boids.exe`naga::front::wgsl::parse_str(ref$ (55 samples, 0.03%)</title><rect x="12.2280%" y="1765" width="0.0318%" height="15" fill="rgb(205,146,20)" fg:x="21119" fg:w="55"/><text x="12.4780%" y="1775.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place (54 samples, 0.03%)</title><rect x="12.2286%" y="1749" width="0.0313%" height="15" fill="rgb(220,161,25)" fg:x="21120" fg:w="54"/><text x="12.4786%" y="1759.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place (54 samples, 0.03%)</title><rect x="12.2286%" y="1733" width="0.0313%" height="15" fill="rgb(215,152,15)" fg:x="21120" fg:w="54"/><text x="12.4786%" y="1743.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;tuple$ (54 samples, 0.03%)</title><rect x="12.2286%" y="1717" width="0.0313%" height="15" fill="rgb(233,192,44)" fg:x="21120" fg:w="54"/><text x="12.4786%" y="1727.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec&lt;tuple$ (54 samples, 0.03%)</title><rect x="12.2286%" y="1701" width="0.0313%" height="15" fill="rgb(240,170,46)" fg:x="21120" fg:w="54"/><text x="12.4786%" y="1711.50"></text></g><g><title>boids.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec&lt;tuple$ (54 samples, 0.03%)</title><rect x="12.2286%" y="1685" width="0.0313%" height="15" fill="rgb(207,104,33)" fg:x="21120" fg:w="54"/><text x="12.4786%" y="1695.50"></text></g><g><title>boids.exe`naga::front::wgsl::Frontend::parse(ref$ (54 samples, 0.03%)</title><rect x="12.2286%" y="1669" width="0.0313%" height="15" fill="rgb(219,21,39)" fg:x="21120" fg:w="54"/><text x="12.4786%" y="1679.50"></text></g><g><title>boids.exe`naga::front::wgsl::Frontend::inner(ref$ (53 samples, 0.03%)</title><rect x="12.2292%" y="1653" width="0.0307%" height="15" fill="rgb(214,133,29)" fg:x="21121" fg:w="53"/><text x="12.4792%" y="1663.50"></text></g><g><title>boids.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;naga::front::wgsl::parse::ast::TranslationUnit,enum2$ (34 samples, 0.02%)</title><rect x="12.2402%" y="1637" width="0.0197%" height="15" fill="rgb(226,93,6)" fg:x="21140" fg:w="34"/><text x="12.4902%" y="1647.50"></text></g><g><title>boids.exe`naga::front::wgsl::parse::Parser::parse(ref$ (34 samples, 0.02%)</title><rect x="12.2402%" y="1621" width="0.0197%" height="15" fill="rgb(252,222,34)" fg:x="21140" fg:w="34"/><text x="12.4902%" y="1631.50"></text></g><g><title>boids.exe`naga_oil::compose::Composer::create_module_ir(ref$&lt;str$&gt;, alloc::string::String, enum2$&lt;naga_oil::compose::ShaderLanguage&gt;, ref$&lt;slice2$&lt;naga_oil::compose::ImportDefinition&gt; &gt;, std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$ (68 samples, 0.04%)</title><rect x="12.2269%" y="1797" width="0.0394%" height="15" fill="rgb(252,92,48)" fg:x="21117" fg:w="68"/><text x="12.4769%" y="1807.50"></text></g><g><title>boids.exe`enum2$&lt;core::result::Result&lt;naga_oil::compose::ComposableModule,naga_oil::compose::error::ComposerError&gt; &gt;::map_err(enum2$&lt;core::result::Result (82 samples, 0.05%)</title><rect x="12.2257%" y="1829" width="0.0475%" height="15" fill="rgb(245,223,24)" fg:x="21115" fg:w="82"/><text x="12.4757%" y="1839.50"></text></g><g><title>boids.exe`naga_oil::compose::Composer::create_composable_module(naga_oil::compose::ComposableModuleDefinition*, alloc::string::String, std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$&lt;naga_oil::compose::ShaderDefValue&gt;,std::hash::random::RandomState&gt;*, bool, bool, ref$&lt;str$&gt;, alloc::vec::Vec (82 samples, 0.05%)</title><rect x="12.2257%" y="1813" width="0.0475%" height="15" fill="rgb(205,176,3)" fg:x="21115" fg:w="82"/><text x="12.4757%" y="1823.50"></text></g><g><title>boids.exe`enum2$&lt;core::result::Result&lt;naga_oil::compose::preprocess::PreprocessorMetaData,enum2$&lt;naga_oil::compose::error::ComposerErrorInner&gt; &gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;naga_oil::compose::preprocess::PreprocessorMetaData,enum2$ (54 samples, 0.03%)</title><rect x="12.2732%" y="1829" width="0.0313%" height="15" fill="rgb(235,151,15)" fg:x="21197" fg:w="54"/><text x="12.5232%" y="1839.50"></text></g><g><title>boids.exe`naga_oil::compose::preprocess::Preprocessor::get_preprocessor_metadata(ref$ (54 samples, 0.03%)</title><rect x="12.2732%" y="1813" width="0.0313%" height="15" fill="rgb(237,209,11)" fg:x="21197" fg:w="54"/><text x="12.5232%" y="1823.50"></text></g><g><title>boids.exe`naga_oil::compose::Composer::create_module_ir(ref$&lt;str$&gt;, alloc::string::String, enum2$&lt;naga_oil::compose::ShaderLanguage&gt;, ref$&lt;slice2$&lt;naga_oil::compose::ImportDefinition&gt; &gt;, std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$ (18 samples, 0.01%)</title><rect x="12.3114%" y="1765" width="0.0104%" height="15" fill="rgb(243,227,24)" fg:x="21263" fg:w="18"/><text x="12.5614%" y="1775.50"></text></g><g><title>boids.exe`enum2$&lt;core::result::Result&lt;naga_oil::compose::ComposableModule,naga_oil::compose::error::ComposerError&gt; &gt;::map_err(enum2$&lt;core::result::Result (23 samples, 0.01%)</title><rect x="12.3108%" y="1797" width="0.0133%" height="15" fill="rgb(239,193,16)" fg:x="21262" fg:w="23"/><text x="12.5608%" y="1807.50"></text></g><g><title>boids.exe`naga_oil::compose::Composer::create_composable_module(naga_oil::compose::ComposableModuleDefinition*, alloc::string::String, std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$&lt;naga_oil::compose::ShaderDefValue&gt;,std::hash::random::RandomState&gt;*, bool, bool, ref$&lt;str$&gt;, alloc::vec::Vec (23 samples, 0.01%)</title><rect x="12.3108%" y="1781" width="0.0133%" height="15" fill="rgb(231,27,9)" fg:x="21262" fg:w="23"/><text x="12.5608%" y="1791.50"></text></g><g><title>boids.exe`enum2$&lt;core::result::Result&lt;naga_oil::compose::preprocess::PreprocessOutput,enum2$&lt;naga_oil::compose::error::ComposerErrorInner&gt; &gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;naga_oil::compose::preprocess::PreprocessOutput,enum2$ (22 samples, 0.01%)</title><rect x="12.3241%" y="1797" width="0.0127%" height="15" fill="rgb(219,169,10)" fg:x="21285" fg:w="22"/><text x="12.5741%" y="1807.50"></text></g><g><title>boids.exe`naga_oil::compose::preprocess::Preprocessor::preprocess(ref$&lt;str$&gt;, std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$ (22 samples, 0.01%)</title><rect x="12.3241%" y="1781" width="0.0127%" height="15" fill="rgb(244,229,43)" fg:x="21285" fg:w="22"/><text x="12.5741%" y="1791.50"></text></g><g><title>boids.exe`naga_oil::compose::Composer::ensure_imports(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;naga_oil::compose::ImportDefWithOffset&gt;,naga_oil::compose::impl$9::make_naga_module::closure_env$4&gt;, std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$ (63 samples, 0.04%)</title><rect x="12.3102%" y="1829" width="0.0365%" height="15" fill="rgb(254,38,20)" fg:x="21261" fg:w="63"/><text x="12.5602%" y="1839.50"></text></g><g><title>boids.exe`naga_oil::compose::Composer::ensure_import(naga_oil::compose::ComposableModuleDefinition*, std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$ (62 samples, 0.04%)</title><rect x="12.3108%" y="1813" width="0.0359%" height="15" fill="rgb(250,47,30)" fg:x="21262" fg:w="62"/><text x="12.5608%" y="1823.50"></text></g><g><title>boids.exe`core::array::impl$23::map(ref$ (22 samples, 0.01%)</title><rect x="12.3484%" y="1813" width="0.0127%" height="15" fill="rgb(224,124,36)" fg:x="21327" fg:w="22"/><text x="12.5984%" y="1823.50"></text></g><g><title>boids.exe`core::array::impl$23::try_map(ref$&lt;str$&gt;[2], core::ops::try_trait::impl$0::wrap_mut_1::closure_env$0&lt;alloc::string::String,ref$ (22 samples, 0.01%)</title><rect x="12.3484%" y="1797" width="0.0127%" height="15" fill="rgb(246,68,51)" fg:x="21327" fg:w="22"/><text x="12.5984%" y="1807.50"></text></g><g><title>boids.exe`core::array::drain::drain_array_with(ref$&lt;str$&gt;[2], core::array::impl$23::try_map::closure_env$0&lt;ref$&lt;str$&gt;,2,core::ops::try_trait::NeverShortCircuit&lt;alloc::string::String&gt;,core::ops::try_trait::impl$0::wrap_mut_1::closure_env$0&lt;alloc::string::String,ref$ (22 samples, 0.01%)</title><rect x="12.3484%" y="1781" width="0.0127%" height="15" fill="rgb(253,43,49)" fg:x="21327" fg:w="22"/><text x="12.5984%" y="1791.50"></text></g><g><title>boids.exe`core::array::impl$23::try_map::closure$0(core::array::impl$23::try_map::closure_env$0&lt;ref$&lt;str$&gt;,2,core::ops::try_trait::NeverShortCircuit&lt;alloc::string::String&gt;,core::ops::try_trait::impl$0::wrap_mut_1::closure_env$0&lt;alloc::string::String,ref$&lt;str$&gt;,naga_oil::compose::preprocess::impl$2::preprocess::closure_env$1&gt; &gt;, core::array::drain::Drain&lt;ref$ (22 samples, 0.01%)</title><rect x="12.3484%" y="1765" width="0.0127%" height="15" fill="rgb(219,54,36)" fg:x="21327" fg:w="22"/><text x="12.5984%" y="1775.50"></text></g><g><title>boids.exe`core::array::try_from_trusted_iterator(core::iter::adapters::map::Map&lt;core::array::drain::Drain&lt;ref$&lt;str$&gt; &gt;,core::ops::try_trait::impl$0::wrap_mut_1::closure_env$0&lt;alloc::string::String,ref$ (22 samples, 0.01%)</title><rect x="12.3484%" y="1749" width="0.0127%" height="15" fill="rgb(227,133,34)" fg:x="21327" fg:w="22"/><text x="12.5984%" y="1759.50"></text></g><g><title>boids.exe`core::array::try_from_fn(core::array::try_from_trusted_iterator::next::closure_env$0&lt;core::ops::try_trait::NeverShortCircuit&lt;alloc::string::String&gt;,core::iter::adapters::map::Map&lt;core::array::drain::Drain&lt;ref$&lt;str$&gt; &gt;,core::ops::try_trait::impl$0::wrap_mut_1::closure_env$0&lt;alloc::string::String,ref$ (22 samples, 0.01%)</title><rect x="12.3484%" y="1733" width="0.0127%" height="15" fill="rgb(247,227,15)" fg:x="21327" fg:w="22"/><text x="12.5984%" y="1743.50"></text></g><g><title>boids.exe`core::array::try_from_fn_erased(ref_mut$&lt;slice2$&lt;core::mem::maybe_uninit::MaybeUninit&lt;alloc::string::String&gt; &gt; &gt;, core::array::try_from_trusted_iterator::next::closure_env$0&lt;core::ops::try_trait::NeverShortCircuit&lt;alloc::string::String&gt;,core::iter::adapters::map::Map&lt;core::array::drain::Drain&lt;ref$&lt;str$&gt; &gt;,core::ops::try_trait::impl$0::wrap_mut_1::closure_env$0&lt;alloc::string::String,ref$ (22 samples, 0.01%)</title><rect x="12.3484%" y="1717" width="0.0127%" height="15" fill="rgb(229,96,14)" fg:x="21327" fg:w="22"/><text x="12.5984%" y="1727.50"></text></g><g><title>boids.exe`core::ops::try_trait::impl$1::branch(core::ops::try_trait::NeverShortCircuit (21 samples, 0.01%)</title><rect x="12.3490%" y="1701" width="0.0122%" height="15" fill="rgb(220,79,17)" fg:x="21328" fg:w="21"/><text x="12.5990%" y="1711.50"></text></g><g><title>boids.exe`core::iter::adapters::map::impl$8::next_unchecked&lt;core::ops::try_trait::NeverShortCircuit&lt;alloc::string::String&gt;,core::array::drain::Drain&lt;ref$&lt;str$&gt; &gt;,core::ops::try_trait::impl$0::wrap_mut_1::closure_env$0&lt;alloc::string::String,ref$&lt;str$&gt;,naga_oil::compose::preprocess::impl$2::preprocess::closure_env$1&gt; &gt;(core::iter::adapters::map::Map&lt;core::array::drain::Drain&lt;ref$&lt;str$&gt; &gt;,core::ops::try_trait::impl$0::wrap_mut_1::closure_env$0&lt;alloc::string::String,ref$ (21 samples, 0.01%)</title><rect x="12.3490%" y="1685" width="0.0122%" height="15" fill="rgb(205,131,53)" fg:x="21328" fg:w="21"/><text x="12.5990%" y="1695.50"></text></g><g><title>boids.exe`core::ops::try_trait::impl$0::wrap_mut_1::closure$0(core::ops::try_trait::impl$0::wrap_mut_1::closure_env$0&lt;alloc::string::String,ref$&lt;str$&gt;,naga_oil::compose::preprocess::impl$2::preprocess::closure_env$1&gt;*, ref$ (21 samples, 0.01%)</title><rect x="12.3490%" y="1669" width="0.0122%" height="15" fill="rgb(209,50,29)" fg:x="21328" fg:w="21"/><text x="12.5990%" y="1679.50"></text></g><g><title>boids.exe`naga_oil::compose::preprocess::impl$2::preprocess::closure$1(naga_oil::compose::preprocess::impl$2::preprocess::closure_env$1*, ref$ (21 samples, 0.01%)</title><rect x="12.3490%" y="1653" width="0.0122%" height="15" fill="rgb(245,86,46)" fg:x="21328" fg:w="21"/><text x="12.5990%" y="1663.50"></text></g><g><title>boids.exe`regex_automata::meta::regex::Regex::search_captures (21 samples, 0.01%)</title><rect x="12.3728%" y="1765" width="0.0122%" height="15" fill="rgb(235,66,46)" fg:x="21369" fg:w="21"/><text x="12.6228%" y="1775.50"></text></g><g><title>boids.exe`regex::regex::string::Regex::captures_at(ref$ (26 samples, 0.02%)</title><rect x="12.3704%" y="1781" width="0.0151%" height="15" fill="rgb(232,148,31)" fg:x="21365" fg:w="26"/><text x="12.6204%" y="1791.50"></text></g><g><title>boids.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;tuple$&lt;bool,enum2$&lt;core::option::Option&lt;ref$&lt;str$&gt; &gt; &gt; &gt;,enum2$ (33 samples, 0.02%)</title><rect x="12.3704%" y="1813" width="0.0191%" height="15" fill="rgb(217,149,8)" fg:x="21365" fg:w="33"/><text x="12.6204%" y="1823.50"></text></g><g><title>boids.exe`naga_oil::compose::preprocess::Preprocessor::check_scope(std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$&lt;naga_oil::compose::ShaderDefValue&gt;,std::hash::random::RandomState&gt;*, ref$&lt;str$&gt;, enum2$&lt;core::option::Option&lt;ref_mut$ (33 samples, 0.02%)</title><rect x="12.3704%" y="1797" width="0.0191%" height="15" fill="rgb(209,183,11)" fg:x="21365" fg:w="33"/><text x="12.6204%" y="1807.50"></text></g><g><title>boids.exe`enum2$&lt;core::result::Result&lt;alloc::string::String,usize&gt; &gt;::map_err(enum2$&lt;core::result::Result (28 samples, 0.02%)</title><rect x="12.3896%" y="1813" width="0.0162%" height="15" fill="rgb(208,55,20)" fg:x="21398" fg:w="28"/><text x="12.6396%" y="1823.50"></text></g><g><title>boids.exe`naga_oil::compose::parse_imports::substitute_identifiers(ref$&lt;str$&gt;, unsigned long long, indexmap::map::IndexMap&lt;alloc::string::String,alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;,std::hash::random::RandomState&gt;*, indexmap::map::IndexMap (28 samples, 0.02%)</title><rect x="12.3896%" y="1797" width="0.0162%" height="15" fill="rgb(218,39,14)" fg:x="21398" fg:w="28"/><text x="12.6396%" y="1807.50"></text></g><g><title>boids.exe`enum2$&lt;core::result::Result&lt;alloc::string::String,usize&gt; &gt;::unwrap(enum2$&lt;core::result::Result (37 samples, 0.02%)</title><rect x="12.4058%" y="1813" width="0.0214%" height="15" fill="rgb(216,169,33)" fg:x="21426" fg:w="37"/><text x="12.6558%" y="1823.50"></text></g><g><title>boids.exe`naga_oil::compose::parse_imports::substitute_identifiers(ref$&lt;str$&gt;, unsigned long long, indexmap::map::IndexMap&lt;alloc::string::String,alloc::vec::Vec&lt;alloc::string::String,alloc::alloc::Global&gt;,std::hash::random::RandomState&gt;*, indexmap::map::IndexMap (37 samples, 0.02%)</title><rect x="12.4058%" y="1797" width="0.0214%" height="15" fill="rgb(233,80,24)" fg:x="21426" fg:w="37"/><text x="12.6558%" y="1807.50"></text></g><g><title>boids.exe`naga_oil::compose::preprocess::Preprocessor::preprocess(ref$&lt;str$&gt;, std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$ (163 samples, 0.09%)</title><rect x="12.3473%" y="1829" width="0.0944%" height="15" fill="rgb(213,179,31)" fg:x="21325" fg:w="163"/><text x="12.5973%" y="1839.50"></text></g><g><title>boids.exe`naga_oil::compose::Composer::make_naga_module (381 samples, 0.22%)</title><rect x="12.2234%" y="1845" width="0.2206%" height="15" fill="rgb(209,19,5)" fg:x="21111" fg:w="381"/><text x="12.4734%" y="1855.50"></text></g><g><title>boids.exe`bevy_render::render_resource::pipeline_cache::ShaderCache::get(bevy_render::renderer::render_device::RenderDevice*, unsigned long long, enum2$&lt;bevy_asset::id::AssetId&lt;bevy_render::render_resource::shader::Shader&gt; &gt;, ref$&lt;slice2$&lt;enum2$ (413 samples, 0.24%)</title><rect x="12.2101%" y="1861" width="0.2391%" height="15" fill="rgb(219,18,35)" fg:x="21088" fg:w="413"/><text x="12.4601%" y="1871.50"></text></g><g><title>boids.exe`bevy_render::renderer::render_device::RenderDevice::create_compute_pipeline (22 samples, 0.01%)</title><rect x="12.4492%" y="1861" width="0.0127%" height="15" fill="rgb(209,169,16)" fg:x="21501" fg:w="22"/><text x="12.6992%" y="1871.50"></text></g><g><title>boids.exe`bevy_render::render_resource::pipeline::impl$4::from (22 samples, 0.01%)</title><rect x="12.4492%" y="1845" width="0.0127%" height="15" fill="rgb(245,90,51)" fg:x="21501" fg:w="22"/><text x="12.6992%" y="1855.50"></text></g><g><title>boids.exe`bevy_render::render_resource::pipeline::ComputePipelineId::new (22 samples, 0.01%)</title><rect x="12.4492%" y="1829" width="0.0127%" height="15" fill="rgb(220,99,45)" fg:x="21501" fg:w="22"/><text x="12.6992%" y="1839.50"></text></g><g><title>boids.exe`core::sync::atomic::AtomicU32::fetch_add (22 samples, 0.01%)</title><rect x="12.4492%" y="1813" width="0.0127%" height="15" fill="rgb(249,89,25)" fg:x="21501" fg:w="22"/><text x="12.6992%" y="1823.50"></text></g><g><title>boids.exe`core::sync::atomic::atomic_add (22 samples, 0.01%)</title><rect x="12.4492%" y="1797" width="0.0127%" height="15" fill="rgb(239,193,0)" fg:x="21501" fg:w="22"/><text x="12.6992%" y="1807.50"></text></g><g><title>boids.exe`wgpu::backend::wgpu_core::impl$13::create_compute_pipeline (22 samples, 0.01%)</title><rect x="12.4492%" y="1781" width="0.0127%" height="15" fill="rgb(231,126,1)" fg:x="21501" fg:w="22"/><text x="12.6992%" y="1791.50"></text></g><g><title>boids.exe`wgpu_core::global::Global::device_create_compute_pipeline(wgpu_core::id::Id&lt;enum2$&lt;wgpu_core::id::markers::Device&gt; &gt;, wgpu_core::pipeline::ComputePipelineDescriptor*, enum2$&lt;core::option::Option&lt;wgpu_core::id::Id&lt;enum2$&lt;wgpu_core::id::markers::ComputePipeline&gt; &gt; &gt; &gt;, enum2$&lt;core::option::Option (22 samples, 0.01%)</title><rect x="12.4492%" y="1765" width="0.0127%" height="15" fill="rgb(243,166,3)" fg:x="21501" fg:w="22"/><text x="12.6992%" y="1775.50"></text></g><g><title>boids.exe`wgpu_core::device::resource::Device::create_compute_pipeline(alloc::sync::Arc (22 samples, 0.01%)</title><rect x="12.4492%" y="1749" width="0.0127%" height="15" fill="rgb(223,22,34)" fg:x="21501" fg:w="22"/><text x="12.6992%" y="1759.50"></text></g><g><title>boids.exe`wgpu_core::device::resource::Device::raw (22 samples, 0.01%)</title><rect x="12.4492%" y="1733" width="0.0127%" height="15" fill="rgb(251,52,51)" fg:x="21501" fg:w="22"/><text x="12.6992%" y="1743.50"></text></g><g><title>boids.exe`wgpu_hal::dynamic::device::impl$0::create_compute_pipeline&lt;wgpu_hal::vulkan::Device&gt;(wgpu_hal::vulkan::Device*, wgpu_hal::ComputePipelineDescriptor&lt;dyn$&lt;wgpu_hal::dynamic::DynPipelineLayout&gt;,dyn$&lt;wgpu_hal::dynamic::DynShaderModule&gt;,dyn$ (22 samples, 0.01%)</title><rect x="12.4492%" y="1717" width="0.0127%" height="15" fill="rgb(221,165,28)" fg:x="21501" fg:w="22"/><text x="12.6992%" y="1727.50"></text></g><g><title>boids.exe`enum2$&lt;core::result::Result&lt;wgpu_hal::vulkan::ComputePipeline,enum2$&lt;wgpu_hal::PipelineError&gt; &gt; &gt;::map(enum2$&lt;core::result::Result&lt;wgpu_hal::vulkan::ComputePipeline,enum2$&lt;wgpu_hal::PipelineError&gt; &gt; &gt;, wgpu_hal::dynamic::device::impl$0::create_compute_pipeline::closure_env$1 (22 samples, 0.01%)</title><rect x="12.4492%" y="1701" width="0.0127%" height="15" fill="rgb(218,121,47)" fg:x="21501" fg:w="22"/><text x="12.6992%" y="1711.50"></text></g><g><title>boids.exe`wgpu_hal::vulkan::device::impl$4::create_compute_pipeline(wgpu_hal::vulkan::Device*, wgpu_hal::ComputePipelineDescriptor&lt;wgpu_hal::vulkan::PipelineLayout,enum2$ (22 samples, 0.01%)</title><rect x="12.4492%" y="1685" width="0.0127%" height="15" fill="rgb(209,120,9)" fg:x="21501" fg:w="22"/><text x="12.6992%" y="1695.50"></text></g><g><title>boids.exe`async_task::raw::RawTask&lt;async_executor::AsyncCallOnDrop&lt;enum2$&lt;bevy_render::render_resource::pipeline_cache::impl$8::start_create_compute_pipeline::async_block_env$0&gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;enum2$&lt;bevy_render::render_resource::pipeline_cache::Pipeline&gt;,enum2$&lt;bevy_render::render_resource::pipeline_cache::PipelineCacheError&gt; &gt; &gt;,enum2$&lt;bevy_render::render_resource::pipeline_cache::impl$8::start_create_compute_pipeline::async_block_env$0&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;enum2$&lt;bevy_render::render_resource::pipeline_cache::Pipeline&gt;,enum2$&lt;bevy_render::render_resource::pipeline_cache::PipelineCacheError&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$&lt;&gt; &gt;::run&lt;async_executor::AsyncCallOnDrop&lt;enum2$&lt;bevy_render::render_resource::pipeline_cache::impl$8::start_create_compute_pipeline::async_block_env$0&gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;enum2$&lt;bevy_render::render_resource::pipeline_cache::Pipeline&gt;,enum2$&lt;bevy_render::render_resource::pipeline_cache::PipelineCacheError&gt; &gt; &gt;,enum2$&lt;bevy_render::render_resource::pipeline_cache::impl$8::start_create_compute_pipeline::async_block_env$0&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;enum2$&lt;bevy_render::render_resource::pipeline_cache::Pipeline&gt;,enum2$&lt;bevy_render::render_resource::pipeline_cache::PipelineCacheError&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$&lt;&gt; &gt;(tuple$ (437 samples, 0.25%)</title><rect x="12.2095%" y="1941" width="0.2530%" height="15" fill="rgb(236,68,12)" fg:x="21087" fg:w="437"/><text x="12.4595%" y="1951.50"></text></g><g><title>boids.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;async_task::raw::impl$3::run::closure_env$1&lt;async_executor::AsyncCallOnDrop&lt;enum2$&lt;bevy_render::render_resource::pipeline_cache::impl$8::start_create_compute_pipeline::async_block_env$0&gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;enum2$&lt;bevy_render::render_resource::pipeline_cache::Pipeline&gt;,enum2$&lt;bevy_render::render_resource::pipeline_cache::PipelineCacheError&gt; &gt; &gt;,enum2$&lt;bevy_render::render_resource::pipeline_cache::impl$8::start_create_compute_pipeline::async_block_env$0&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;enum2$&lt;bevy_render::render_resource::pipeline_cache::Pipeline&gt;,enum2$&lt;bevy_render::render_resource::pipeline_cache::PipelineCacheError&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$ (436 samples, 0.25%)</title><rect x="12.2101%" y="1925" width="0.2524%" height="15" fill="rgb(225,194,26)" fg:x="21088" fg:w="436"/><text x="12.4601%" y="1935.50"></text></g><g><title>boids.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;async_task::raw::impl$3::run::closure_env$1&lt;async_executor::AsyncCallOnDrop&lt;enum2$&lt;bevy_render::render_resource::pipeline_cache::impl$8::start_create_compute_pipeline::async_block_env$0&gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;enum2$&lt;bevy_render::render_resource::pipeline_cache::Pipeline&gt;,enum2$&lt;bevy_render::render_resource::pipeline_cache::PipelineCacheError&gt; &gt; &gt;,enum2$&lt;bevy_render::render_resource::pipeline_cache::impl$8::start_create_compute_pipeline::async_block_env$0&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;enum2$&lt;bevy_render::render_resource::pipeline_cache::Pipeline&gt;,enum2$&lt;bevy_render::render_resource::pipeline_cache::PipelineCacheError&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$ (436 samples, 0.25%)</title><rect x="12.2101%" y="1909" width="0.2524%" height="15" fill="rgb(231,84,39)" fg:x="21088" fg:w="436"/><text x="12.4601%" y="1919.50"></text></g><g><title>boids.exe`std::panicking::try::do_call (436 samples, 0.25%)</title><rect x="12.2101%" y="1893" width="0.2524%" height="15" fill="rgb(210,11,45)" fg:x="21088" fg:w="436"/><text x="12.4601%" y="1903.50"></text></g><g><title>boids.exe`bevy_render::render_resource::pipeline_cache::impl$8::start_create_compute_pipeline::async_block$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (436 samples, 0.25%)</title><rect x="12.2101%" y="1877" width="0.2524%" height="15" fill="rgb(224,54,52)" fg:x="21088" fg:w="436"/><text x="12.4601%" y="1887.50"></text></g><g><title>boids.exe`enum2$&lt;core::result::Result&lt;naga_oil::compose::preprocess::PreprocessOutput,enum2$&lt;naga_oil::compose::error::ComposerErrorInner&gt; &gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;naga_oil::compose::preprocess::PreprocessOutput,enum2$ (21 samples, 0.01%)</title><rect x="12.4845%" y="1797" width="0.0122%" height="15" fill="rgb(238,102,14)" fg:x="21562" fg:w="21"/><text x="12.7345%" y="1807.50"></text></g><g><title>boids.exe`naga_oil::compose::preprocess::Preprocessor::preprocess(ref$&lt;str$&gt;, std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$ (21 samples, 0.01%)</title><rect x="12.4845%" y="1781" width="0.0122%" height="15" fill="rgb(243,160,52)" fg:x="21562" fg:w="21"/><text x="12.7345%" y="1791.50"></text></g><g><title>boids.exe`naga_oil::compose::Composer::ensure_imports(core::iter::adapters::map::Map&lt;core::slice::iter::Iter&lt;naga_oil::compose::ImportDefWithOffset&gt;,naga_oil::compose::impl$9::make_naga_module::closure_env$4&gt;, std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$ (44 samples, 0.03%)</title><rect x="12.4752%" y="1829" width="0.0255%" height="15" fill="rgb(216,114,19)" fg:x="21546" fg:w="44"/><text x="12.7252%" y="1839.50"></text></g><g><title>boids.exe`naga_oil::compose::Composer::ensure_import(naga_oil::compose::ComposableModuleDefinition*, std::collections::hash::map::HashMap&lt;alloc::string::String,enum2$ (44 samples, 0.03%)</title><rect x="12.4752%" y="1813" width="0.0255%" height="15" fill="rgb(244,166,37)" fg:x="21546" fg:w="44"/><text x="12.7252%" y="1823.50"></text></g><g><title>boids.exe`naga_oil::compose::Composer::make_naga_module (64 samples, 0.04%)</title><rect x="12.4689%" y="1845" width="0.0371%" height="15" fill="rgb(246,29,44)" fg:x="21535" fg:w="64"/><text x="12.7189%" y="1855.50"></text></g><g><title>boids.exe`bevy_render::render_resource::pipeline_cache::ShaderCache::get(bevy_render::renderer::render_device::RenderDevice*, unsigned long long, enum2$&lt;bevy_asset::id::AssetId&lt;bevy_render::render_resource::shader::Shader&gt; &gt;, ref$&lt;slice2$&lt;enum2$ (77 samples, 0.04%)</title><rect x="12.4625%" y="1861" width="0.0446%" height="15" fill="rgb(215,56,53)" fg:x="21524" fg:w="77"/><text x="12.7125%" y="1871.50"></text></g><g><title>boids.exe`async_task::raw::RawTask&lt;async_executor::AsyncCallOnDrop&lt;enum2$&lt;bevy_render::render_resource::pipeline_cache::impl$8::start_create_render_pipeline::async_block_env$0&gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;enum2$&lt;bevy_render::render_resource::pipeline_cache::Pipeline&gt;,enum2$&lt;bevy_render::render_resource::pipeline_cache::PipelineCacheError&gt; &gt; &gt;,enum2$&lt;bevy_render::render_resource::pipeline_cache::impl$8::start_create_render_pipeline::async_block_env$0&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;enum2$&lt;bevy_render::render_resource::pipeline_cache::Pipeline&gt;,enum2$&lt;bevy_render::render_resource::pipeline_cache::PipelineCacheError&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$&lt;&gt; &gt;::run&lt;async_executor::AsyncCallOnDrop&lt;enum2$&lt;bevy_render::render_resource::pipeline_cache::impl$8::start_create_render_pipeline::async_block_env$0&gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;enum2$&lt;bevy_render::render_resource::pipeline_cache::Pipeline&gt;,enum2$&lt;bevy_render::render_resource::pipeline_cache::PipelineCacheError&gt; &gt; &gt;,enum2$&lt;bevy_render::render_resource::pipeline_cache::impl$8::start_create_render_pipeline::async_block_env$0&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;enum2$&lt;bevy_render::render_resource::pipeline_cache::Pipeline&gt;,enum2$&lt;bevy_render::render_resource::pipeline_cache::PipelineCacheError&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$&lt;&gt; &gt;(tuple$ (83 samples, 0.05%)</title><rect x="12.4625%" y="1941" width="0.0481%" height="15" fill="rgb(217,60,2)" fg:x="21524" fg:w="83"/><text x="12.7125%" y="1951.50"></text></g><g><title>boids.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;async_task::raw::impl$3::run::closure_env$1&lt;async_executor::AsyncCallOnDrop&lt;enum2$&lt;bevy_render::render_resource::pipeline_cache::impl$8::start_create_render_pipeline::async_block_env$0&gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;enum2$&lt;bevy_render::render_resource::pipeline_cache::Pipeline&gt;,enum2$&lt;bevy_render::render_resource::pipeline_cache::PipelineCacheError&gt; &gt; &gt;,enum2$&lt;bevy_render::render_resource::pipeline_cache::impl$8::start_create_render_pipeline::async_block_env$0&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;enum2$&lt;bevy_render::render_resource::pipeline_cache::Pipeline&gt;,enum2$&lt;bevy_render::render_resource::pipeline_cache::PipelineCacheError&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$ (83 samples, 0.05%)</title><rect x="12.4625%" y="1925" width="0.0481%" height="15" fill="rgb(207,26,24)" fg:x="21524" fg:w="83"/><text x="12.7125%" y="1935.50"></text></g><g><title>boids.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;async_task::raw::impl$3::run::closure_env$1&lt;async_executor::AsyncCallOnDrop&lt;enum2$&lt;bevy_render::render_resource::pipeline_cache::impl$8::start_create_render_pipeline::async_block_env$0&gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;enum2$&lt;bevy_render::render_resource::pipeline_cache::Pipeline&gt;,enum2$&lt;bevy_render::render_resource::pipeline_cache::PipelineCacheError&gt; &gt; &gt;,enum2$&lt;bevy_render::render_resource::pipeline_cache::impl$8::start_create_render_pipeline::async_block_env$0&gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;enum2$&lt;bevy_render::render_resource::pipeline_cache::Pipeline&gt;,enum2$&lt;bevy_render::render_resource::pipeline_cache::PipelineCacheError&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$ (83 samples, 0.05%)</title><rect x="12.4625%" y="1909" width="0.0481%" height="15" fill="rgb(252,210,15)" fg:x="21524" fg:w="83"/><text x="12.7125%" y="1919.50"></text></g><g><title>boids.exe`std::panicking::try::do_call (83 samples, 0.05%)</title><rect x="12.4625%" y="1893" width="0.0481%" height="15" fill="rgb(253,209,26)" fg:x="21524" fg:w="83"/><text x="12.7125%" y="1903.50"></text></g><g><title>boids.exe`bevy_render::render_resource::pipeline_cache::impl$8::start_create_render_pipeline::async_block$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (83 samples, 0.05%)</title><rect x="12.4625%" y="1877" width="0.0481%" height="15" fill="rgb(238,170,14)" fg:x="21524" fg:w="83"/><text x="12.7125%" y="1887.50"></text></g><g><title>boids.exe`async_task::raw::RawTask&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::query::state::impl$2::par_fold_init_unchecked_manual::closure$0::closure$1::async_block_env$0&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt;,core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity,alloc::alloc::Global&gt;,bevy_platform::hash::NoOpHash&gt; &gt;,bevy_ecs::query::par_iter::impl$0::for_each_init::closure_env$0&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt;,bevy_render::view::visibility::check_visibility::closure_env$1,bevy_render::view::visibility::check_visibility::closure_env$0,core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity,alloc::alloc::Global&gt;,bevy_platform::hash::NoOpHash&gt; &gt; &gt;,bevy_render::view::visibility::check_visibility::closure_env$0&gt; &gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::query::state::impl$2::par_fold_init_unchecked_manual::closure$0::closure$1::async_block_env$0&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt;,core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity,alloc::alloc::Global&gt;,bevy_platform::hash::NoOpHash&gt; &gt;,bevy_ecs::query::par_iter::impl$0::for_each_init::closure_env$0&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt;,bevy_render::view::visibility::check_visibility::closure_env$1,bevy_render::view::visibility::check_visibility::closure_env$0,core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity,alloc::alloc::Global&gt;,bevy_platform::hash::NoOpHash&gt; &gt; &gt;,bevy_render::view::visibility::check_visibility::closure_env$0&gt; &gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$&lt;&gt; &gt;::run&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::query::state::impl$2::par_fold_init_unchecked_manual::closure$0::closure$1::async_block_env$0&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt;,core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity,alloc::alloc::Global&gt;,bevy_platform::hash::NoOpHash&gt; &gt;,bevy_ecs::query::par_iter::impl$0::for_each_init::closure_env$0&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt;,bevy_render::view::visibility::check_visibility::closure_env$1,bevy_render::view::visibility::check_visibility::closure_env$0,core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity,alloc::alloc::Global&gt;,bevy_platform::hash::NoOpHash&gt; &gt; &gt;,bevy_render::view::visibility::check_visibility::closure_env$0&gt; &gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::query::state::impl$2::par_fold_init_unchecked_manual::closure$0::closure$1::async_block_env$0&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt;,core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity,alloc::alloc::Global&gt;,bevy_platform::hash::NoOpHash&gt; &gt;,bevy_ecs::query::par_iter::impl$0::for_each_init::closure_env$0&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt;,bevy_render::view::visibility::check_visibility::closure_env$1,bevy_render::view::visibility::check_visibility::closure_env$0,core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity,alloc::alloc::Global&gt;,bevy_platform::hash::NoOpHash&gt; &gt; &gt;,bevy_render::view::visibility::check_visibility::closure_env$0&gt; &gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$&lt;&gt; &gt;(tuple$ (48 samples, 0.03%)</title><rect x="12.5106%" y="1941" width="0.0278%" height="15" fill="rgb(216,178,15)" fg:x="21607" fg:w="48"/><text x="12.7606%" y="1951.50"></text></g><g><title>boids.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;async_task::raw::impl$3::run::closure_env$1&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::query::state::impl$2::par_fold_init_unchecked_manual::closure$0::closure$1::async_block_env$0&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt;,core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity,alloc::alloc::Global&gt;,bevy_platform::hash::NoOpHash&gt; &gt;,bevy_ecs::query::par_iter::impl$0::for_each_init::closure_env$0&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt;,bevy_render::view::visibility::check_visibility::closure_env$1,bevy_render::view::visibility::check_visibility::closure_env$0,core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity,alloc::alloc::Global&gt;,bevy_platform::hash::NoOpHash&gt; &gt; &gt;,bevy_render::view::visibility::check_visibility::closure_env$0&gt; &gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::query::state::impl$2::par_fold_init_unchecked_manual::closure$0::closure$1::async_block_env$0&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt;,core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity,alloc::alloc::Global&gt;,bevy_platform::hash::NoOpHash&gt; &gt;,bevy_ecs::query::par_iter::impl$0::for_each_init::closure_env$0&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt;,bevy_render::view::visibility::check_visibility::closure_env$1,bevy_render::view::visibility::check_visibility::closure_env$0,core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity,alloc::alloc::Global&gt;,bevy_platform::hash::NoOpHash&gt; &gt; &gt;,bevy_render::view::visibility::check_visibility::closure_env$0&gt; &gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$ (47 samples, 0.03%)</title><rect x="12.5111%" y="1925" width="0.0272%" height="15" fill="rgb(250,197,2)" fg:x="21608" fg:w="47"/><text x="12.7611%" y="1935.50"></text></g><g><title>boids.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;async_task::raw::impl$3::run::closure_env$1&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::query::state::impl$2::par_fold_init_unchecked_manual::closure$0::closure$1::async_block_env$0&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt;,core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity,alloc::alloc::Global&gt;,bevy_platform::hash::NoOpHash&gt; &gt;,bevy_ecs::query::par_iter::impl$0::for_each_init::closure_env$0&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt;,bevy_render::view::visibility::check_visibility::closure_env$1,bevy_render::view::visibility::check_visibility::closure_env$0,core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity,alloc::alloc::Global&gt;,bevy_platform::hash::NoOpHash&gt; &gt; &gt;,bevy_render::view::visibility::check_visibility::closure_env$0&gt; &gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::query::state::impl$2::par_fold_init_unchecked_manual::closure$0::closure$1::async_block_env$0&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt;,core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity,alloc::alloc::Global&gt;,bevy_platform::hash::NoOpHash&gt; &gt;,bevy_ecs::query::par_iter::impl$0::for_each_init::closure_env$0&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt;,bevy_render::view::visibility::check_visibility::closure_env$1,bevy_render::view::visibility::check_visibility::closure_env$0,core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity,alloc::alloc::Global&gt;,bevy_platform::hash::NoOpHash&gt; &gt; &gt;,bevy_render::view::visibility::check_visibility::closure_env$0&gt; &gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$ (47 samples, 0.03%)</title><rect x="12.5111%" y="1909" width="0.0272%" height="15" fill="rgb(212,70,42)" fg:x="21608" fg:w="47"/><text x="12.7611%" y="1919.50"></text></g><g><title>boids.exe`std::panicking::try::do_call (47 samples, 0.03%)</title><rect x="12.5111%" y="1893" width="0.0272%" height="15" fill="rgb(227,213,9)" fg:x="21608" fg:w="47"/><text x="12.7611%" y="1903.50"></text></g><g><title>boids.exe`futures_lite::future::impl$11::poll&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::query::state::impl$2::par_fold_init_unchecked_manual::closure$0::closure$1::async_block_env$0&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt;,core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity,alloc::alloc::Global&gt;,bevy_platform::hash::NoOpHash&gt; &gt;,bevy_ecs::query::par_iter::impl$0::for_each_init::closure_env$0&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt;,bevy_render::view::visibility::check_visibility::closure_env$1,bevy_render::view::visibility::check_visibility::closure_env$0,core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity,alloc::alloc::Global&gt;,bevy_platform::hash::NoOpHash&gt; &gt; &gt;,bevy_render::view::visibility::check_visibility::closure_env$0&gt; &gt; &gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::query::state::impl$2::par_fold_init_unchecked_manual::closure$0::closure$1::async_block_env$0&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt;,core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity,alloc::alloc::Global&gt;,bevy_platform::hash::NoOpHash&gt; &gt;,bevy_ecs::query::par_iter::impl$0::for_each_init::closure_env$0&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt;,bevy_render::view::visibility::check_visibility::closure_env$1,bevy_render::view::visibility::check_visibility::closure_env$0,core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec (47 samples, 0.03%)</title><rect x="12.5111%" y="1877" width="0.0272%" height="15" fill="rgb(245,99,25)" fg:x="21608" fg:w="47"/><text x="12.7611%" y="1887.50"></text></g><g><title>boids.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;futures_lite::future::impl$11::poll::closure_env$0&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::query::state::impl$2::par_fold_init_unchecked_manual::closure$0::closure$1::async_block_env$0&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt;,core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity,alloc::alloc::Global&gt;,bevy_platform::hash::NoOpHash&gt; &gt;,bevy_ecs::query::par_iter::impl$0::for_each_init::closure_env$0&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt;,bevy_render::view::visibility::check_visibility::closure_env$1,bevy_render::view::visibility::check_visibility::closure_env$0,core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec (47 samples, 0.03%)</title><rect x="12.5111%" y="1861" width="0.0272%" height="15" fill="rgb(250,82,29)" fg:x="21608" fg:w="47"/><text x="12.7611%" y="1871.50"></text></g><g><title>boids.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;futures_lite::future::impl$11::poll::closure_env$0&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::query::state::impl$2::par_fold_init_unchecked_manual::closure$0::closure$1::async_block_env$0&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt;,core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity,alloc::alloc::Global&gt;,bevy_platform::hash::NoOpHash&gt; &gt;,bevy_ecs::query::par_iter::impl$0::for_each_init::closure_env$0&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt;,bevy_render::view::visibility::check_visibility::closure_env$1,bevy_render::view::visibility::check_visibility::closure_env$0,core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec (47 samples, 0.03%)</title><rect x="12.5111%" y="1845" width="0.0272%" height="15" fill="rgb(241,226,54)" fg:x="21608" fg:w="47"/><text x="12.7611%" y="1855.50"></text></g><g><title>boids.exe`std::panicking::try::do_call (47 samples, 0.03%)</title><rect x="12.5111%" y="1829" width="0.0272%" height="15" fill="rgb(221,99,41)" fg:x="21608" fg:w="47"/><text x="12.7611%" y="1839.50"></text></g><g><title>boids.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;futures_lite::future::impl$11::poll::closure_env$0&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::query::state::impl$2::par_fold_init_unchecked_manual::closure$0::closure$1::async_block_env$0&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt;,core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity,alloc::alloc::Global&gt;,bevy_platform::hash::NoOpHash&gt; &gt;,bevy_ecs::query::par_iter::impl$0::for_each_init::closure_env$0&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt;,bevy_render::view::visibility::check_visibility::closure_env$1,bevy_render::view::visibility::check_visibility::closure_env$0,core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec (47 samples, 0.03%)</title><rect x="12.5111%" y="1813" width="0.0272%" height="15" fill="rgb(213,90,21)" fg:x="21608" fg:w="47"/><text x="12.7611%" y="1823.50"></text></g><g><title>boids.exe`futures_lite::future::impl$11::poll::closure$0(futures_lite::future::impl$11::poll::closure_env$0&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::query::state::impl$2::par_fold_init_unchecked_manual::closure$0::closure$1::async_block_env$0&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt;,core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity,alloc::alloc::Global&gt;,bevy_platform::hash::NoOpHash&gt; &gt;,bevy_ecs::query::par_iter::impl$0::for_each_init::closure_env$0&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt;,bevy_render::view::visibility::check_visibility::closure_env$1,bevy_render::view::visibility::check_visibility::closure_env$0,core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec (47 samples, 0.03%)</title><rect x="12.5111%" y="1797" width="0.0272%" height="15" fill="rgb(205,208,24)" fg:x="21608" fg:w="47"/><text x="12.7611%" y="1807.50"></text></g><g><title>boids.exe`core::panic::unwind_safe::impl$28::poll(core::pin::Pin&lt;ref_mut$&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::query::state::impl$2::par_fold_init_unchecked_manual::closure$0::closure$1::async_block_env$0&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt;,core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity,alloc::alloc::Global&gt;,bevy_platform::hash::NoOpHash&gt; &gt;,bevy_ecs::query::par_iter::impl$0::for_each_init::closure_env$0&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt;,bevy_render::view::visibility::check_visibility::closure_env$1,bevy_render::view::visibility::check_visibility::closure_env$0,core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec (47 samples, 0.03%)</title><rect x="12.5111%" y="1781" width="0.0272%" height="15" fill="rgb(246,31,12)" fg:x="21608" fg:w="47"/><text x="12.7611%" y="1791.50"></text></g><g><title>boids.exe`bevy_ecs::query::state::impl$2::par_fold_init_unchecked_manual::closure$0::closure$1::async_block$0(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;bevy_ecs::query::state::impl$2::par_fold_init_unchecked_manual::closure$0::closure$1::async_block_env$0&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt;,core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity,alloc::alloc::Global&gt;,bevy_platform::hash::NoOpHash&gt; &gt;,bevy_ecs::query::par_iter::impl$0::for_each_init::closure_env$0&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt;,bevy_render::view::visibility::check_visibility::closure_env$1,bevy_render::view::visibility::check_visibility::closure_env$0,core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec (47 samples, 0.03%)</title><rect x="12.5111%" y="1765" width="0.0272%" height="15" fill="rgb(213,154,6)" fg:x="21608" fg:w="47"/><text x="12.7611%" y="1775.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec (45 samples, 0.03%)</title><rect x="12.5123%" y="1749" width="0.0261%" height="15" fill="rgb(222,163,29)" fg:x="21610" fg:w="45"/><text x="12.7623%" y="1759.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place (45 samples, 0.03%)</title><rect x="12.5123%" y="1733" width="0.0261%" height="15" fill="rgb(227,201,8)" fg:x="21610" fg:w="45"/><text x="12.7623%" y="1743.50"></text></g><g><title>boids.exe`core::cell::impl$44::drop (45 samples, 0.03%)</title><rect x="12.5123%" y="1717" width="0.0261%" height="15" fill="rgb(233,9,32)" fg:x="21610" fg:w="45"/><text x="12.7623%" y="1727.50"></text></g><g><title>boids.exe`core::cell::Cell&lt;isize&gt;::set (45 samples, 0.03%)</title><rect x="12.5123%" y="1701" width="0.0261%" height="15" fill="rgb(217,54,24)" fg:x="21610" fg:w="45"/><text x="12.7623%" y="1711.50"></text></g><g><title>boids.exe`core::cell::Cell&lt;isize&gt;::replace (45 samples, 0.03%)</title><rect x="12.5123%" y="1685" width="0.0261%" height="15" fill="rgb(235,192,0)" fg:x="21610" fg:w="45"/><text x="12.7623%" y="1695.50"></text></g><g><title>boids.exe`core::mem::replace (45 samples, 0.03%)</title><rect x="12.5123%" y="1669" width="0.0261%" height="15" fill="rgb(235,45,9)" fg:x="21610" fg:w="45"/><text x="12.7623%" y="1679.50"></text></g><g><title>boids.exe`bevy_ecs::query::iter::QueryIter&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt; &gt;::fold_over_storage_range&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt;,core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity,alloc::alloc::Global&gt;,bevy_platform::hash::NoOpHash&gt; &gt;,bevy_ecs::query::par_iter::impl$0::for_each_init::closure_env$0&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt;,bevy_render::view::visibility::check_visibility::closure_env$1,bevy_render::view::visibility::check_visibility::closure_env$0,core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity,alloc::alloc::Global&gt;,bevy_platform::hash::NoOpHash&gt; &gt; &gt; &gt;(core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity,alloc::alloc::Global&gt;,bevy_platform::hash::NoOpHash&gt; &gt;, bevy_ecs::query::par_iter::impl$0::for_each_init::closure_env$0&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt;,bevy_render::view::visibility::check_visibility::closure_env$1,bevy_render::view::visibility::check_visibility::closure_env$0,core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity,alloc::alloc::Global&gt;,bevy_platform::hash::NoOpHash&gt; &gt; &gt;*, bevy_ecs::query::state::StorageId, enum2$&lt;core::option::Option&lt;core::ops::range::Range (45 samples, 0.03%)</title><rect x="12.5123%" y="1653" width="0.0261%" height="15" fill="rgb(246,42,40)" fg:x="21610" fg:w="45"/><text x="12.7623%" y="1663.50"></text></g><g><title>boids.exe`bevy_ecs::query::iter::QueryIter&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt; &gt;::fold_over_table_range(core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity,alloc::alloc::Global&gt;,bevy_platform::hash::NoOpHash&gt; &gt;, bevy_ecs::query::par_iter::impl$0::for_each_init::closure_env$0&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt;,bevy_render::view::visibility::check_visibility::closure_env$1,bevy_render::view::visibility::check_visibility::closure_env$0,core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity,alloc::alloc::Global&gt;,bevy_platform::hash::NoOpHash&gt; &gt; &gt;*, bevy_ecs::storage::table::Table*, core::ops::range::Range (45 samples, 0.03%)</title><rect x="12.5123%" y="1637" width="0.0261%" height="15" fill="rgb(248,111,24)" fg:x="21610" fg:w="45"/><text x="12.7623%" y="1647.50"></text></g><g><title>boids.exe`bevy_ecs::query::par_iter::impl$0::for_each_init::closure$0&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt;,bevy_render::view::visibility::check_visibility::closure_env$1,bevy_render::view::visibility::check_visibility::closure_env$0,core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity,alloc::alloc::Global&gt;,bevy_platform::hash::NoOpHash&gt; &gt; &gt;(bevy_ecs::query::par_iter::impl$0::for_each_init::closure_env$0&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt;,bevy_render::view::visibility::check_visibility::closure_env$1,bevy_render::view::visibility::check_visibility::closure_env$0,core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity,alloc::alloc::Global&gt;,bevy_platform::hash::NoOpHash&gt; &gt; &gt;*, core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity,alloc::alloc::Global&gt;,bevy_platform::hash::NoOpHash&gt; &gt;, tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,bevy_ecs::change_detection::Mut&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$ (43 samples, 0.02%)</title><rect x="12.5135%" y="1621" width="0.0249%" height="15" fill="rgb(249,65,22)" fg:x="21612" fg:w="43"/><text x="12.7635%" y="1631.50"></text></g><g><title>boids.exe`bevy_render::view::visibility::check_visibility::closure$1(bevy_render::view::visibility::check_visibility::closure_env$1*, core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity,alloc::alloc::Global&gt;,bevy_platform::hash::NoOpHash&gt; &gt;*, tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,bevy_ecs::change_detection::Mut&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$ (41 samples, 0.02%)</title><rect x="12.5146%" y="1605" width="0.0237%" height="15" fill="rgb(238,111,51)" fg:x="21614" fg:w="41"/><text x="12.7646%" y="1615.50"></text></g><g><title>boids.exe`async_task::raw::RawTask&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env$0&gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env$0&gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$&lt;&gt; &gt;::drop_future(tuple$ (30 samples, 0.02%)</title><rect x="12.5511%" y="1925" width="0.0174%" height="15" fill="rgb(250,118,22)" fg:x="21677" fg:w="30"/><text x="12.8011%" y="1935.50"></text></g><g><title>boids.exe`async_task::utils::abort_on_panic(async_task::raw::impl$3::drop_future::closure_env$0&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env$0&gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env$0&gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$ (30 samples, 0.02%)</title><rect x="12.5511%" y="1909" width="0.0174%" height="15" fill="rgb(234,84,26)" fg:x="21677" fg:w="30"/><text x="12.8011%" y="1919.50"></text></g><g><title>boids.exe`async_task::raw::impl$3::drop_future::closure$0(async_task::raw::impl$3::drop_future::closure_env$0&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env$0&gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env$0&gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$ (30 samples, 0.02%)</title><rect x="12.5511%" y="1893" width="0.0174%" height="15" fill="rgb(243,172,12)" fg:x="21677" fg:w="30"/><text x="12.8011%" y="1903.50"></text></g><g><title>boids.exe`core::ptr::mut_ptr::impl$0::drop_in_place(async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env$0&gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$ (30 samples, 0.02%)</title><rect x="12.5511%" y="1877" width="0.0174%" height="15" fill="rgb(236,150,49)" fg:x="21677" fg:w="30"/><text x="12.8011%" y="1887.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env$0&gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$ (30 samples, 0.02%)</title><rect x="12.5511%" y="1861" width="0.0174%" height="15" fill="rgb(225,197,26)" fg:x="21677" fg:w="30"/><text x="12.8011%" y="1871.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(async_executor::CallOnDrop&lt;async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$ (30 samples, 0.02%)</title><rect x="12.5511%" y="1845" width="0.0174%" height="15" fill="rgb(214,17,42)" fg:x="21677" fg:w="30"/><text x="12.8011%" y="1855.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$ (30 samples, 0.02%)</title><rect x="12.5511%" y="1829" width="0.0174%" height="15" fill="rgb(224,165,40)" fg:x="21677" fg:w="30"/><text x="12.8011%" y="1839.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(alloc::sync::Arc (30 samples, 0.02%)</title><rect x="12.5511%" y="1813" width="0.0174%" height="15" fill="rgb(246,100,4)" fg:x="21677" fg:w="30"/><text x="12.8011%" y="1823.50"></text></g><g><title>boids.exe`alloc::sync::impl$38::drop(alloc::sync::Arc (30 samples, 0.02%)</title><rect x="12.5511%" y="1797" width="0.0174%" height="15" fill="rgb(222,103,0)" fg:x="21677" fg:w="30"/><text x="12.8011%" y="1807.50"></text></g><g><title>boids.exe`alloc::sync::Arc&lt;async_executor::State,alloc::alloc::Global&gt;::inner (30 samples, 0.02%)</title><rect x="12.5511%" y="1781" width="0.0174%" height="15" fill="rgb(227,189,26)" fg:x="21677" fg:w="30"/><text x="12.8011%" y="1791.50"></text></g><g><title>boids.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;async_executor::State&gt; &gt;::as_ref (30 samples, 0.02%)</title><rect x="12.5511%" y="1765" width="0.0174%" height="15" fill="rgb(214,202,17)" fg:x="21677" fg:w="30"/><text x="12.8011%" y="1775.50"></text></g><g><title>boids.exe`async_executor::impl$19::drop&lt;async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;enum2$&lt;core::result::Result&lt;enum2$&lt;bevy_gltf::loader::ImageOrPath&gt;,enum2$&lt;bevy_gltf::loader::GltfError&gt; &gt; &gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_gltf::loader::load_gltf::async_fn$0::closure$10::closure$0::async_block_env$0&gt; &gt; &gt; &gt; &gt;(async_executor::CallOnDrop&lt;async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;enum2$&lt;core::result::Result&lt;enum2$&lt;bevy_gltf::loader::ImageOrPath&gt;,enum2$&lt;bevy_gltf::loader::GltfError&gt; &gt; &gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$ (30 samples, 0.02%)</title><rect x="12.5511%" y="1749" width="0.0174%" height="15" fill="rgb(229,111,3)" fg:x="21677" fg:w="30"/><text x="12.8011%" y="1759.50"></text></g><g><title>boids.exe`async_executor::impl$5::spawn_inner::closure$0(async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;enum2$&lt;core::result::Result&lt;enum2$&lt;bevy_gltf::loader::ImageOrPath&gt;,enum2$&lt;bevy_gltf::loader::GltfError&gt; &gt; &gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$ (28 samples, 0.02%)</title><rect x="12.5523%" y="1733" width="0.0162%" height="15" fill="rgb(229,172,15)" fg:x="21679" fg:w="28"/><text x="12.8023%" y="1743.50"></text></g><g><title>`0x7FF89D8DA0D1 (24 samples, 0.01%)</title><rect x="12.5690%" y="1765" width="0.0139%" height="15" fill="rgb(230,224,35)" fg:x="21708" fg:w="24"/><text x="12.8190%" y="1775.50"></text></g><g><title>`0x7FF89D951B74 (24 samples, 0.01%)</title><rect x="12.5690%" y="1749" width="0.0139%" height="15" fill="rgb(251,141,6)" fg:x="21708" fg:w="24"/><text x="12.8190%" y="1759.50"></text></g><g><title>boids.exe`async_task::utils::abort_on_panic(async_task::raw::impl$3::run::closure_env$3&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env$0&gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env$0&gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$ (25 samples, 0.01%)</title><rect x="12.5690%" y="1925" width="0.0145%" height="15" fill="rgb(225,208,6)" fg:x="21708" fg:w="25"/><text x="12.8190%" y="1935.50"></text></g><g><title>boids.exe`async_task::raw::impl$3::run::closure$3(async_task::raw::impl$3::run::closure_env$3&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env$0&gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env$0&gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$ (25 samples, 0.01%)</title><rect x="12.5690%" y="1909" width="0.0145%" height="15" fill="rgb(246,181,16)" fg:x="21708" fg:w="25"/><text x="12.8190%" y="1919.50"></text></g><g><title>boids.exe`core::task::wake::Waker::wake (25 samples, 0.01%)</title><rect x="12.5690%" y="1893" width="0.0145%" height="15" fill="rgb(227,129,36)" fg:x="21708" fg:w="25"/><text x="12.8190%" y="1903.50"></text></g><g><title>boids.exe`alloc::task::raw_waker::wake&lt;parking::Inner&gt;(tuple$ (25 samples, 0.01%)</title><rect x="12.5690%" y="1877" width="0.0145%" height="15" fill="rgb(248,117,24)" fg:x="21708" fg:w="25"/><text x="12.8190%" y="1887.50"></text></g><g><title>boids.exe`parking::impl$8::wake(alloc::sync::Arc (25 samples, 0.01%)</title><rect x="12.5690%" y="1861" width="0.0145%" height="15" fill="rgb(214,185,35)" fg:x="21708" fg:w="25"/><text x="12.8190%" y="1871.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(alloc::sync::Arc (25 samples, 0.01%)</title><rect x="12.5690%" y="1845" width="0.0145%" height="15" fill="rgb(236,150,34)" fg:x="21708" fg:w="25"/><text x="12.8190%" y="1855.50"></text></g><g><title>boids.exe`alloc::sync::impl$38::drop(alloc::sync::Arc (25 samples, 0.01%)</title><rect x="12.5690%" y="1829" width="0.0145%" height="15" fill="rgb(243,228,27)" fg:x="21708" fg:w="25"/><text x="12.8190%" y="1839.50"></text></g><g><title>boids.exe`core::sync::atomic::AtomicUsize::fetch_sub (25 samples, 0.01%)</title><rect x="12.5690%" y="1813" width="0.0145%" height="15" fill="rgb(245,77,44)" fg:x="21708" fg:w="25"/><text x="12.8190%" y="1823.50"></text></g><g><title>boids.exe`core::sync::atomic::atomic_sub (25 samples, 0.01%)</title><rect x="12.5690%" y="1797" width="0.0145%" height="15" fill="rgb(235,214,42)" fg:x="21708" fg:w="25"/><text x="12.8190%" y="1807.50"></text></g><g><title>boids.exe`parking::Inner::unpark (25 samples, 0.01%)</title><rect x="12.5690%" y="1781" width="0.0145%" height="15" fill="rgb(221,74,3)" fg:x="21708" fg:w="25"/><text x="12.8190%" y="1791.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::executor::multi_threaded::ExecutorState::rebuild_active_access (26 samples, 0.02%)</title><rect x="12.6003%" y="1701" width="0.0151%" height="15" fill="rgb(206,121,29)" fg:x="21762" fg:w="26"/><text x="12.8503%" y="1711.50"></text></g><g><title>boids.exe`bevy_ecs::query::access::Access&lt;bevy_ecs::component::ComponentId&gt;::is_compatible&lt;bevy_ecs::component::ComponentId&gt;(bevy_ecs::query::access::Access (21 samples, 0.01%)</title><rect x="12.6217%" y="1669" width="0.0122%" height="15" fill="rgb(249,131,53)" fg:x="21799" fg:w="21"/><text x="12.8717%" y="1679.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::executor::multi_threaded::ExecutorState::can_run(unsigned long long, alloc::boxed::Box&lt;dyn$&lt;bevy_ecs::system::system::System&lt;assoc$&lt;In,tuple$&lt;&gt; &gt;,assoc$&lt;Out,enum2$&lt;core::result::Result&lt;tuple$ (76 samples, 0.04%)</title><rect x="12.6165%" y="1685" width="0.0440%" height="15" fill="rgb(236,170,29)" fg:x="21790" fg:w="76"/><text x="12.8665%" y="1695.50"></text></g><g><title>boids.exe`async_task::raw::RawTask&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env$0&gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env$0&gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$&lt;&gt; &gt;::schedule&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env$0&gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env$0&gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$&lt;&gt; &gt;(tuple$ (21 samples, 0.01%)</title><rect x="12.6854%" y="1621" width="0.0122%" height="15" fill="rgb(247,96,15)" fg:x="21909" fg:w="21"/><text x="12.9354%" y="1631.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place (18 samples, 0.01%)</title><rect x="12.6872%" y="1605" width="0.0104%" height="15" fill="rgb(211,210,7)" fg:x="21912" fg:w="18"/><text x="12.9372%" y="1615.50"></text></g><g><title>boids.exe`core::task::wake::impl$10::drop (18 samples, 0.01%)</title><rect x="12.6872%" y="1589" width="0.0104%" height="15" fill="rgb(240,88,50)" fg:x="21912" fg:w="18"/><text x="12.9372%" y="1599.50"></text></g><g><title>boids.exe`async_task::runnable::impl$2::schedule&lt;tuple$&lt;&gt;,async_executor::impl$5::schedule::closure_env$0&gt;(async_executor::impl$5::schedule::closure_env$0*, async_task::runnable::Runnable&lt;tuple$ (18 samples, 0.01%)</title><rect x="12.6872%" y="1573" width="0.0104%" height="15" fill="rgb(209,229,26)" fg:x="21912" fg:w="18"/><text x="12.9372%" y="1583.50"></text></g><g><title>boids.exe`async_executor::Executor::spawn_inner(futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env$0&gt; &gt; &gt;, slab::Slab (30 samples, 0.02%)</title><rect x="12.6831%" y="1637" width="0.0174%" height="15" fill="rgb(210,68,23)" fg:x="21905" fg:w="30"/><text x="12.9331%" y="1647.50"></text></g><g><title>boids.exe`async_executor::Executor::spawn&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env$0&gt; &gt; &gt; &gt;(futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$ (34 samples, 0.02%)</title><rect x="12.6831%" y="1653" width="0.0197%" height="15" fill="rgb(229,180,13)" fg:x="21905" fg:w="34"/><text x="12.9331%" y="1663.50"></text></g><g><title>boids.exe`bevy_tasks::task_pool::Scope&lt;tuple$&lt;&gt; &gt;::spawn(enum2$ (40 samples, 0.02%)</title><rect x="12.6825%" y="1669" width="0.0232%" height="15" fill="rgb(236,53,44)" fg:x="21904" fg:w="40"/><text x="12.9325%" y="1679.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::executor::multi_threaded::ExecutorState::spawn_system_task (53 samples, 0.03%)</title><rect x="12.6773%" y="1685" width="0.0307%" height="15" fill="rgb(244,214,29)" fg:x="21895" fg:w="53"/><text x="12.9273%" y="1695.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::executor::multi_threaded::ExecutorState::spawn_system_tasks (167 samples, 0.10%)</title><rect x="12.6154%" y="1701" width="0.0967%" height="15" fill="rgb(220,75,29)" fg:x="21788" fg:w="167"/><text x="12.8654%" y="1711.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::executor::multi_threaded::ExecutorState::tick (211 samples, 0.12%)</title><rect x="12.5951%" y="1717" width="0.1222%" height="15" fill="rgb(214,183,37)" fg:x="21753" fg:w="211"/><text x="12.8451%" y="1727.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::executor::multi_threaded::Context::tick_executor (227 samples, 0.13%)</title><rect x="12.5870%" y="1733" width="0.1314%" height="15" fill="rgb(239,117,29)" fg:x="21739" fg:w="227"/><text x="12.8370%" y="1743.50"></text></g><g><title>boids.exe`bevy_ecs::schedule::executor::multi_threaded::Context::system_completed(unsigned long long, enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;, alloc::boxed::Box&lt;dyn$&lt;bevy_ecs::system::system::System&lt;assoc$&lt;In,tuple$&lt;&gt; &gt;,assoc$&lt;Out,enum2$&lt;core::result::Result&lt;tuple$ (245 samples, 0.14%)</title><rect x="12.5864%" y="1749" width="0.1419%" height="15" fill="rgb(237,171,35)" fg:x="21738" fg:w="245"/><text x="12.8364%" y="1759.50"></text></g><g><title>boids.exe`bevy_ecs::system::schedule_system::impl$1::run_unsafe&lt;bevy_ecs::system::function_system::FunctionSystem&lt;void (*)(bevy_ecs::change_detection::Res&lt;bevy_render::renderer::render_device::RenderDevice&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::renderer::RenderQueue&gt;,bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::SpriteMeta&gt;,bevy_ecs::change_detection::Res&lt;bevy_sprite::render::SpritePipeline&gt;,bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::ImageBindGroups&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::render_asset::RenderAssets&lt;bevy_render::texture::gpu_image::GpuImage&gt; &gt;,bevy_ecs::change_detection::Res&lt;bevy_sprite::render::ExtractedSprites&gt;,bevy_ecs::change_detection::Res&lt;bevy_sprite::render::ExtractedSlices&gt;,bevy_ecs::change_detection::ResMut&lt;bevy_render::render_phase::ViewSortedRenderPhases&lt;bevy_core_pipeline::core_2d::Transparent2d&gt; &gt;,bevy_ecs::change_detection::Res&lt;bevy_sprite::render::SpriteAssetEvents&gt;,bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::SpriteBatches&gt;),void (*)(bevy_ecs::change_detection::Res&lt;bevy_render::renderer::render_device::RenderDevice&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::renderer::RenderQueue&gt;,bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::SpriteMeta&gt;,bevy_ecs::change_detection::Res&lt;bevy_sprite::render::SpritePipeline&gt;,bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::ImageBindGroups&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::render_asset::RenderAssets&lt;bevy_render::texture::gpu_image::GpuImage&gt; &gt;,bevy_ecs::change_detection::Res&lt;bevy_sprite::render::ExtractedSprites&gt;,bevy_ecs::change_detection::Res&lt;bevy_sprite::render::ExtractedSlices&gt;,bevy_ecs::change_detection::ResMut&lt;bevy_render::render_phase::ViewSortedRenderPhases&lt;bevy_core_pipeline::core_2d::Transparent2d&gt; &gt;,bevy_ecs::change_detection::Res&lt;bevy_sprite::render::SpriteAssetEvents&gt;,bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::SpriteBatches&gt;)&gt; &gt;(bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;bevy_ecs::system::function_system::FunctionSystem&lt;void (*)(bevy_ecs::change_detection::Res&lt;bevy_render::renderer::render_device::RenderDevice&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::renderer::RenderQueue&gt;,bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::SpriteMeta&gt;,bevy_ecs::change_detection::Res&lt;bevy_sprite::render::SpritePipeline&gt;,bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::ImageBindGroups&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::render_asset::RenderAssets&lt;bevy_render::texture::gpu_image::GpuImage&gt; &gt;,bevy_ecs::change_detection::Res&lt;bevy_sprite::render::ExtractedSprites&gt;,bevy_ecs::change_detection::Res&lt;bevy_sprite::render::ExtractedSlices&gt;,bevy_ecs::change_detection::ResMut&lt;bevy_render::render_phase::ViewSortedRenderPhases&lt;bevy_core_pipeline::core_2d::Transparent2d&gt; &gt;,bevy_ecs::change_detection::Res&lt;bevy_sprite::render::SpriteAssetEvents&gt;,bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::SpriteBatches&gt;),void (*)(bevy_ecs::change_detection::Res&lt;bevy_render::renderer::render_device::RenderDevice&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::renderer::RenderQueue&gt;,bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::SpriteMeta&gt;,bevy_ecs::change_detection::Res&lt;bevy_sprite::render::SpritePipeline&gt;,bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::ImageBindGroups&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::render_asset::RenderAssets&lt;bevy_render::texture::gpu_image::GpuImage&gt; &gt;,bevy_ecs::change_detection::Res&lt;bevy_sprite::render::ExtractedSprites&gt;,bevy_ecs::change_detection::Res&lt;bevy_sprite::render::ExtractedSlices&gt;,bevy_ecs::change_detection::ResMut&lt;bevy_render::render_phase::ViewSortedRenderPhases&lt;bevy_core_pipeline::core_2d::Transparent2d&gt; &gt;,bevy_ecs::change_detection::Res&lt;bevy_sprite::render::SpriteAssetEvents&gt;,bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::SpriteBatches&gt;)&gt; &gt;*, tuple$ (48 samples, 0.03%)</title><rect x="12.7566%" y="1637" width="0.0278%" height="15" fill="rgb(229,178,53)" fg:x="22032" fg:w="48"/><text x="13.0066%" y="1647.50"></text></g><g><title>boids.exe`bevy_ecs::system::function_system::impl$7::run_unsafe(bevy_ecs::system::function_system::FunctionSystem&lt;void (*)(bevy_ecs::change_detection::Res&lt;bevy_render::renderer::render_device::RenderDevice&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::renderer::RenderQueue&gt;,bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::SpriteMeta&gt;,bevy_ecs::change_detection::Res&lt;bevy_sprite::render::SpritePipeline&gt;,bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::ImageBindGroups&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::render_asset::RenderAssets&lt;bevy_render::texture::gpu_image::GpuImage&gt; &gt;,bevy_ecs::change_detection::Res&lt;bevy_sprite::render::ExtractedSprites&gt;,bevy_ecs::change_detection::Res&lt;bevy_sprite::render::ExtractedSlices&gt;,bevy_ecs::change_detection::ResMut&lt;bevy_render::render_phase::ViewSortedRenderPhases&lt;bevy_core_pipeline::core_2d::Transparent2d&gt; &gt;,bevy_ecs::change_detection::Res&lt;bevy_sprite::render::SpriteAssetEvents&gt;,bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::SpriteBatches&gt;),void (*)(bevy_ecs::change_detection::Res&lt;bevy_render::renderer::render_device::RenderDevice&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::renderer::RenderQueue&gt;,bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::SpriteMeta&gt;,bevy_ecs::change_detection::Res&lt;bevy_sprite::render::SpritePipeline&gt;,bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::ImageBindGroups&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::render_asset::RenderAssets&lt;bevy_render::texture::gpu_image::GpuImage&gt; &gt;,bevy_ecs::change_detection::Res&lt;bevy_sprite::render::ExtractedSprites&gt;,bevy_ecs::change_detection::Res&lt;bevy_sprite::render::ExtractedSlices&gt;,bevy_ecs::change_detection::ResMut&lt;bevy_render::render_phase::ViewSortedRenderPhases&lt;bevy_core_pipeline::core_2d::Transparent2d&gt; &gt;,bevy_ecs::change_detection::Res&lt;bevy_sprite::render::SpriteAssetEvents&gt;,bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::SpriteBatches&gt;)&gt;*, tuple$ (48 samples, 0.03%)</title><rect x="12.7566%" y="1621" width="0.0278%" height="15" fill="rgb(210,102,19)" fg:x="22032" fg:w="48"/><text x="13.0066%" y="1631.50"></text></g><g><title>boids.exe`bevy_ecs::system::function_system::impl$49::run(void (**)(bevy_ecs::change_detection::Res&lt;bevy_render::renderer::render_device::RenderDevice&gt;, bevy_ecs::change_detection::Res&lt;bevy_render::renderer::RenderQueue&gt;, bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::SpriteMeta&gt;, bevy_ecs::change_detection::Res&lt;bevy_sprite::render::SpritePipeline&gt;, bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::ImageBindGroups&gt;, bevy_ecs::change_detection::Res&lt;bevy_render::render_asset::RenderAssets&lt;bevy_render::texture::gpu_image::GpuImage&gt; &gt;, bevy_ecs::change_detection::Res&lt;bevy_sprite::render::ExtractedSprites&gt;, bevy_ecs::change_detection::Res&lt;bevy_sprite::render::ExtractedSlices&gt;, bevy_ecs::change_detection::ResMut&lt;bevy_render::render_phase::ViewSortedRenderPhases&lt;bevy_core_pipeline::core_2d::Transparent2d&gt; &gt;, bevy_ecs::change_detection::Res&lt;bevy_sprite::render::SpriteAssetEvents&gt;, bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::SpriteBatches&gt;), tuple$&lt;&gt;, tuple$&lt;bevy_ecs::change_detection::Res&lt;bevy_render::renderer::render_device::RenderDevice&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::renderer::RenderQueue&gt;,bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::SpriteMeta&gt;,bevy_ecs::change_detection::Res&lt;bevy_sprite::render::SpritePipeline&gt;,bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::ImageBindGroups&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::render_asset::RenderAssets&lt;bevy_render::texture::gpu_image::GpuImage&gt; &gt;,bevy_ecs::change_detection::Res&lt;bevy_sprite::render::ExtractedSprites&gt;,bevy_ecs::change_detection::Res&lt;bevy_sprite::render::ExtractedSlices&gt;,bevy_ecs::change_detection::ResMut&lt;bevy_render::render_phase::ViewSortedRenderPhases&lt;bevy_core_pipeline::core_2d::Transparent2d&gt; &gt;,bevy_ecs::change_detection::Res&lt;bevy_sprite::render::SpriteAssetEvents&gt;,bevy_ecs::change_detection::ResMut (48 samples, 0.03%)</title><rect x="12.7566%" y="1605" width="0.0278%" height="15" fill="rgb(235,127,22)" fg:x="22032" fg:w="48"/><text x="13.0066%" y="1615.50"></text></g><g><title>boids.exe`bevy_ecs::system::function_system::impl$49::run::call_inner(void (**)(bevy_ecs::change_detection::Res&lt;bevy_render::renderer::render_device::RenderDevice&gt;, bevy_ecs::change_detection::Res&lt;bevy_render::renderer::RenderQueue&gt;, bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::SpriteMeta&gt;, bevy_ecs::change_detection::Res&lt;bevy_sprite::render::SpritePipeline&gt;, bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::ImageBindGroups&gt;, bevy_ecs::change_detection::Res&lt;bevy_render::render_asset::RenderAssets&lt;bevy_render::texture::gpu_image::GpuImage&gt; &gt;, bevy_ecs::change_detection::Res&lt;bevy_sprite::render::ExtractedSprites&gt;, bevy_ecs::change_detection::Res&lt;bevy_sprite::render::ExtractedSlices&gt;, bevy_ecs::change_detection::ResMut&lt;bevy_render::render_phase::ViewSortedRenderPhases&lt;bevy_core_pipeline::core_2d::Transparent2d&gt; &gt;, bevy_ecs::change_detection::Res&lt;bevy_sprite::render::SpriteAssetEvents&gt;, bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::SpriteBatches&gt;), bevy_ecs::change_detection::Res&lt;bevy_render::renderer::render_device::RenderDevice&gt;, bevy_ecs::change_detection::Res&lt;bevy_render::renderer::RenderQueue&gt;, bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::SpriteMeta&gt;, bevy_ecs::change_detection::Res&lt;bevy_sprite::render::SpritePipeline&gt;, bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::ImageBindGroups&gt;, bevy_ecs::change_detection::Res&lt;bevy_render::render_asset::RenderAssets&lt;bevy_render::texture::gpu_image::GpuImage&gt; &gt;, bevy_ecs::change_detection::Res&lt;bevy_sprite::render::ExtractedSprites&gt;, bevy_ecs::change_detection::Res&lt;bevy_sprite::render::ExtractedSlices&gt;, bevy_ecs::change_detection::ResMut&lt;bevy_render::render_phase::ViewSortedRenderPhases&lt;bevy_core_pipeline::core_2d::Transparent2d&gt; &gt;, bevy_ecs::change_detection::Res&lt;bevy_sprite::render::SpriteAssetEvents&gt;, bevy_ecs::change_detection::ResMut (48 samples, 0.03%)</title><rect x="12.7566%" y="1589" width="0.0278%" height="15" fill="rgb(244,31,31)" fg:x="22032" fg:w="48"/><text x="13.0066%" y="1599.50"></text></g><g><title>boids.exe`core::ops::function::impls::impl$3::call_mut(void (***)(bevy_ecs::change_detection::Res&lt;bevy_render::renderer::render_device::RenderDevice&gt;, bevy_ecs::change_detection::Res&lt;bevy_render::renderer::RenderQueue&gt;, bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::SpriteMeta&gt;, bevy_ecs::change_detection::Res&lt;bevy_sprite::render::SpritePipeline&gt;, bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::ImageBindGroups&gt;, bevy_ecs::change_detection::Res&lt;bevy_render::render_asset::RenderAssets&lt;bevy_render::texture::gpu_image::GpuImage&gt; &gt;, bevy_ecs::change_detection::Res&lt;bevy_sprite::render::ExtractedSprites&gt;, bevy_ecs::change_detection::Res&lt;bevy_sprite::render::ExtractedSlices&gt;, bevy_ecs::change_detection::ResMut&lt;bevy_render::render_phase::ViewSortedRenderPhases&lt;bevy_core_pipeline::core_2d::Transparent2d&gt; &gt;, bevy_ecs::change_detection::Res&lt;bevy_sprite::render::SpriteAssetEvents&gt;, bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::SpriteBatches&gt;), bevy_ecs::change_detection::Res&lt;bevy_render::renderer::render_device::RenderDevice&gt;, bevy_ecs::change_detection::Res&lt;bevy_render::renderer::RenderQueue&gt;, bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::SpriteMeta&gt;, bevy_ecs::change_detection::Res&lt;bevy_sprite::render::SpritePipeline&gt;, bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::ImageBindGroups&gt;, bevy_ecs::change_detection::Res&lt;bevy_render::render_asset::RenderAssets&lt;bevy_render::texture::gpu_image::GpuImage&gt; &gt;, bevy_ecs::change_detection::Res&lt;bevy_sprite::render::ExtractedSprites&gt;, bevy_ecs::change_detection::Res&lt;bevy_sprite::render::ExtractedSlices&gt;, bevy_ecs::change_detection::ResMut&lt;bevy_render::render_phase::ViewSortedRenderPhases&lt;bevy_core_pipeline::core_2d::Transparent2d&gt; &gt;, bevy_ecs::change_detection::Res&lt;bevy_sprite::render::SpriteAssetEvents&gt;, bevy_ecs::change_detection::ResMut (48 samples, 0.03%)</title><rect x="12.7566%" y="1573" width="0.0278%" height="15" fill="rgb(231,43,21)" fg:x="22032" fg:w="48"/><text x="13.0066%" y="1583.50"></text></g><g><title>boids.exe`core::ops::function::FnMut::call_mut(void (**)(bevy_ecs::change_detection::Res&lt;bevy_render::renderer::render_device::RenderDevice&gt;, bevy_ecs::change_detection::Res&lt;bevy_render::renderer::RenderQueue&gt;, bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::SpriteMeta&gt;, bevy_ecs::change_detection::Res&lt;bevy_sprite::render::SpritePipeline&gt;, bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::ImageBindGroups&gt;, bevy_ecs::change_detection::Res&lt;bevy_render::render_asset::RenderAssets&lt;bevy_render::texture::gpu_image::GpuImage&gt; &gt;, bevy_ecs::change_detection::Res&lt;bevy_sprite::render::ExtractedSprites&gt;, bevy_ecs::change_detection::Res&lt;bevy_sprite::render::ExtractedSlices&gt;, bevy_ecs::change_detection::ResMut&lt;bevy_render::render_phase::ViewSortedRenderPhases&lt;bevy_core_pipeline::core_2d::Transparent2d&gt; &gt;, bevy_ecs::change_detection::Res&lt;bevy_sprite::render::SpriteAssetEvents&gt;, bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::SpriteBatches&gt;), bevy_ecs::change_detection::Res&lt;bevy_render::renderer::render_device::RenderDevice&gt;, bevy_ecs::change_detection::Res&lt;bevy_render::renderer::RenderQueue&gt;, bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::SpriteMeta&gt;, bevy_ecs::change_detection::Res&lt;bevy_sprite::render::SpritePipeline&gt;, bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::ImageBindGroups&gt;, bevy_ecs::change_detection::Res&lt;bevy_render::render_asset::RenderAssets&lt;bevy_render::texture::gpu_image::GpuImage&gt; &gt;, bevy_ecs::change_detection::Res&lt;bevy_sprite::render::ExtractedSprites&gt;, bevy_ecs::change_detection::Res&lt;bevy_sprite::render::ExtractedSlices&gt;, bevy_ecs::change_detection::ResMut&lt;bevy_render::render_phase::ViewSortedRenderPhases&lt;bevy_core_pipeline::core_2d::Transparent2d&gt; &gt;, bevy_ecs::change_detection::Res&lt;bevy_sprite::render::SpriteAssetEvents&gt;, bevy_ecs::change_detection::ResMut (48 samples, 0.03%)</title><rect x="12.7566%" y="1557" width="0.0278%" height="15" fill="rgb(217,131,35)" fg:x="22032" fg:w="48"/><text x="13.0066%" y="1567.50"></text></g><g><title>boids.exe`bevy_sprite::render::prepare_sprite_image_bind_groups(bevy_ecs::change_detection::Res&lt;bevy_render::renderer::render_device::RenderDevice&gt;, bevy_ecs::change_detection::Res&lt;bevy_render::renderer::RenderQueue&gt;, bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::SpriteMeta&gt;, bevy_ecs::change_detection::Res&lt;bevy_sprite::render::SpritePipeline&gt;, bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::ImageBindGroups&gt;, bevy_ecs::change_detection::Res&lt;bevy_render::render_asset::RenderAssets&lt;bevy_render::texture::gpu_image::GpuImage&gt; &gt;, bevy_ecs::change_detection::Res&lt;bevy_sprite::render::ExtractedSprites&gt;, bevy_ecs::change_detection::Res&lt;bevy_sprite::render::ExtractedSlices&gt;, bevy_ecs::change_detection::ResMut&lt;bevy_render::render_phase::ViewSortedRenderPhases&lt;bevy_core_pipeline::core_2d::Transparent2d&gt; &gt;, bevy_ecs::change_detection::Res&lt;bevy_sprite::render::SpriteAssetEvents&gt;, bevy_ecs::change_detection::ResMut (48 samples, 0.03%)</title><rect x="12.7566%" y="1541" width="0.0278%" height="15" fill="rgb(221,149,4)" fg:x="22032" fg:w="48"/><text x="13.0066%" y="1551.50"></text></g><g><title>`0x7FF817467EDE (19 samples, 0.01%)</title><rect x="12.7850%" y="1381" width="0.0110%" height="15" fill="rgb(232,170,28)" fg:x="22081" fg:w="19"/><text x="13.0350%" y="1391.50"></text></g><g><title>`0x7FF8174682FF (19 samples, 0.01%)</title><rect x="12.7850%" y="1365" width="0.0110%" height="15" fill="rgb(238,56,10)" fg:x="22081" fg:w="19"/><text x="13.0350%" y="1375.50"></text></g><g><title>`0x7FF853BD05CE (18 samples, 0.01%)</title><rect x="12.7989%" y="1301" width="0.0104%" height="15" fill="rgb(235,196,14)" fg:x="22105" fg:w="18"/><text x="13.0489%" y="1311.50"></text></g><g><title>`0x7FF853BC9B61 (18 samples, 0.01%)</title><rect x="12.7989%" y="1285" width="0.0104%" height="15" fill="rgb(216,45,48)" fg:x="22105" fg:w="18"/><text x="13.0489%" y="1295.50"></text></g><g><title>`0x7FF853BC6D89 (18 samples, 0.01%)</title><rect x="12.7989%" y="1269" width="0.0104%" height="15" fill="rgb(238,213,17)" fg:x="22105" fg:w="18"/><text x="13.0489%" y="1279.50"></text></g><g><title>`0x7FF853C4A9B6 (18 samples, 0.01%)</title><rect x="12.7989%" y="1253" width="0.0104%" height="15" fill="rgb(212,13,2)" fg:x="22105" fg:w="18"/><text x="13.0489%" y="1263.50"></text></g><g><title>`0x7FF853C49260 (18 samples, 0.01%)</title><rect x="12.7989%" y="1237" width="0.0104%" height="15" fill="rgb(240,114,20)" fg:x="22105" fg:w="18"/><text x="13.0489%" y="1247.50"></text></g><g><title>`0x7FFFD8A47998 (18 samples, 0.01%)</title><rect x="12.7989%" y="1221" width="0.0104%" height="15" fill="rgb(228,41,40)" fg:x="22105" fg:w="18"/><text x="13.0489%" y="1231.50"></text></g><g><title>`0x7FFFD8C0AA48 (21 samples, 0.01%)</title><rect x="12.8105%" y="1173" width="0.0122%" height="15" fill="rgb(244,132,35)" fg:x="22125" fg:w="21"/><text x="13.0605%" y="1183.50"></text></g><g><title>`0x7FFFD8BB40C3 (21 samples, 0.01%)</title><rect x="12.8105%" y="1157" width="0.0122%" height="15" fill="rgb(253,189,4)" fg:x="22125" fg:w="21"/><text x="13.0605%" y="1167.50"></text></g><g><title>`0x7FFFD8BDD2C7 (21 samples, 0.01%)</title><rect x="12.8105%" y="1141" width="0.0122%" height="15" fill="rgb(224,37,19)" fg:x="22125" fg:w="21"/><text x="13.0605%" y="1151.50"></text></g><g><title>`0x7FFFD8A7958A (23 samples, 0.01%)</title><rect x="12.8099%" y="1189" width="0.0133%" height="15" fill="rgb(235,223,18)" fg:x="22124" fg:w="23"/><text x="13.0599%" y="1199.50"></text></g><g><title>`0x7FFFD8A3A14A (34 samples, 0.02%)</title><rect x="12.8267%" y="1141" width="0.0197%" height="15" fill="rgb(235,163,25)" fg:x="22153" fg:w="34"/><text x="13.0767%" y="1151.50"></text></g><g><title>`0x7FFFD8A3B2E3 (32 samples, 0.02%)</title><rect x="12.8279%" y="1125" width="0.0185%" height="15" fill="rgb(217,145,28)" fg:x="22155" fg:w="32"/><text x="13.0779%" y="1135.50"></text></g><g><title>`0x7FFFD9F9622B (25 samples, 0.01%)</title><rect x="12.8319%" y="1109" width="0.0145%" height="15" fill="rgb(223,223,32)" fg:x="22162" fg:w="25"/><text x="13.0819%" y="1119.50"></text></g><g><title>`0x7FFFD9F983F7 (23 samples, 0.01%)</title><rect x="12.8331%" y="1093" width="0.0133%" height="15" fill="rgb(227,189,39)" fg:x="22164" fg:w="23"/><text x="13.0831%" y="1103.50"></text></g><g><title>`0x7FFFD8A79A6E (49 samples, 0.03%)</title><rect x="12.8232%" y="1189" width="0.0284%" height="15" fill="rgb(248,10,22)" fg:x="22147" fg:w="49"/><text x="13.0732%" y="1199.50"></text></g><g><title>`0x7FFFD8AB1167 (49 samples, 0.03%)</title><rect x="12.8232%" y="1173" width="0.0284%" height="15" fill="rgb(248,46,39)" fg:x="22147" fg:w="49"/><text x="13.0732%" y="1183.50"></text></g><g><title>`0x7FFFD8A39B74 (44 samples, 0.03%)</title><rect x="12.8261%" y="1157" width="0.0255%" height="15" fill="rgb(248,113,48)" fg:x="22152" fg:w="44"/><text x="13.0761%" y="1167.50"></text></g><g><title>`0x7FFFD8A3A14A (32 samples, 0.02%)</title><rect x="12.8539%" y="1125" width="0.0185%" height="15" fill="rgb(245,16,25)" fg:x="22200" fg:w="32"/><text x="13.1039%" y="1135.50"></text></g><g><title>`0x7FFFD8A3B2E3 (30 samples, 0.02%)</title><rect x="12.8551%" y="1109" width="0.0174%" height="15" fill="rgb(249,152,16)" fg:x="22202" fg:w="30"/><text x="13.1051%" y="1119.50"></text></g><g><title>`0x7FFFD9F9622B (25 samples, 0.01%)</title><rect x="12.8580%" y="1093" width="0.0145%" height="15" fill="rgb(250,16,1)" fg:x="22207" fg:w="25"/><text x="13.1080%" y="1103.50"></text></g><g><title>`0x7FFFD9F983F7 (18 samples, 0.01%)</title><rect x="12.8620%" y="1077" width="0.0104%" height="15" fill="rgb(249,138,3)" fg:x="22214" fg:w="18"/><text x="13.1120%" y="1087.50"></text></g><g><title>`0x7FFFD8A81339 (41 samples, 0.02%)</title><rect x="12.8539%" y="1173" width="0.0237%" height="15" fill="rgb(227,71,41)" fg:x="22200" fg:w="41"/><text x="13.1039%" y="1183.50"></text></g><g><title>`0x7FFFD8A39797 (41 samples, 0.02%)</title><rect x="12.8539%" y="1157" width="0.0237%" height="15" fill="rgb(209,184,23)" fg:x="22200" fg:w="41"/><text x="13.1039%" y="1167.50"></text></g><g><title>`0x7FFFD8A39B74 (41 samples, 0.02%)</title><rect x="12.8539%" y="1141" width="0.0237%" height="15" fill="rgb(223,215,31)" fg:x="22200" fg:w="41"/><text x="13.1039%" y="1151.50"></text></g><g><title>`0x7FFFD9F9622B (24 samples, 0.01%)</title><rect x="12.8817%" y="1093" width="0.0139%" height="15" fill="rgb(210,146,28)" fg:x="22248" fg:w="24"/><text x="13.1317%" y="1103.50"></text></g><g><title>`0x7FFFD9F983F7 (21 samples, 0.01%)</title><rect x="12.8834%" y="1077" width="0.0122%" height="15" fill="rgb(209,183,41)" fg:x="22251" fg:w="21"/><text x="13.1334%" y="1087.50"></text></g><g><title>`0x7FFFD8A3A14A (32 samples, 0.02%)</title><rect x="12.8777%" y="1125" width="0.0185%" height="15" fill="rgb(209,224,45)" fg:x="22241" fg:w="32"/><text x="13.1277%" y="1135.50"></text></g><g><title>`0x7FFFD8A3B2E3 (30 samples, 0.02%)</title><rect x="12.8788%" y="1109" width="0.0174%" height="15" fill="rgb(224,209,51)" fg:x="22243" fg:w="30"/><text x="13.1288%" y="1119.50"></text></g><g><title>`0x7FFFD8A79E84 (85 samples, 0.05%)</title><rect x="12.8539%" y="1189" width="0.0492%" height="15" fill="rgb(223,17,39)" fg:x="22200" fg:w="85"/><text x="13.1039%" y="1199.50"></text></g><g><title>`0x7FFFD8A81377 (44 samples, 0.03%)</title><rect x="12.8777%" y="1173" width="0.0255%" height="15" fill="rgb(234,204,37)" fg:x="22241" fg:w="44"/><text x="13.1277%" y="1183.50"></text></g><g><title>`0x7FFFD8A39797 (44 samples, 0.03%)</title><rect x="12.8777%" y="1157" width="0.0255%" height="15" fill="rgb(236,120,5)" fg:x="22241" fg:w="44"/><text x="13.1277%" y="1167.50"></text></g><g><title>`0x7FFFD8A39B74 (44 samples, 0.03%)</title><rect x="12.8777%" y="1141" width="0.0255%" height="15" fill="rgb(248,97,27)" fg:x="22241" fg:w="44"/><text x="13.1277%" y="1151.50"></text></g><g><title>`0x7FF853C119DB (165 samples, 0.10%)</title><rect x="12.8099%" y="1237" width="0.0955%" height="15" fill="rgb(240,66,17)" fg:x="22124" fg:w="165"/><text x="13.0599%" y="1247.50"></text></g><g><title>`0x7FF853C4BE81 (165 samples, 0.10%)</title><rect x="12.8099%" y="1221" width="0.0955%" height="15" fill="rgb(210,79,3)" fg:x="22124" fg:w="165"/><text x="13.0599%" y="1231.50"></text></g><g><title>`0x7FFFD8B0AB84 (165 samples, 0.10%)</title><rect x="12.8099%" y="1205" width="0.0955%" height="15" fill="rgb(214,176,27)" fg:x="22124" fg:w="165"/><text x="13.0599%" y="1215.50"></text></g><g><title>`0x7FF817467FA9 (205 samples, 0.12%)</title><rect x="12.7972%" y="1381" width="0.1187%" height="15" fill="rgb(235,185,3)" fg:x="22102" fg:w="205"/><text x="13.0472%" y="1391.50"></text></g><g><title>`0x7FFFD8A11534 (205 samples, 0.12%)</title><rect x="12.7972%" y="1365" width="0.1187%" height="15" fill="rgb(227,24,12)" fg:x="22102" fg:w="205"/><text x="13.0472%" y="1375.50"></text></g><g><title>`0x7FF885CC63CE (205 samples, 0.12%)</title><rect x="12.7972%" y="1349" width="0.1187%" height="15" fill="rgb(252,169,48)" fg:x="22102" fg:w="205"/><text x="13.0472%" y="1359.50"></text></g><g><title>`0x7FF885CC6C6B (205 samples, 0.12%)</title><rect x="12.7972%" y="1333" width="0.1187%" height="15" fill="rgb(212,65,1)" fg:x="22102" fg:w="205"/><text x="13.0472%" y="1343.50"></text></g><g><title>`0x7FF853BD1B16 (205 samples, 0.12%)</title><rect x="12.7972%" y="1317" width="0.1187%" height="15" fill="rgb(242,39,24)" fg:x="22102" fg:w="205"/><text x="13.0472%" y="1327.50"></text></g><g><title>`0x7FF853BD0C9D (184 samples, 0.11%)</title><rect x="12.8093%" y="1301" width="0.1065%" height="15" fill="rgb(249,32,23)" fg:x="22123" fg:w="184"/><text x="13.0593%" y="1311.50"></text></g><g><title>`0x7FF853BD0F6A (184 samples, 0.11%)</title><rect x="12.8093%" y="1285" width="0.1065%" height="15" fill="rgb(251,195,23)" fg:x="22123" fg:w="184"/><text x="13.0593%" y="1295.50"></text></g><g><title>`0x7FF885CC5DFE (184 samples, 0.11%)</title><rect x="12.8093%" y="1269" width="0.1065%" height="15" fill="rgb(236,174,8)" fg:x="22123" fg:w="184"/><text x="13.0593%" y="1279.50"></text></g><g><title>`0x7FF853BC6AEF (184 samples, 0.11%)</title><rect x="12.8093%" y="1253" width="0.1065%" height="15" fill="rgb(220,197,8)" fg:x="22123" fg:w="184"/><text x="13.0593%" y="1263.50"></text></g><g><title>`0x7FF8172EA2C4 (231 samples, 0.13%)</title><rect x="12.7850%" y="1397" width="0.1338%" height="15" fill="rgb(240,108,37)" fg:x="22081" fg:w="231"/><text x="13.0350%" y="1407.50"></text></g><g><title>`0x7FF81719F42F (255 samples, 0.15%)</title><rect x="12.7850%" y="1413" width="0.1476%" height="15" fill="rgb(232,176,24)" fg:x="22081" fg:w="255"/><text x="13.0350%" y="1423.50"></text></g><g><title>`0x7FF8172EA324 (24 samples, 0.01%)</title><rect x="12.9188%" y="1397" width="0.0139%" height="15" fill="rgb(243,35,29)" fg:x="22312" fg:w="24"/><text x="13.1688%" y="1407.50"></text></g><g><title>boids.exe`wgpu::api::surface::Surface::configure(wgpu::api::device::Device*, wgpu_types::SurfaceConfiguration&lt;alloc::vec::Vec&lt;enum2$ (259 samples, 0.15%)</title><rect x="12.7844%" y="1557" width="0.1500%" height="15" fill="rgb(210,37,18)" fg:x="22080" fg:w="259"/><text x="13.0344%" y="1567.50"></text></g><g><title>boids.exe`wgpu::backend::wgpu_core::impl$55::configure(wgpu::backend::wgpu_core::CoreSurface*, enum2$&lt;wgpu::dispatch::DispatchDevice&gt;*, wgpu_types::SurfaceConfiguration&lt;alloc::vec::Vec&lt;enum2$ (259 samples, 0.15%)</title><rect x="12.7844%" y="1541" width="0.1500%" height="15" fill="rgb(224,184,40)" fg:x="22080" fg:w="259"/><text x="13.0344%" y="1551.50"></text></g><g><title>boids.exe`wgpu_core::global::Global::surface_configure(wgpu_core::id::Id&lt;enum2$&lt;wgpu_core::id::markers::Surface&gt; &gt;, wgpu_core::id::Id&lt;enum2$&lt;wgpu_core::id::markers::Device&gt; &gt;, wgpu_types::SurfaceConfiguration&lt;alloc::vec::Vec&lt;enum2$ (259 samples, 0.15%)</title><rect x="12.7844%" y="1525" width="0.1500%" height="15" fill="rgb(236,39,29)" fg:x="22080" fg:w="259"/><text x="13.0344%" y="1535.50"></text></g><g><title>boids.exe`wgpu_hal::dynamic::surface::impl$0::configure&lt;wgpu_hal::vulkan::Surface&gt;(wgpu_hal::vulkan::Surface*, ref$&lt;dyn$ (259 samples, 0.15%)</title><rect x="12.7844%" y="1509" width="0.1500%" height="15" fill="rgb(232,48,39)" fg:x="22080" fg:w="259"/><text x="13.0344%" y="1519.50"></text></g><g><title>boids.exe`wgpu_hal::vulkan::instance::impl$7::configure (259 samples, 0.15%)</title><rect x="12.7844%" y="1493" width="0.1500%" height="15" fill="rgb(236,34,42)" fg:x="22080" fg:w="259"/><text x="13.0344%" y="1503.50"></text></g><g><title>boids.exe`wgpu_hal::vulkan::Device::create_swapchain(wgpu_hal::vulkan::Surface*, wgpu_hal::SurfaceConfiguration*, enum2$&lt;core::option::Option (259 samples, 0.15%)</title><rect x="12.7844%" y="1477" width="0.1500%" height="15" fill="rgb(243,106,37)" fg:x="22080" fg:w="259"/><text x="13.0344%" y="1487.50"></text></g><g><title>boids.exe`ash::extensions_generated::khr::swapchain::Device::create_swapchain(ash::vk::definitions::SwapchainCreateInfoKHR*, enum2$&lt;core::option::Option&lt;ref$ (259 samples, 0.15%)</title><rect x="12.7844%" y="1461" width="0.1500%" height="15" fill="rgb(218,96,6)" fg:x="22080" fg:w="259"/><text x="13.0344%" y="1471.50"></text></g><g><title>`0x7FF884342405 (259 samples, 0.15%)</title><rect x="12.7844%" y="1445" width="0.1500%" height="15" fill="rgb(235,130,12)" fg:x="22080" fg:w="259"/><text x="13.0344%" y="1455.50"></text></g><g><title>`0x7FF865F87EC2 (259 samples, 0.15%)</title><rect x="12.7844%" y="1429" width="0.1500%" height="15" fill="rgb(231,95,0)" fg:x="22080" fg:w="259"/><text x="13.0344%" y="1439.50"></text></g><g><title>boids.exe`bevy_ecs::system::schedule_system::impl$1::run_unsafe&lt;bevy_ecs::system::function_system::FunctionSystem&lt;void (*)(bevy_ecs::change_detection::Res&lt;bevy_render::view::window::ExtractedWindows&gt;,bevy_ecs::change_detection::ResMut&lt;bevy_render::view::window::WindowSurfaces&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::renderer::RenderInstance&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::renderer::RenderAdapter&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::renderer::render_device::RenderDevice&gt;),void (*)(bevy_ecs::change_detection::Res&lt;bevy_render::view::window::ExtractedWindows&gt;,bevy_ecs::change_detection::ResMut&lt;bevy_render::view::window::WindowSurfaces&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::renderer::RenderInstance&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::renderer::RenderAdapter&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::renderer::render_device::RenderDevice&gt;)&gt; &gt;(bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;bevy_ecs::system::function_system::FunctionSystem&lt;void (*)(bevy_ecs::change_detection::Res&lt;bevy_render::view::window::ExtractedWindows&gt;,bevy_ecs::change_detection::ResMut&lt;bevy_render::view::window::WindowSurfaces&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::renderer::RenderInstance&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::renderer::RenderAdapter&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::renderer::render_device::RenderDevice&gt;),void (*)(bevy_ecs::change_detection::Res&lt;bevy_render::view::window::ExtractedWindows&gt;,bevy_ecs::change_detection::ResMut&lt;bevy_render::view::window::WindowSurfaces&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::renderer::RenderInstance&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::renderer::RenderAdapter&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::renderer::render_device::RenderDevice&gt;)&gt; &gt;*, tuple$ (260 samples, 0.15%)</title><rect x="12.7844%" y="1637" width="0.1505%" height="15" fill="rgb(228,12,23)" fg:x="22080" fg:w="260"/><text x="13.0344%" y="1647.50"></text></g><g><title>boids.exe`bevy_ecs::system::function_system::impl$7::run_unsafe(bevy_ecs::system::function_system::FunctionSystem&lt;void (*)(bevy_ecs::change_detection::Res&lt;bevy_render::view::window::ExtractedWindows&gt;,bevy_ecs::change_detection::ResMut&lt;bevy_render::view::window::WindowSurfaces&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::renderer::RenderInstance&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::renderer::RenderAdapter&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::renderer::render_device::RenderDevice&gt;),void (*)(bevy_ecs::change_detection::Res&lt;bevy_render::view::window::ExtractedWindows&gt;,bevy_ecs::change_detection::ResMut&lt;bevy_render::view::window::WindowSurfaces&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::renderer::RenderInstance&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::renderer::RenderAdapter&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::renderer::render_device::RenderDevice&gt;)&gt;*, tuple$ (260 samples, 0.15%)</title><rect x="12.7844%" y="1621" width="0.1505%" height="15" fill="rgb(216,12,1)" fg:x="22080" fg:w="260"/><text x="13.0344%" y="1631.50"></text></g><g><title>boids.exe`bevy_render::view::window::create_surfaces(bevy_ecs::change_detection::Res&lt;bevy_render::view::window::ExtractedWindows&gt;, bevy_ecs::change_detection::ResMut&lt;bevy_render::view::window::WindowSurfaces&gt;, bevy_ecs::change_detection::Res&lt;bevy_render::renderer::RenderInstance&gt;, bevy_ecs::change_detection::Res&lt;bevy_render::renderer::RenderAdapter&gt;, bevy_ecs::change_detection::Res (260 samples, 0.15%)</title><rect x="12.7844%" y="1605" width="0.1505%" height="15" fill="rgb(219,59,3)" fg:x="22080" fg:w="260"/><text x="13.0344%" y="1615.50"></text></g><g><title>boids.exe`enum2$&lt;hashbrown::map::Entry&lt;bevy_ecs::entity::Entity,bevy_render::view::window::SurfaceData,bevy_ecs::entity::hash::EntityHash,hashbrown::raw::alloc::inner::Global&gt; &gt;::or_insert_with(enum2$&lt;hashbrown::map::Entry (260 samples, 0.15%)</title><rect x="12.7844%" y="1589" width="0.1505%" height="15" fill="rgb(215,208,46)" fg:x="22080" fg:w="260"/><text x="13.0344%" y="1599.50"></text></g><g><title>boids.exe`bevy_render::view::window::create_surfaces::closure$0 (260 samples, 0.15%)</title><rect x="12.7844%" y="1573" width="0.1505%" height="15" fill="rgb(254,224,29)" fg:x="22080" fg:w="260"/><text x="13.0344%" y="1583.50"></text></g><g><title>boids.exe`bevy_ecs::system::schedule_system::impl$1::run_unsafe&lt;bevy_ecs::system::function_system::FunctionSystem&lt;void (*)(bevy_ecs::change_detection::ResMut&lt;bevy_egui::render_systems::EguiRenderData&gt;,bevy_ecs::system::query::Query&lt;tuple$&lt;ref$&lt;bevy_render::sync_world::MainEntity&gt;,ref$&lt;bevy_egui::EguiContextSettings&gt;,ref$&lt;bevy_egui::RenderTargetSize&gt;,ref$&lt;bevy_egui::EguiRenderOutput&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_egui::EguiRenderToImage&gt; &gt; &gt; &gt;,tuple$&lt;&gt; &gt;,bevy_ecs::change_detection::Res&lt;bevy_render::renderer::render_device::RenderDevice&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::renderer::RenderQueue&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::view::window::ExtractedWindows&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::render_asset::RenderAssets&lt;bevy_render::texture::gpu_image::GpuImage&gt; &gt;),void (*)(bevy_ecs::change_detection::ResMut&lt;bevy_egui::render_systems::EguiRenderData&gt;,bevy_ecs::system::query::Query&lt;tuple$&lt;ref$&lt;bevy_render::sync_world::MainEntity&gt;,ref$&lt;bevy_egui::EguiContextSettings&gt;,ref$&lt;bevy_egui::RenderTargetSize&gt;,ref$&lt;bevy_egui::EguiRenderOutput&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_egui::EguiRenderToImage&gt; &gt; &gt; &gt;,tuple$&lt;&gt; &gt;,bevy_ecs::change_detection::Res&lt;bevy_render::renderer::render_device::RenderDevice&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::renderer::RenderQueue&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::view::window::ExtractedWindows&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::render_asset::RenderAssets&lt;bevy_render::texture::gpu_image::GpuImage&gt; &gt;)&gt; &gt;(bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;bevy_ecs::system::function_system::FunctionSystem&lt;void (*)(bevy_ecs::change_detection::ResMut&lt;bevy_egui::render_systems::EguiRenderData&gt;,bevy_ecs::system::query::Query&lt;tuple$&lt;ref$&lt;bevy_render::sync_world::MainEntity&gt;,ref$&lt;bevy_egui::EguiContextSettings&gt;,ref$&lt;bevy_egui::RenderTargetSize&gt;,ref$&lt;bevy_egui::EguiRenderOutput&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_egui::EguiRenderToImage&gt; &gt; &gt; &gt;,tuple$&lt;&gt; &gt;,bevy_ecs::change_detection::Res&lt;bevy_render::renderer::render_device::RenderDevice&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::renderer::RenderQueue&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::view::window::ExtractedWindows&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::render_asset::RenderAssets&lt;bevy_render::texture::gpu_image::GpuImage&gt; &gt;),void (*)(bevy_ecs::change_detection::ResMut&lt;bevy_egui::render_systems::EguiRenderData&gt;,bevy_ecs::system::query::Query&lt;tuple$&lt;ref$&lt;bevy_render::sync_world::MainEntity&gt;,ref$&lt;bevy_egui::EguiContextSettings&gt;,ref$&lt;bevy_egui::RenderTargetSize&gt;,ref$&lt;bevy_egui::EguiRenderOutput&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_egui::EguiRenderToImage&gt; &gt; &gt; &gt;,tuple$&lt;&gt; &gt;,bevy_ecs::change_detection::Res&lt;bevy_render::renderer::render_device::RenderDevice&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::renderer::RenderQueue&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::view::window::ExtractedWindows&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::render_asset::RenderAssets&lt;bevy_render::texture::gpu_image::GpuImage&gt; &gt;)&gt; &gt;*, tuple$ (22 samples, 0.01%)</title><rect x="12.9431%" y="1637" width="0.0127%" height="15" fill="rgb(232,14,29)" fg:x="22354" fg:w="22"/><text x="13.1931%" y="1647.50"></text></g><g><title>boids.exe`bevy_ecs::system::function_system::impl$7::run_unsafe(bevy_ecs::system::function_system::FunctionSystem&lt;void (*)(bevy_ecs::change_detection::ResMut&lt;bevy_egui::render_systems::EguiRenderData&gt;,bevy_ecs::system::query::Query&lt;tuple$&lt;ref$&lt;bevy_render::sync_world::MainEntity&gt;,ref$&lt;bevy_egui::EguiContextSettings&gt;,ref$&lt;bevy_egui::RenderTargetSize&gt;,ref$&lt;bevy_egui::EguiRenderOutput&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_egui::EguiRenderToImage&gt; &gt; &gt; &gt;,tuple$&lt;&gt; &gt;,bevy_ecs::change_detection::Res&lt;bevy_render::renderer::render_device::RenderDevice&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::renderer::RenderQueue&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::view::window::ExtractedWindows&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::render_asset::RenderAssets&lt;bevy_render::texture::gpu_image::GpuImage&gt; &gt;),void (*)(bevy_ecs::change_detection::ResMut&lt;bevy_egui::render_systems::EguiRenderData&gt;,bevy_ecs::system::query::Query&lt;tuple$&lt;ref$&lt;bevy_render::sync_world::MainEntity&gt;,ref$&lt;bevy_egui::EguiContextSettings&gt;,ref$&lt;bevy_egui::RenderTargetSize&gt;,ref$&lt;bevy_egui::EguiRenderOutput&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_egui::EguiRenderToImage&gt; &gt; &gt; &gt;,tuple$&lt;&gt; &gt;,bevy_ecs::change_detection::Res&lt;bevy_render::renderer::render_device::RenderDevice&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::renderer::RenderQueue&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::view::window::ExtractedWindows&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::render_asset::RenderAssets&lt;bevy_render::texture::gpu_image::GpuImage&gt; &gt;)&gt;*, tuple$ (22 samples, 0.01%)</title><rect x="12.9431%" y="1621" width="0.0127%" height="15" fill="rgb(208,45,52)" fg:x="22354" fg:w="22"/><text x="13.1931%" y="1631.50"></text></g><g><title>boids.exe`bevy_egui::render_systems::prepare_egui_render_target_data(bevy_ecs::change_detection::ResMut&lt;bevy_egui::render_systems::EguiRenderData&gt;, bevy_ecs::system::query::Query&lt;tuple$&lt;ref$&lt;bevy_render::sync_world::MainEntity&gt;,ref$&lt;bevy_egui::EguiContextSettings&gt;,ref$&lt;bevy_egui::RenderTargetSize&gt;,ref$&lt;bevy_egui::EguiRenderOutput&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_egui::EguiRenderToImage&gt; &gt; &gt; &gt;,tuple$&lt;&gt; &gt;, bevy_ecs::change_detection::Res&lt;bevy_render::renderer::render_device::RenderDevice&gt;, bevy_ecs::change_detection::Res&lt;bevy_render::renderer::RenderQueue&gt;, bevy_ecs::change_detection::Res&lt;bevy_render::view::window::ExtractedWindows&gt;, bevy_ecs::change_detection::Res&lt;bevy_render::render_asset::RenderAssets (22 samples, 0.01%)</title><rect x="12.9431%" y="1605" width="0.0127%" height="15" fill="rgb(234,191,28)" fg:x="22354" fg:w="22"/><text x="13.1931%" y="1615.50"></text></g><g><title>`0x7FF817468C79 (18 samples, 0.01%)</title><rect x="13.0062%" y="1397" width="0.0104%" height="15" fill="rgb(244,67,43)" fg:x="22463" fg:w="18"/><text x="13.2562%" y="1407.50"></text></g><g><title>`0x7FF81746A2E3 (48 samples, 0.03%)</title><rect x="13.0045%" y="1413" width="0.0278%" height="15" fill="rgb(236,189,24)" fg:x="22460" fg:w="48"/><text x="13.2545%" y="1423.50"></text></g><g><title>boids.exe`ash::extensions_generated::khr::swapchain::Device::acquire_next_image (57 samples, 0.03%)</title><rect x="13.0033%" y="1461" width="0.0330%" height="15" fill="rgb(239,214,33)" fg:x="22458" fg:w="57"/><text x="13.2533%" y="1471.50"></text></g><g><title>`0x7FF8171A2791 (57 samples, 0.03%)</title><rect x="13.0033%" y="1445" width="0.0330%" height="15" fill="rgb(226,176,41)" fg:x="22458" fg:w="57"/><text x="13.2533%" y="1455.50"></text></g><g><title>`0x7FF8171A089C (57 samples, 0.03%)</title><rect x="13.0033%" y="1429" width="0.0330%" height="15" fill="rgb(248,47,8)" fg:x="22458" fg:w="57"/><text x="13.2533%" y="1439.50"></text></g><g><title>boids.exe`enum2$&lt;core::result::Result&lt;enum2$&lt;core::option::Option&lt;wgpu_hal::AcquiredSurfaceTexture&lt;wgpu_hal::vulkan::Api&gt; &gt; &gt;,enum2$&lt;wgpu_hal::SurfaceError&gt; &gt; &gt;::map(enum2$&lt;core::result::Result&lt;enum2$&lt;core::option::Option&lt;wgpu_hal::AcquiredSurfaceTexture&lt;wgpu_hal::vulkan::Api&gt; &gt; &gt;,enum2$&lt;wgpu_hal::SurfaceError&gt; &gt; &gt;, wgpu_hal::dynamic::surface::impl$0::acquire_texture::closure_env$0 (67 samples, 0.04%)</title><rect x="13.0033%" y="1493" width="0.0388%" height="15" fill="rgb(218,81,44)" fg:x="22458" fg:w="67"/><text x="13.2533%" y="1503.50"></text></g><g><title>boids.exe`wgpu_hal::vulkan::instance::impl$7::acquire_texture(wgpu_hal::vulkan::Surface*, enum2$&lt;core::option::Option&lt;core::time::Duration&gt; &gt;, enum2$ (67 samples, 0.04%)</title><rect x="13.0033%" y="1477" width="0.0388%" height="15" fill="rgb(213,98,6)" fg:x="22458" fg:w="67"/><text x="13.2533%" y="1487.50"></text></g><g><title>boids.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;wgpu_core::present::ResolvedSurfaceOutput,enum2$ (75 samples, 0.04%)</title><rect x="12.9998%" y="1541" width="0.0434%" height="15" fill="rgb(222,85,22)" fg:x="22452" fg:w="75"/><text x="13.2498%" y="1551.50"></text></g><g><title>boids.exe`wgpu_core::instance::Surface::get_current_texture (75 samples, 0.04%)</title><rect x="12.9998%" y="1525" width="0.0434%" height="15" fill="rgb(239,46,39)" fg:x="22452" fg:w="75"/><text x="13.2498%" y="1535.50"></text></g><g><title>boids.exe`wgpu_hal::dynamic::surface::impl$0::acquire_texture&lt;wgpu_hal::vulkan::Surface&gt;(wgpu_hal::vulkan::Surface*, enum2$&lt;core::option::Option&lt;core::time::Duration&gt; &gt;, ref$&lt;dyn$ (69 samples, 0.04%)</title><rect x="13.0033%" y="1509" width="0.0400%" height="15" fill="rgb(237,12,29)" fg:x="22458" fg:w="69"/><text x="13.2533%" y="1519.50"></text></g><g><title>boids.exe`bevy_ecs::system::schedule_system::impl$1::run_unsafe&lt;bevy_ecs::system::function_system::FunctionSystem&lt;void (*)(bevy_ecs::change_detection::ResMut&lt;bevy_render::view::window::ExtractedWindows&gt;,bevy_ecs::change_detection::ResMut&lt;bevy_render::view::window::WindowSurfaces&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::renderer::render_device::RenderDevice&gt;),void (*)(bevy_ecs::change_detection::ResMut&lt;bevy_render::view::window::ExtractedWindows&gt;,bevy_ecs::change_detection::ResMut&lt;bevy_render::view::window::WindowSurfaces&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::renderer::render_device::RenderDevice&gt;)&gt; &gt;(bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;bevy_ecs::system::function_system::FunctionSystem&lt;void (*)(bevy_ecs::change_detection::ResMut&lt;bevy_render::view::window::ExtractedWindows&gt;,bevy_ecs::change_detection::ResMut&lt;bevy_render::view::window::WindowSurfaces&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::renderer::render_device::RenderDevice&gt;),void (*)(bevy_ecs::change_detection::ResMut&lt;bevy_render::view::window::ExtractedWindows&gt;,bevy_ecs::change_detection::ResMut&lt;bevy_render::view::window::WindowSurfaces&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::renderer::render_device::RenderDevice&gt;)&gt; &gt;*, tuple$ (80 samples, 0.05%)</title><rect x="12.9975%" y="1637" width="0.0463%" height="15" fill="rgb(214,77,8)" fg:x="22448" fg:w="80"/><text x="13.2475%" y="1647.50"></text></g><g><title>boids.exe`bevy_ecs::system::function_system::impl$7::run_unsafe(bevy_ecs::system::function_system::FunctionSystem&lt;void (*)(bevy_ecs::change_detection::ResMut&lt;bevy_render::view::window::ExtractedWindows&gt;,bevy_ecs::change_detection::ResMut&lt;bevy_render::view::window::WindowSurfaces&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::renderer::render_device::RenderDevice&gt;),void (*)(bevy_ecs::change_detection::ResMut&lt;bevy_render::view::window::ExtractedWindows&gt;,bevy_ecs::change_detection::ResMut&lt;bevy_render::view::window::WindowSurfaces&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::renderer::render_device::RenderDevice&gt;)&gt;*, tuple$ (80 samples, 0.05%)</title><rect x="12.9975%" y="1621" width="0.0463%" height="15" fill="rgb(217,168,37)" fg:x="22448" fg:w="80"/><text x="13.2475%" y="1631.50"></text></g><g><title>boids.exe`bevy_render::view::window::prepare_windows(bevy_ecs::change_detection::ResMut&lt;bevy_render::view::window::ExtractedWindows&gt;, bevy_ecs::change_detection::ResMut&lt;bevy_render::view::window::WindowSurfaces&gt;, bevy_ecs::change_detection::Res (80 samples, 0.05%)</title><rect x="12.9975%" y="1605" width="0.0463%" height="15" fill="rgb(221,217,23)" fg:x="22448" fg:w="80"/><text x="13.2475%" y="1615.50"></text></g><g><title>boids.exe`wgpu::api::surface::Surface::get_current_texture (76 samples, 0.04%)</title><rect x="12.9998%" y="1589" width="0.0440%" height="15" fill="rgb(243,229,36)" fg:x="22452" fg:w="76"/><text x="13.2498%" y="1599.50"></text></g><g><title>boids.exe`wgpu::backend::wgpu_core::impl$55::get_current_texture (76 samples, 0.04%)</title><rect x="12.9998%" y="1573" width="0.0440%" height="15" fill="rgb(251,163,40)" fg:x="22452" fg:w="76"/><text x="13.2498%" y="1583.50"></text></g><g><title>boids.exe`wgpu_core::global::Global::surface_get_current_texture(wgpu_core::id::Id&lt;enum2$&lt;wgpu_core::id::markers::Surface&gt; &gt;, enum2$&lt;core::option::Option&lt;wgpu_core::id::Id&lt;enum2$ (76 samples, 0.04%)</title><rect x="12.9998%" y="1557" width="0.0440%" height="15" fill="rgb(237,222,12)" fg:x="22452" fg:w="76"/><text x="13.2498%" y="1567.50"></text></g><g><title>boids.exe`core::convert::impl$3::into(enum2$ (71 samples, 0.04%)</title><rect x="13.0548%" y="1589" width="0.0411%" height="15" fill="rgb(248,132,6)" fg:x="22547" fg:w="71"/><text x="13.3048%" y="1599.50"></text></g><g><title>boids.exe`bevy_color::color::impl$5::from(enum2$ (70 samples, 0.04%)</title><rect x="13.0554%" y="1573" width="0.0405%" height="15" fill="rgb(227,167,50)" fg:x="22548" fg:w="70"/><text x="13.3054%" y="1583.50"></text></g><g><title>boids.exe`core::convert::impl$3::into (69 samples, 0.04%)</title><rect x="13.0560%" y="1557" width="0.0400%" height="15" fill="rgb(242,84,37)" fg:x="22549" fg:w="69"/><text x="13.3060%" y="1567.50"></text></g><g><title>boids.exe`bevy_color::srgba::impl$11::from (69 samples, 0.04%)</title><rect x="13.0560%" y="1541" width="0.0400%" height="15" fill="rgb(212,4,50)" fg:x="22549" fg:w="69"/><text x="13.3060%" y="1551.50"></text></g><g><title>boids.exe`bevy_color::srgba::Srgba::gamma_function (69 samples, 0.04%)</title><rect x="13.0560%" y="1525" width="0.0400%" height="15" fill="rgb(230,228,32)" fg:x="22549" fg:w="69"/><text x="13.3060%" y="1535.50"></text></g><g><title>boids.exe`bevy_math::ops::std_ops::powf (65 samples, 0.04%)</title><rect x="13.0583%" y="1509" width="0.0376%" height="15" fill="rgb(248,217,23)" fg:x="22553" fg:w="65"/><text x="13.3083%" y="1519.50"></text></g><g><title>boids.exe`std::f32::impl$0::powf (65 samples, 0.04%)</title><rect x="13.0583%" y="1493" width="0.0376%" height="15" fill="rgb(238,197,32)" fg:x="22553" fg:w="65"/><text x="13.3083%" y="1503.50"></text></g><g><title>boids.exe`bevy_ecs::system::schedule_system::impl$1::run_unsafe&lt;bevy_ecs::system::function_system::FunctionSystem&lt;void (*)(bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::ExtractedSprites&gt;,bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::ExtractedSlices&gt;,bevy_render::extract_param::Extract&lt;bevy_ecs::change_detection::Res&lt;bevy_asset::assets::Assets&lt;bevy_image::texture_atlas::TextureAtlasLayout&gt; &gt; &gt;,bevy_render::extract_param::Extract&lt;bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,bevy_render::sync_world::RenderEntity,ref$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_sprite::sprite::Sprite&gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_sprite::texture_slice::computed_slices::ComputedTextureSlices&gt; &gt; &gt; &gt;,tuple$&lt;&gt; &gt; &gt;),void (*)(bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::ExtractedSprites&gt;,bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::ExtractedSlices&gt;,bevy_render::extract_param::Extract&lt;bevy_ecs::change_detection::Res&lt;bevy_asset::assets::Assets&lt;bevy_image::texture_atlas::TextureAtlasLayout&gt; &gt; &gt;,bevy_render::extract_param::Extract&lt;bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,bevy_render::sync_world::RenderEntity,ref$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_sprite::sprite::Sprite&gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_sprite::texture_slice::computed_slices::ComputedTextureSlices&gt; &gt; &gt; &gt;,tuple$&lt;&gt; &gt; &gt;)&gt; &gt;(bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;bevy_ecs::system::function_system::FunctionSystem&lt;void (*)(bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::ExtractedSprites&gt;,bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::ExtractedSlices&gt;,bevy_render::extract_param::Extract&lt;bevy_ecs::change_detection::Res&lt;bevy_asset::assets::Assets&lt;bevy_image::texture_atlas::TextureAtlasLayout&gt; &gt; &gt;,bevy_render::extract_param::Extract&lt;bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,bevy_render::sync_world::RenderEntity,ref$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_sprite::sprite::Sprite&gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_sprite::texture_slice::computed_slices::ComputedTextureSlices&gt; &gt; &gt; &gt;,tuple$&lt;&gt; &gt; &gt;),void (*)(bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::ExtractedSprites&gt;,bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::ExtractedSlices&gt;,bevy_render::extract_param::Extract&lt;bevy_ecs::change_detection::Res&lt;bevy_asset::assets::Assets&lt;bevy_image::texture_atlas::TextureAtlasLayout&gt; &gt; &gt;,bevy_render::extract_param::Extract&lt;bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,bevy_render::sync_world::RenderEntity,ref$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_sprite::sprite::Sprite&gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_sprite::texture_slice::computed_slices::ComputedTextureSlices&gt; &gt; &gt; &gt;,tuple$&lt;&gt; &gt; &gt;)&gt; &gt;*, tuple$ (85 samples, 0.05%)</title><rect x="13.0473%" y="1637" width="0.0492%" height="15" fill="rgb(236,106,1)" fg:x="22534" fg:w="85"/><text x="13.2973%" y="1647.50"></text></g><g><title>boids.exe`bevy_ecs::system::function_system::impl$7::run_unsafe(bevy_ecs::system::function_system::FunctionSystem&lt;void (*)(bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::ExtractedSprites&gt;,bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::ExtractedSlices&gt;,bevy_render::extract_param::Extract&lt;bevy_ecs::change_detection::Res&lt;bevy_asset::assets::Assets&lt;bevy_image::texture_atlas::TextureAtlasLayout&gt; &gt; &gt;,bevy_render::extract_param::Extract&lt;bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,bevy_render::sync_world::RenderEntity,ref$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_sprite::sprite::Sprite&gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_sprite::texture_slice::computed_slices::ComputedTextureSlices&gt; &gt; &gt; &gt;,tuple$&lt;&gt; &gt; &gt;),void (*)(bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::ExtractedSprites&gt;,bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::ExtractedSlices&gt;,bevy_render::extract_param::Extract&lt;bevy_ecs::change_detection::Res&lt;bevy_asset::assets::Assets&lt;bevy_image::texture_atlas::TextureAtlasLayout&gt; &gt; &gt;,bevy_render::extract_param::Extract&lt;bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,bevy_render::sync_world::RenderEntity,ref$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_sprite::sprite::Sprite&gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_sprite::texture_slice::computed_slices::ComputedTextureSlices&gt; &gt; &gt; &gt;,tuple$&lt;&gt; &gt; &gt;)&gt;*, tuple$ (85 samples, 0.05%)</title><rect x="13.0473%" y="1621" width="0.0492%" height="15" fill="rgb(219,228,13)" fg:x="22534" fg:w="85"/><text x="13.2973%" y="1631.50"></text></g><g><title>boids.exe`bevy_sprite::render::extract_sprites(bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::ExtractedSprites&gt;, bevy_ecs::change_detection::ResMut&lt;bevy_sprite::render::ExtractedSlices&gt;, bevy_render::extract_param::Extract&lt;bevy_ecs::change_detection::Res&lt;bevy_asset::assets::Assets&lt;bevy_image::texture_atlas::TextureAtlasLayout&gt; &gt; &gt;, bevy_render::extract_param::Extract&lt;bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,bevy_render::sync_world::RenderEntity,ref$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_sprite::sprite::Sprite&gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_sprite::texture_slice::computed_slices::ComputedTextureSlices&gt; &gt; &gt; &gt;,tuple$ (85 samples, 0.05%)</title><rect x="13.0473%" y="1605" width="0.0492%" height="15" fill="rgb(238,30,35)" fg:x="22534" fg:w="85"/><text x="13.2973%" y="1615.50"></text></g><g><title>boids.exe`bevy_ecs::system::schedule_system::impl$1::run_unsafe&lt;bevy_ecs::system::function_system::FunctionSystem&lt;void (*)(bevy_ecs::system::commands::Commands,bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_pbr::ssr::ScreenSpaceReflectionsUniform&gt; &gt; &gt; &gt;,bevy_ecs::query::filter::With&lt;bevy_render::view::ExtractedView&gt; &gt;,bevy_ecs::change_detection::ResMut&lt;bevy_pbr::ssr::ScreenSpaceReflectionsBuffer&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::renderer::render_device::RenderDevice&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::renderer::RenderQueue&gt;),void (*)(bevy_ecs::system::commands::Commands,bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_pbr::ssr::ScreenSpaceReflectionsUniform&gt; &gt; &gt; &gt;,bevy_ecs::query::filter::With&lt;bevy_render::view::ExtractedView&gt; &gt;,bevy_ecs::change_detection::ResMut&lt;bevy_pbr::ssr::ScreenSpaceReflectionsBuffer&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::renderer::render_device::RenderDevice&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::renderer::RenderQueue&gt;)&gt; &gt;(bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;bevy_ecs::system::function_system::FunctionSystem&lt;void (*)(bevy_ecs::system::commands::Commands,bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_pbr::ssr::ScreenSpaceReflectionsUniform&gt; &gt; &gt; &gt;,bevy_ecs::query::filter::With&lt;bevy_render::view::ExtractedView&gt; &gt;,bevy_ecs::change_detection::ResMut&lt;bevy_pbr::ssr::ScreenSpaceReflectionsBuffer&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::renderer::render_device::RenderDevice&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::renderer::RenderQueue&gt;),void (*)(bevy_ecs::system::commands::Commands,bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_pbr::ssr::ScreenSpaceReflectionsUniform&gt; &gt; &gt; &gt;,bevy_ecs::query::filter::With&lt;bevy_render::view::ExtractedView&gt; &gt;,bevy_ecs::change_detection::ResMut&lt;bevy_pbr::ssr::ScreenSpaceReflectionsBuffer&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::renderer::render_device::RenderDevice&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::renderer::RenderQueue&gt;)&gt; &gt;*, tuple$ (18 samples, 0.01%)</title><rect x="13.1822%" y="1637" width="0.0104%" height="15" fill="rgb(236,70,23)" fg:x="22767" fg:w="18"/><text x="13.4322%" y="1647.50"></text></g><g><title>boids.exe`bevy_ecs::system::function_system::impl$7::run_unsafe(bevy_ecs::system::function_system::FunctionSystem&lt;void (*)(bevy_ecs::system::commands::Commands,bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_pbr::ssr::ScreenSpaceReflectionsUniform&gt; &gt; &gt; &gt;,bevy_ecs::query::filter::With&lt;bevy_render::view::ExtractedView&gt; &gt;,bevy_ecs::change_detection::ResMut&lt;bevy_pbr::ssr::ScreenSpaceReflectionsBuffer&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::renderer::render_device::RenderDevice&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::renderer::RenderQueue&gt;),void (*)(bevy_ecs::system::commands::Commands,bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_pbr::ssr::ScreenSpaceReflectionsUniform&gt; &gt; &gt; &gt;,bevy_ecs::query::filter::With&lt;bevy_render::view::ExtractedView&gt; &gt;,bevy_ecs::change_detection::ResMut&lt;bevy_pbr::ssr::ScreenSpaceReflectionsBuffer&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::renderer::render_device::RenderDevice&gt;,bevy_ecs::change_detection::Res&lt;bevy_render::renderer::RenderQueue&gt;)&gt;*, tuple$ (18 samples, 0.01%)</title><rect x="13.1822%" y="1621" width="0.0104%" height="15" fill="rgb(249,104,48)" fg:x="22767" fg:w="18"/><text x="13.4322%" y="1631.50"></text></g><g><title>boids.exe`bevy_ecs::system::schedule_system::impl$1::run_unsafe&lt;bevy_ecs::system::function_system::FunctionSystem&lt;void (*)(bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_egui::EguiRenderOutput&gt; &gt;,bevy_ecs::query::filter::Or&lt;tuple$&lt;bevy_ecs::query::filter::With&lt;bevy_window::window::Window&gt;,bevy_ecs::query::filter::With&lt;bevy_egui::EguiRenderToImage&gt; &gt; &gt; &gt;,bevy_ecs::change_detection::ResMut&lt;bevy_egui::EguiManagedTextures&gt;,bevy_ecs::change_detection::ResMut&lt;bevy_asset::assets::Assets&lt;bevy_image::image::Image&gt; &gt;),void (*)(bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_egui::EguiRenderOutput&gt; &gt;,bevy_ecs::query::filter::Or&lt;tuple$&lt;bevy_ecs::query::filter::With&lt;bevy_window::window::Window&gt;,bevy_ecs::query::filter::With&lt;bevy_egui::EguiRenderToImage&gt; &gt; &gt; &gt;,bevy_ecs::change_detection::ResMut&lt;bevy_egui::EguiManagedTextures&gt;,bevy_ecs::change_detection::ResMut&lt;bevy_asset::assets::Assets&lt;bevy_image::image::Image&gt; &gt;)&gt; &gt;(bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;bevy_ecs::system::function_system::FunctionSystem&lt;void (*)(bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_egui::EguiRenderOutput&gt; &gt;,bevy_ecs::query::filter::Or&lt;tuple$&lt;bevy_ecs::query::filter::With&lt;bevy_window::window::Window&gt;,bevy_ecs::query::filter::With&lt;bevy_egui::EguiRenderToImage&gt; &gt; &gt; &gt;,bevy_ecs::change_detection::ResMut&lt;bevy_egui::EguiManagedTextures&gt;,bevy_ecs::change_detection::ResMut&lt;bevy_asset::assets::Assets&lt;bevy_image::image::Image&gt; &gt;),void (*)(bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_egui::EguiRenderOutput&gt; &gt;,bevy_ecs::query::filter::Or&lt;tuple$&lt;bevy_ecs::query::filter::With&lt;bevy_window::window::Window&gt;,bevy_ecs::query::filter::With&lt;bevy_egui::EguiRenderToImage&gt; &gt; &gt; &gt;,bevy_ecs::change_detection::ResMut&lt;bevy_egui::EguiManagedTextures&gt;,bevy_ecs::change_detection::ResMut&lt;bevy_asset::assets::Assets&lt;bevy_image::image::Image&gt; &gt;)&gt; &gt;*, tuple$ (27 samples, 0.02%)</title><rect x="13.2390%" y="1637" width="0.0156%" height="15" fill="rgb(254,117,50)" fg:x="22865" fg:w="27"/><text x="13.4890%" y="1647.50"></text></g><g><title>boids.exe`bevy_ecs::system::function_system::impl$7::run_unsafe(bevy_ecs::system::function_system::FunctionSystem&lt;void (*)(bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_egui::EguiRenderOutput&gt; &gt;,bevy_ecs::query::filter::Or&lt;tuple$&lt;bevy_ecs::query::filter::With&lt;bevy_window::window::Window&gt;,bevy_ecs::query::filter::With&lt;bevy_egui::EguiRenderToImage&gt; &gt; &gt; &gt;,bevy_ecs::change_detection::ResMut&lt;bevy_egui::EguiManagedTextures&gt;,bevy_ecs::change_detection::ResMut&lt;bevy_asset::assets::Assets&lt;bevy_image::image::Image&gt; &gt;),void (*)(bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_egui::EguiRenderOutput&gt; &gt;,bevy_ecs::query::filter::Or&lt;tuple$&lt;bevy_ecs::query::filter::With&lt;bevy_window::window::Window&gt;,bevy_ecs::query::filter::With&lt;bevy_egui::EguiRenderToImage&gt; &gt; &gt; &gt;,bevy_ecs::change_detection::ResMut&lt;bevy_egui::EguiManagedTextures&gt;,bevy_ecs::change_detection::ResMut&lt;bevy_asset::assets::Assets&lt;bevy_image::image::Image&gt; &gt;)&gt;*, tuple$ (26 samples, 0.02%)</title><rect x="13.2395%" y="1621" width="0.0151%" height="15" fill="rgb(223,152,4)" fg:x="22866" fg:w="26"/><text x="13.4895%" y="1631.50"></text></g><g><title>boids.exe`bevy_egui::update_egui_textures_system(bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_egui::EguiRenderOutput&gt; &gt;,bevy_ecs::query::filter::Or&lt;tuple$&lt;bevy_ecs::query::filter::With&lt;bevy_window::window::Window&gt;,bevy_ecs::query::filter::With&lt;bevy_egui::EguiRenderToImage&gt; &gt; &gt; &gt;, bevy_ecs::change_detection::ResMut&lt;bevy_egui::EguiManagedTextures&gt;, bevy_ecs::change_detection::ResMut&lt;bevy_asset::assets::Assets (26 samples, 0.02%)</title><rect x="13.2395%" y="1605" width="0.0151%" height="15" fill="rgb(245,6,2)" fg:x="22866" fg:w="26"/><text x="13.4895%" y="1615.50"></text></g><g><title>boids.exe`alloc::vec::spec_extend::impl$0::spec_extend(alloc::vec::Vec&lt;tuple$&lt;bevy_ecs::entity::Entity,glam::f32::vec2::Vec2,glam::f32::vec2::Vec2&gt;,alloc::alloc::Global&gt;*, core::iter::adapters::map::Map&lt;bevy_ecs::query::iter::QueryIter&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_transform::components::transform::Transform&gt;,ref$&lt;boids::Boid&gt; &gt;,tuple$ (18 samples, 0.01%)</title><rect x="13.2737%" y="1349" width="0.0104%" height="15" fill="rgb(249,150,24)" fg:x="22925" fg:w="18"/><text x="13.5237%" y="1359.50"></text></g><g><title>boids.exe`alloc::vec::Vec&lt;tuple$&lt;bevy_ecs::entity::Entity,glam::f32::vec2::Vec2,glam::f32::vec2::Vec2&gt;,alloc::alloc::Global&gt;::extend_desugared(core::iter::adapters::map::Map&lt;bevy_ecs::query::iter::QueryIter&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_transform::components::transform::Transform&gt;,ref$&lt;boids::Boid&gt; &gt;,tuple$ (18 samples, 0.01%)</title><rect x="13.2737%" y="1333" width="0.0104%" height="15" fill="rgb(228,185,42)" fg:x="22925" fg:w="18"/><text x="13.5237%" y="1343.50"></text></g><g><title>boids.exe`bevy_ecs::system::query::impl$6::into_iter(bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,ref_mut$&lt;bevy_transform::components::transform::Transform&gt;,ref_mut$&lt;boids::Boid&gt; &gt;,tuple$ (19 samples, 0.01%)</title><rect x="13.2737%" y="1557" width="0.0110%" height="15" fill="rgb(226,39,33)" fg:x="22925" fg:w="19"/><text x="13.5237%" y="1567.50"></text></g><g><title>boids.exe`bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,ref_mut$&lt;bevy_transform::components::transform::Transform&gt;,ref_mut$&lt;boids::Boid&gt; &gt;,tuple$&lt;&gt; &gt;::iter_mut (19 samples, 0.01%)</title><rect x="13.2737%" y="1541" width="0.0110%" height="15" fill="rgb(221,166,19)" fg:x="22925" fg:w="19"/><text x="13.5237%" y="1551.50"></text></g><g><title>boids.exe`bevy_ecs::system::query::impl$4::into_iter(bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,ref_mut$&lt;bevy_transform::components::transform::Transform&gt;,ref_mut$&lt;boids::Boid&gt; &gt;,tuple$ (19 samples, 0.01%)</title><rect x="13.2737%" y="1525" width="0.0110%" height="15" fill="rgb(209,109,2)" fg:x="22925" fg:w="19"/><text x="13.5237%" y="1535.50"></text></g><g><title>boids.exe`bevy_ecs::query::iter::QueryIter&lt;tuple$&lt;bevy_ecs::entity::Entity,ref_mut$&lt;bevy_transform::components::transform::Transform&gt;,ref_mut$&lt;boids::Boid&gt; &gt;,tuple$&lt;&gt; &gt;::new(bevy_ecs::world::unsafe_world_cell::UnsafeWorldCell, bevy_ecs::query::state::QueryState&lt;tuple$&lt;bevy_ecs::entity::Entity,ref_mut$&lt;bevy_transform::components::transform::Transform&gt;,ref_mut$&lt;boids::Boid&gt; &gt;,tuple$ (19 samples, 0.01%)</title><rect x="13.2737%" y="1509" width="0.0110%" height="15" fill="rgb(252,216,26)" fg:x="22925" fg:w="19"/><text x="13.5237%" y="1519.50"></text></g><g><title>boids.exe`bevy_ecs::query::iter::QueryIterationCursor&lt;tuple$&lt;bevy_ecs::entity::Entity,ref_mut$&lt;bevy_transform::components::transform::Transform&gt;,ref_mut$&lt;boids::Boid&gt; &gt;,tuple$&lt;&gt; &gt;::init(bevy_ecs::world::unsafe_world_cell::UnsafeWorldCell, bevy_ecs::query::state::QueryState&lt;tuple$&lt;bevy_ecs::entity::Entity,ref_mut$&lt;bevy_transform::components::transform::Transform&gt;,ref_mut$&lt;boids::Boid&gt; &gt;,tuple$ (19 samples, 0.01%)</title><rect x="13.2737%" y="1493" width="0.0110%" height="15" fill="rgb(227,173,36)" fg:x="22925" fg:w="19"/><text x="13.5237%" y="1503.50"></text></g><g><title>boids.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (19 samples, 0.01%)</title><rect x="13.2737%" y="1477" width="0.0110%" height="15" fill="rgb(209,90,7)" fg:x="22925" fg:w="19"/><text x="13.5237%" y="1487.50"></text></g><g><title>boids.exe`alloc::vec::Vec&lt;bevy_ecs::query::state::StorageId,alloc::alloc::Global&gt;::as_slice (19 samples, 0.01%)</title><rect x="13.2737%" y="1461" width="0.0110%" height="15" fill="rgb(250,194,11)" fg:x="22925" fg:w="19"/><text x="13.5237%" y="1471.50"></text></g><g><title>boids.exe`alloc::vec::Vec&lt;bevy_ecs::query::state::StorageId,alloc::alloc::Global&gt;::as_ptr (19 samples, 0.01%)</title><rect x="13.2737%" y="1445" width="0.0110%" height="15" fill="rgb(220,72,50)" fg:x="22925" fg:w="19"/><text x="13.5237%" y="1455.50"></text></g><g><title>boids.exe`alloc::raw_vec::RawVec&lt;bevy_ecs::query::state::StorageId,alloc::alloc::Global&gt;::ptr (19 samples, 0.01%)</title><rect x="13.2737%" y="1429" width="0.0110%" height="15" fill="rgb(222,106,48)" fg:x="22925" fg:w="19"/><text x="13.5237%" y="1439.50"></text></g><g><title>boids.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (19 samples, 0.01%)</title><rect x="13.2737%" y="1413" width="0.0110%" height="15" fill="rgb(216,220,45)" fg:x="22925" fg:w="19"/><text x="13.5237%" y="1423.50"></text></g><g><title>boids.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (19 samples, 0.01%)</title><rect x="13.2737%" y="1397" width="0.0110%" height="15" fill="rgb(234,112,18)" fg:x="22925" fg:w="19"/><text x="13.5237%" y="1407.50"></text></g><g><title>boids.exe`alloc::vec::spec_from_iter::impl$0::from_iter&lt;tuple$&lt;bevy_ecs::entity::Entity,glam::f32::vec2::Vec2,glam::f32::vec2::Vec2&gt;,core::iter::adapters::map::Map&lt;bevy_ecs::query::iter::QueryIter&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_transform::components::transform::Transform&gt;,ref$&lt;boids::Boid&gt; &gt;,tuple$&lt;&gt; &gt;,boids::update_boids::closure_env$0&gt; &gt;(core::iter::adapters::map::Map&lt;bevy_ecs::query::iter::QueryIter&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_transform::components::transform::Transform&gt;,ref$&lt;boids::Boid&gt; &gt;,tuple$ (19 samples, 0.01%)</title><rect x="13.2737%" y="1381" width="0.0110%" height="15" fill="rgb(206,179,9)" fg:x="22925" fg:w="19"/><text x="13.5237%" y="1391.50"></text></g><g><title>boids.exe`alloc::vec::spec_from_iter_nested::impl$0::from_iter(core::iter::adapters::map::Map&lt;bevy_ecs::query::iter::QueryIter&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_transform::components::transform::Transform&gt;,ref$&lt;boids::Boid&gt; &gt;,tuple$ (19 samples, 0.01%)</title><rect x="13.2737%" y="1365" width="0.0110%" height="15" fill="rgb(215,115,40)" fg:x="22925" fg:w="19"/><text x="13.5237%" y="1375.50"></text></g><g><title>boids.exe`glam::f32::math::std_math::sin_cos (20 samples, 0.01%)</title><rect x="13.2916%" y="1525" width="0.0116%" height="15" fill="rgb(222,69,34)" fg:x="22956" fg:w="20"/><text x="13.5416%" y="1535.50"></text></g><g><title>boids.exe`std::f32::impl$0::sin_cos (20 samples, 0.01%)</title><rect x="13.2916%" y="1509" width="0.0116%" height="15" fill="rgb(209,161,10)" fg:x="22956" fg:w="20"/><text x="13.5416%" y="1519.50"></text></g><g><title>boids.exe`std::f32::impl$0::sin (20 samples, 0.01%)</title><rect x="13.2916%" y="1493" width="0.0116%" height="15" fill="rgb(217,6,38)" fg:x="22956" fg:w="20"/><text x="13.5416%" y="1503.50"></text></g><g><title>boids.exe`glam::f32::sse2::quat::Quat::from_rotation_z (23 samples, 0.01%)</title><rect x="13.2911%" y="1541" width="0.0133%" height="15" fill="rgb(229,229,48)" fg:x="22955" fg:w="23"/><text x="13.5411%" y="1551.50"></text></g><g><title>boids.exe`boids::Boid::quaternion_heading (56 samples, 0.03%)</title><rect x="13.2911%" y="1557" width="0.0324%" height="15" fill="rgb(225,21,28)" fg:x="22955" fg:w="56"/><text x="13.5411%" y="1567.50"></text></g><g><title>boids.exe`std::f32::impl$0::atan2 (33 samples, 0.02%)</title><rect x="13.3044%" y="1541" width="0.0191%" height="15" fill="rgb(206,33,13)" fg:x="22978" fg:w="33"/><text x="13.5544%" y="1551.50"></text></g><g><title>`0x7FF89D8ECCCA (45 samples, 0.03%)</title><rect x="13.3414%" y="1397" width="0.0261%" height="15" fill="rgb(242,178,17)" fg:x="23042" fg:w="45"/><text x="13.5914%" y="1407.50"></text></g><g><title>boids.exe`alloc::vec::Vec&lt;ref$&lt;boids::LocalBoid&gt;,alloc::alloc::Global&gt;::with_capacity (53 samples, 0.03%)</title><rect x="13.3397%" y="1477" width="0.0307%" height="15" fill="rgb(220,162,5)" fg:x="23039" fg:w="53"/><text x="13.5897%" y="1487.50"></text></g><g><title>boids.exe`alloc::vec::Vec&lt;ref$&lt;boids::LocalBoid&gt;,alloc::alloc::Global&gt;::with_capacity_in (53 samples, 0.03%)</title><rect x="13.3397%" y="1461" width="0.0307%" height="15" fill="rgb(210,33,43)" fg:x="23039" fg:w="53"/><text x="13.5897%" y="1471.50"></text></g><g><title>boids.exe`alloc::raw_vec::RawVec&lt;ref$&lt;boids::LocalBoid&gt;,alloc::alloc::Global&gt;::with_capacity_in (53 samples, 0.03%)</title><rect x="13.3397%" y="1445" width="0.0307%" height="15" fill="rgb(216,116,54)" fg:x="23039" fg:w="53"/><text x="13.5897%" y="1455.50"></text></g><g><title>boids.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (53 samples, 0.03%)</title><rect x="13.3397%" y="1429" width="0.0307%" height="15" fill="rgb(249,92,24)" fg:x="23039" fg:w="53"/><text x="13.5897%" y="1439.50"></text></g><g><title>boids.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (53 samples, 0.03%)</title><rect x="13.3397%" y="1413" width="0.0307%" height="15" fill="rgb(231,189,14)" fg:x="23039" fg:w="53"/><text x="13.5897%" y="1423.50"></text></g><g><title>`0x7FF89D8ECCCA (19 samples, 0.01%)</title><rect x="13.3924%" y="1221" width="0.0110%" height="15" fill="rgb(230,8,41)" fg:x="23130" fg:w="19"/><text x="13.6424%" y="1231.50"></text></g><g><title>`0x7FF89D8F3535 (49 samples, 0.03%)</title><rect x="13.3762%" y="1237" width="0.0284%" height="15" fill="rgb(249,7,27)" fg:x="23102" fg:w="49"/><text x="13.6262%" y="1247.50"></text></g><g><title>`0x7FF89D8F22F7 (87 samples, 0.05%)</title><rect x="13.3756%" y="1253" width="0.0504%" height="15" fill="rgb(232,86,5)" fg:x="23101" fg:w="87"/><text x="13.6256%" y="1263.50"></text></g><g><title>`0x7FF89D8F3592 (36 samples, 0.02%)</title><rect x="13.4051%" y="1237" width="0.0208%" height="15" fill="rgb(224,175,18)" fg:x="23152" fg:w="36"/><text x="13.6551%" y="1247.50"></text></g><g><title>`0x7FF89D8EB021 (36 samples, 0.02%)</title><rect x="13.4051%" y="1221" width="0.0208%" height="15" fill="rgb(220,129,12)" fg:x="23152" fg:w="36"/><text x="13.6551%" y="1231.50"></text></g><g><title>`0x7FF89D8F21BA (95 samples, 0.06%)</title><rect x="13.3744%" y="1269" width="0.0550%" height="15" fill="rgb(210,19,36)" fg:x="23099" fg:w="95"/><text x="13.6244%" y="1279.50"></text></g><g><title>boids.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (100 samples, 0.06%)</title><rect x="13.3739%" y="1317" width="0.0579%" height="15" fill="rgb(219,96,14)" fg:x="23098" fg:w="100"/><text x="13.6239%" y="1327.50"></text></g><g><title>boids.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (100 samples, 0.06%)</title><rect x="13.3739%" y="1301" width="0.0579%" height="15" fill="rgb(249,106,1)" fg:x="23098" fg:w="100"/><text x="13.6239%" y="1311.50"></text></g><g><title>boids.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (100 samples, 0.06%)</title><rect x="13.3739%" y="1285" width="0.0579%" height="15" fill="rgb(249,155,20)" fg:x="23098" fg:w="100"/><text x="13.6239%" y="1295.50"></text></g><g><title>boids.exe`alloc::vec::Vec&lt;ref$&lt;boids::LocalBoid&gt;,alloc::alloc::Global&gt;::as_mut_ptr (109 samples, 0.06%)</title><rect x="13.3704%" y="1445" width="0.0631%" height="15" fill="rgb(244,168,9)" fg:x="23092" fg:w="109"/><text x="13.6204%" y="1455.50"></text></g><g><title>boids.exe`alloc::raw_vec::RawVec&lt;ref$&lt;boids::LocalBoid&gt;,alloc::alloc::Global&gt;::ptr (109 samples, 0.06%)</title><rect x="13.3704%" y="1429" width="0.0631%" height="15" fill="rgb(216,23,50)" fg:x="23092" fg:w="109"/><text x="13.6204%" y="1439.50"></text></g><g><title>boids.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (109 samples, 0.06%)</title><rect x="13.3704%" y="1413" width="0.0631%" height="15" fill="rgb(224,219,20)" fg:x="23092" fg:w="109"/><text x="13.6204%" y="1423.50"></text></g><g><title>boids.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (109 samples, 0.06%)</title><rect x="13.3704%" y="1397" width="0.0631%" height="15" fill="rgb(222,156,15)" fg:x="23092" fg:w="109"/><text x="13.6204%" y="1407.50"></text></g><g><title>boids.exe`alloc::raw_vec::impl$4::reserve::do_reserve_and_handle&lt;alloc::alloc::Global&gt;(alloc::raw_vec::RawVecInner (109 samples, 0.06%)</title><rect x="13.3704%" y="1381" width="0.0631%" height="15" fill="rgb(231,97,17)" fg:x="23092" fg:w="109"/><text x="13.6204%" y="1391.50"></text></g><g><title>boids.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (107 samples, 0.06%)</title><rect x="13.3715%" y="1365" width="0.0620%" height="15" fill="rgb(218,70,48)" fg:x="23094" fg:w="107"/><text x="13.6215%" y="1375.50"></text></g><g><title>boids.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (106 samples, 0.06%)</title><rect x="13.3721%" y="1349" width="0.0614%" height="15" fill="rgb(212,196,52)" fg:x="23095" fg:w="106"/><text x="13.6221%" y="1359.50"></text></g><g><title>boids.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (104 samples, 0.06%)</title><rect x="13.3733%" y="1333" width="0.0602%" height="15" fill="rgb(243,203,18)" fg:x="23097" fg:w="104"/><text x="13.6233%" y="1343.50"></text></g><g><title>boids.exe`alloc::vec::spec_extend::impl$0::spec_extend(alloc::vec::Vec&lt;ref$&lt;boids::LocalBoid&gt;,alloc::alloc::Global&gt;*, core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter (125 samples, 0.07%)</title><rect x="13.3704%" y="1477" width="0.0724%" height="15" fill="rgb(252,125,41)" fg:x="23092" fg:w="125"/><text x="13.6204%" y="1487.50"></text></g><g><title>boids.exe`alloc::vec::Vec&lt;ref$&lt;boids::LocalBoid&gt;,alloc::alloc::Global&gt;::extend_desugared(core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter (125 samples, 0.07%)</title><rect x="13.3704%" y="1461" width="0.0724%" height="15" fill="rgb(223,180,33)" fg:x="23092" fg:w="125"/><text x="13.6204%" y="1471.50"></text></g><g><title>boids.exe`alloc::vec::Vec&lt;ref$&lt;boids::LocalBoid&gt;,alloc::alloc::Global&gt;::is_empty (187 samples, 0.11%)</title><rect x="13.3356%" y="1541" width="0.1083%" height="15" fill="rgb(254,159,46)" fg:x="23032" fg:w="187"/><text x="13.5856%" y="1551.50"></text></g><g><title>boids.exe`alloc::vec::Vec&lt;ref$&lt;boids::LocalBoid&gt;,alloc::alloc::Global&gt;::len (187 samples, 0.11%)</title><rect x="13.3356%" y="1525" width="0.1083%" height="15" fill="rgb(254,38,10)" fg:x="23032" fg:w="187"/><text x="13.5856%" y="1535.50"></text></g><g><title>boids.exe`alloc::vec::spec_from_iter::impl$0::from_iter&lt;ref$&lt;boids::LocalBoid&gt;,core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter&lt;boids::LocalBoid&gt;,boids::calculate_separation::closure_env$0&gt; &gt;(core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter (186 samples, 0.11%)</title><rect x="13.3362%" y="1509" width="0.1077%" height="15" fill="rgb(208,217,32)" fg:x="23033" fg:w="186"/><text x="13.5862%" y="1519.50"></text></g><g><title>boids.exe`alloc::vec::spec_from_iter_nested::impl$0::from_iter(core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter (185 samples, 0.11%)</title><rect x="13.3368%" y="1493" width="0.1071%" height="15" fill="rgb(221,120,13)" fg:x="23034" fg:w="185"/><text x="13.5868%" y="1503.50"></text></g><g><title>boids.exe`core::ops::arith::impl$241::div (24 samples, 0.01%)</title><rect x="13.4526%" y="1429" width="0.0139%" height="15" fill="rgb(246,54,52)" fg:x="23234" fg:w="24"/><text x="13.7026%" y="1439.50"></text></g><g><title>boids.exe`glam::f32::vec2::Vec2::normalize (32 samples, 0.02%)</title><rect x="13.4526%" y="1445" width="0.0185%" height="15" fill="rgb(242,34,25)" fg:x="23234" fg:w="32"/><text x="13.7026%" y="1455.50"></text></g><g><title>boids.exe`core::iter::traits::iterator::Iterator::sum(core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;ref$ (50 samples, 0.03%)</title><rect x="13.4439%" y="1541" width="0.0290%" height="15" fill="rgb(247,209,9)" fg:x="23219" fg:w="50"/><text x="13.6939%" y="1551.50"></text></g><g><title>boids.exe`glam::f32::vec2::impl$84::sum(core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;ref$ (50 samples, 0.03%)</title><rect x="13.4439%" y="1525" width="0.0290%" height="15" fill="rgb(228,71,26)" fg:x="23219" fg:w="50"/><text x="13.6939%" y="1535.50"></text></g><g><title>boids.exe`core::iter::adapters::map::impl$2::fold(core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;ref$&lt;boids::LocalBoid&gt;,alloc::alloc::Global&gt;,boids::calculate_separation::closure_env$1&gt;, glam::f32::vec2::Vec2, glam::f32::vec2::Vec2 (*) (50 samples, 0.03%)</title><rect x="13.4439%" y="1509" width="0.0290%" height="15" fill="rgb(222,145,49)" fg:x="23219" fg:w="50"/><text x="13.6939%" y="1519.50"></text></g><g><title>boids.exe`alloc::vec::into_iter::impl$5::fold(alloc::vec::into_iter::IntoIter&lt;ref$&lt;boids::LocalBoid&gt;,alloc::alloc::Global&gt;, glam::f32::vec2::Vec2, core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;boids::LocalBoid&gt;,glam::f32::vec2::Vec2,glam::f32::vec2::Vec2,boids::calculate_separation::closure_env$1,glam::f32::vec2::Vec2 (*) (50 samples, 0.03%)</title><rect x="13.4439%" y="1493" width="0.0290%" height="15" fill="rgb(218,121,17)" fg:x="23219" fg:w="50"/><text x="13.6939%" y="1503.50"></text></g><g><title>boids.exe`core::iter::adapters::map::map_fold::closure$0(core::iter::adapters::map::map_fold::closure_env$0&lt;ref$&lt;boids::LocalBoid&gt;,glam::f32::vec2::Vec2,glam::f32::vec2::Vec2,boids::calculate_separation::closure_env$1,glam::f32::vec2::Vec2 (*) (45 samples, 0.03%)</title><rect x="13.4468%" y="1477" width="0.0261%" height="15" fill="rgb(244,50,7)" fg:x="23224" fg:w="45"/><text x="13.6968%" y="1487.50"></text></g><g><title>boids.exe`boids::calculate_separation::closure$1 (45 samples, 0.03%)</title><rect x="13.4468%" y="1461" width="0.0261%" height="15" fill="rgb(246,229,37)" fg:x="23224" fg:w="45"/><text x="13.6968%" y="1471.50"></text></g><g><title>`0x7FF89D8EB021 (35 samples, 0.02%)</title><rect x="13.4816%" y="1477" width="0.0203%" height="15" fill="rgb(225,18,5)" fg:x="23284" fg:w="35"/><text x="13.7316%" y="1487.50"></text></g><g><title>boids.exe`glam::f32::vec2::Vec2::try_normalize (53 samples, 0.03%)</title><rect x="13.4729%" y="1541" width="0.0307%" height="15" fill="rgb(213,204,8)" fg:x="23269" fg:w="53"/><text x="13.7229%" y="1551.50"></text></g><g><title>boids.exe`glam::f32::vec2::Vec2::length_recip (46 samples, 0.03%)</title><rect x="13.4769%" y="1525" width="0.0266%" height="15" fill="rgb(238,103,6)" fg:x="23276" fg:w="46"/><text x="13.7269%" y="1535.50"></text></g><g><title>boids.exe`glam::f32::vec2::Vec2::length (46 samples, 0.03%)</title><rect x="13.4769%" y="1509" width="0.0266%" height="15" fill="rgb(222,25,35)" fg:x="23276" fg:w="46"/><text x="13.7269%" y="1519.50"></text></g><g><title>boids.exe`glam::f32::vec2::Vec2::dot (46 samples, 0.03%)</title><rect x="13.4769%" y="1493" width="0.0266%" height="15" fill="rgb(213,203,35)" fg:x="23276" fg:w="46"/><text x="13.7269%" y="1503.50"></text></g><g><title>boids.exe`boids::calculate_separation(alloc::vec::Vec (296 samples, 0.17%)</title><rect x="13.3328%" y="1557" width="0.1714%" height="15" fill="rgb(221,79,53)" fg:x="23027" fg:w="296"/><text x="13.5828%" y="1567.50"></text></g><g><title>boids.exe`alloc::vec::Vec&lt;core::cmp::Reverse&lt;boids::LocalBoid&gt;,alloc::alloc::Global&gt;::pop (43 samples, 0.02%)</title><rect x="13.5279%" y="1525" width="0.0249%" height="15" fill="rgb(243,200,35)" fg:x="23364" fg:w="43"/><text x="13.7779%" y="1535.50"></text></g><g><title>boids.exe`core::intrinsics::copy_nonoverlapping(core::cmp::Reverse&lt;boids::LocalBoid&gt;*, core::cmp::Reverse (30 samples, 0.02%)</title><rect x="14.0252%" y="1445" width="0.0174%" height="15" fill="rgb(248,60,25)" fg:x="24223" fg:w="30"/><text x="14.2752%" y="1455.50"></text></g><g><title>boids.exe`alloc::collections::binary_heap::Hole&lt;core::cmp::Reverse&lt;boids::LocalBoid&gt; &gt;::move_to (53 samples, 0.03%)</title><rect x="14.0252%" y="1461" width="0.0307%" height="15" fill="rgb(227,53,46)" fg:x="24223" fg:w="53"/><text x="14.2752%" y="1471.50"></text></g><g><title>boids.exe`core::ptr::mut_ptr::impl$0::add(core::cmp::Reverse (23 samples, 0.01%)</title><rect x="14.0426%" y="1445" width="0.0133%" height="15" fill="rgb(216,120,32)" fg:x="24253" fg:w="23"/><text x="14.2926%" y="1455.50"></text></g><g><title>boids.exe`alloc::collections::binary_heap::BinaryHeap&lt;core::cmp::Reverse&lt;boids::LocalBoid&gt;,alloc::alloc::Global&gt;::sift_up (165 samples, 0.10%)</title><rect x="13.9899%" y="1477" width="0.0955%" height="15" fill="rgb(220,134,1)" fg:x="24162" fg:w="165"/><text x="14.2399%" y="1487.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(alloc::collections::binary_heap::Hole&lt;core::cmp::Reverse (41 samples, 0.02%)</title><rect x="14.0617%" y="1461" width="0.0237%" height="15" fill="rgb(237,168,5)" fg:x="24286" fg:w="41"/><text x="14.3117%" y="1471.50"></text></g><g><title>boids.exe`alloc::collections::binary_heap::impl$13::drop(alloc::collections::binary_heap::Hole&lt;core::cmp::Reverse (41 samples, 0.02%)</title><rect x="14.0617%" y="1445" width="0.0237%" height="15" fill="rgb(231,100,33)" fg:x="24286" fg:w="41"/><text x="14.3117%" y="1455.50"></text></g><g><title>boids.exe`core::slice::impl$0::get_unchecked_mut(ref_mut$&lt;slice2$&lt;core::cmp::Reverse (41 samples, 0.02%)</title><rect x="14.0617%" y="1429" width="0.0237%" height="15" fill="rgb(236,177,47)" fg:x="24286" fg:w="41"/><text x="14.3117%" y="1439.50"></text></g><g><title>boids.exe`core::slice::index::impl$2::get_unchecked_mut(unsigned long long, ptr_mut$&lt;slice2$&lt;core::cmp::Reverse (23 samples, 0.01%)</title><rect x="14.0721%" y="1413" width="0.0133%" height="15" fill="rgb(235,7,49)" fg:x="24304" fg:w="23"/><text x="14.3221%" y="1423.50"></text></g><g><title>boids.exe`core::slice::index::get_mut_noubcheck(ptr_mut$&lt;slice2$&lt;core::cmp::Reverse (23 samples, 0.01%)</title><rect x="14.0721%" y="1397" width="0.0133%" height="15" fill="rgb(232,119,22)" fg:x="24304" fg:w="23"/><text x="14.3221%" y="1407.50"></text></g><g><title>boids.exe`core::intrinsics::copy_nonoverlapping(core::cmp::Reverse&lt;boids::LocalBoid&gt;*, core::cmp::Reverse (477 samples, 0.28%)</title><rect x="14.0855%" y="1461" width="0.2762%" height="15" fill="rgb(254,73,53)" fg:x="24327" fg:w="477"/><text x="14.3355%" y="1471.50"></text></g><g><title>boids.exe`alloc::collections::binary_heap::Hole&lt;core::cmp::Reverse&lt;boids::LocalBoid&gt; &gt;::move_to (551 samples, 0.32%)</title><rect x="14.0855%" y="1477" width="0.3190%" height="15" fill="rgb(251,35,20)" fg:x="24327" fg:w="551"/><text x="14.3355%" y="1487.50"></text></g><g><title>boids.exe`core::ptr::mut_ptr::impl$0::add(core::cmp::Reverse (74 samples, 0.04%)</title><rect x="14.3616%" y="1461" width="0.0428%" height="15" fill="rgb(241,119,20)" fg:x="24804" fg:w="74"/><text x="14.6116%" y="1471.50"></text></g><g><title>boids.exe`alloc::collections::binary_heap::Hole&lt;core::cmp::Reverse&lt;boids::LocalBoid&gt; &gt;::new(ref_mut$&lt;slice2$&lt;core::cmp::Reverse (45 samples, 0.03%)</title><rect x="14.4045%" y="1477" width="0.0261%" height="15" fill="rgb(207,102,14)" fg:x="24878" fg:w="45"/><text x="14.6545%" y="1487.50"></text></g><g><title>boids.exe`core::ptr::read(core::cmp::Reverse (45 samples, 0.03%)</title><rect x="14.4045%" y="1461" width="0.0261%" height="15" fill="rgb(248,201,50)" fg:x="24878" fg:w="45"/><text x="14.6545%" y="1471.50"></text></g><g><title>boids.exe`core::cmp::impls::impl$10::le(core::cmp::Reverse&lt;boids::LocalBoid&gt;**, core::cmp::Reverse (274 samples, 0.16%)</title><rect x="14.4305%" y="1477" width="0.1586%" height="15" fill="rgb(222,185,44)" fg:x="24923" fg:w="274"/><text x="14.6805%" y="1487.50"></text></g><g><title>boids.exe`core::cmp::impl$1::le(core::cmp::Reverse&lt;boids::LocalBoid&gt;*, core::cmp::Reverse (209 samples, 0.12%)</title><rect x="14.4682%" y="1461" width="0.1210%" height="15" fill="rgb(218,107,18)" fg:x="24988" fg:w="209"/><text x="14.7182%" y="1471.50"></text></g><g><title>boids.exe`core::cmp::PartialOrd::le (209 samples, 0.12%)</title><rect x="14.4682%" y="1445" width="0.1210%" height="15" fill="rgb(237,177,39)" fg:x="24988" fg:w="209"/><text x="14.7182%" y="1455.50"></text></g><g><title>boids.exe`boids::impl$3::partial_cmp (209 samples, 0.12%)</title><rect x="14.4682%" y="1429" width="0.1210%" height="15" fill="rgb(246,69,6)" fg:x="24988" fg:w="209"/><text x="14.7182%" y="1439.50"></text></g><g><title>boids.exe`core::cmp::impls::impl$53::partial_cmp (209 samples, 0.12%)</title><rect x="14.4682%" y="1413" width="0.1210%" height="15" fill="rgb(234,208,37)" fg:x="24988" fg:w="209"/><text x="14.7182%" y="1423.50"></text></g><g><title>boids.exe`alloc::collections::binary_heap::BinaryHeap&lt;core::cmp::Reverse&lt;boids::LocalBoid&gt;,alloc::alloc::Global&gt;::sift_down_to_bottom (1,780 samples, 1.03%)</title><rect x="13.5748%" y="1493" width="1.0306%" height="15" fill="rgb(225,4,6)" fg:x="23445" fg:w="1780"/><text x="13.8248%" y="1503.50"></text></g><g><title>boids.exe`core::mem::drop(alloc::collections::binary_heap::Hole&lt;core::cmp::Reverse (28 samples, 0.02%)</title><rect x="14.5892%" y="1477" width="0.0162%" height="15" fill="rgb(233,45,0)" fg:x="25197" fg:w="28"/><text x="14.8392%" y="1487.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(alloc::collections::binary_heap::Hole&lt;core::cmp::Reverse (28 samples, 0.02%)</title><rect x="14.5892%" y="1461" width="0.0162%" height="15" fill="rgb(226,136,5)" fg:x="25197" fg:w="28"/><text x="14.8392%" y="1471.50"></text></g><g><title>boids.exe`alloc::collections::binary_heap::impl$13::drop(alloc::collections::binary_heap::Hole&lt;core::cmp::Reverse (28 samples, 0.02%)</title><rect x="14.5892%" y="1445" width="0.0162%" height="15" fill="rgb(211,91,47)" fg:x="25197" fg:w="28"/><text x="14.8392%" y="1455.50"></text></g><g><title>boids.exe`core::intrinsics::copy_nonoverlapping(core::cmp::Reverse&lt;boids::LocalBoid&gt;*, core::cmp::Reverse (28 samples, 0.02%)</title><rect x="14.5892%" y="1429" width="0.0162%" height="15" fill="rgb(242,88,51)" fg:x="25197" fg:w="28"/><text x="14.8392%" y="1439.50"></text></g><g><title>boids.exe`alloc::collections::binary_heap::BinaryHeap&lt;core::cmp::Reverse&lt;boids::LocalBoid&gt;,alloc::alloc::Global&gt;::pop&lt;core::cmp::Reverse&lt;boids::LocalBoid&gt;,alloc::alloc::Global&gt; (1,893 samples, 1.10%)</title><rect x="13.5111%" y="1541" width="1.0961%" height="15" fill="rgb(230,91,28)" fg:x="23335" fg:w="1893"/><text x="13.7611%" y="1551.50"></text></g><g><title>boids.exe`enum2$&lt;core::option::Option&lt;core::cmp::Reverse&lt;boids::LocalBoid&gt; &gt; &gt;::map(enum2$&lt;core::option::Option&lt;core::cmp::Reverse&lt;boids::LocalBoid&gt; &gt; &gt;, alloc::collections::binary_heap::impl$10::pop::closure_env$0&lt;core::cmp::Reverse (1,821 samples, 1.05%)</title><rect x="13.5528%" y="1525" width="1.0544%" height="15" fill="rgb(254,186,29)" fg:x="23407" fg:w="1821"/><text x="13.8028%" y="1535.50"></text></g><g><title>boids.exe`alloc::collections::binary_heap::impl$10::pop::closure$0(alloc::collections::binary_heap::impl$10::pop::closure_env$0&lt;core::cmp::Reverse&lt;boids::LocalBoid&gt;,alloc::alloc::Global&gt;, core::cmp::Reverse (1,821 samples, 1.05%)</title><rect x="13.5528%" y="1509" width="1.0544%" height="15" fill="rgb(238,6,4)" fg:x="23407" fg:w="1821"/><text x="13.8028%" y="1519.50"></text></g><g><title>boids.exe`core::cmp::impl$1::ge(core::cmp::Reverse&lt;boids::LocalBoid&gt;*, core::cmp::Reverse (4,970 samples, 2.88%)</title><rect x="19.6787%" y="1429" width="2.8777%" height="15" fill="rgb(221,151,16)" fg:x="33987" fg:w="4970"/><text x="19.9287%" y="1439.50">bo..</text></g><g><title>boids.exe`core::cmp::PartialOrd::ge (4,970 samples, 2.88%)</title><rect x="19.6787%" y="1413" width="2.8777%" height="15" fill="rgb(251,143,52)" fg:x="33987" fg:w="4970"/><text x="19.9287%" y="1423.50">bo..</text></g><g><title>boids.exe`enum2$&lt;core::option::Option&lt;core::cmp::Ordering&gt; &gt;::is_some_and(enum2$&lt;core::option::Option&lt;core::cmp::Ordering&gt; &gt;, bool (*) (4,970 samples, 2.88%)</title><rect x="19.6787%" y="1397" width="2.8777%" height="15" fill="rgb(206,90,15)" fg:x="33987" fg:w="4970"/><text x="19.9287%" y="1407.50">bo..</text></g><g><title>boids.exe`alloc::collections::binary_heap::Hole&lt;core::cmp::Reverse&lt;boids::LocalBoid&gt; &gt;::get (8,818 samples, 5.11%)</title><rect x="19.1141%" y="1445" width="5.1057%" height="15" fill="rgb(218,35,8)" fg:x="33012" fg:w="8818"/><text x="19.3641%" y="1455.50">boids...</text></g><g><title>boids.exe`core::slice::impl$0::get_unchecked(ref$&lt;slice2$&lt;core::cmp::Reverse (2,873 samples, 1.66%)</title><rect x="22.5563%" y="1429" width="1.6635%" height="15" fill="rgb(239,215,6)" fg:x="38957" fg:w="2873"/><text x="22.8063%" y="1439.50"></text></g><g><title>boids.exe`core::slice::index::impl$2::get_unchecked(unsigned long long, ptr_const$&lt;slice2$&lt;core::cmp::Reverse (2,873 samples, 1.66%)</title><rect x="22.5563%" y="1413" width="1.6635%" height="15" fill="rgb(245,116,39)" fg:x="38957" fg:w="2873"/><text x="22.8063%" y="1423.50"></text></g><g><title>boids.exe`core::slice::index::get_noubcheck(ptr_const$&lt;slice2$&lt;core::cmp::Reverse (2,873 samples, 1.66%)</title><rect x="22.5563%" y="1397" width="1.6635%" height="15" fill="rgb(242,65,28)" fg:x="38957" fg:w="2873"/><text x="22.8063%" y="1407.50"></text></g><g><title>boids.exe`core::intrinsics::copy_nonoverlapping(core::cmp::Reverse&lt;boids::LocalBoid&gt;*, core::cmp::Reverse (3,910 samples, 2.26%)</title><rect x="24.2198%" y="1429" width="2.2639%" height="15" fill="rgb(252,132,53)" fg:x="41830" fg:w="3910"/><text x="24.4698%" y="1439.50">b..</text></g><g><title>boids.exe`alloc::collections::binary_heap::Hole&lt;core::cmp::Reverse&lt;boids::LocalBoid&gt; &gt;::move_to (8,634 samples, 5.00%)</title><rect x="24.2198%" y="1445" width="4.9991%" height="15" fill="rgb(224,159,50)" fg:x="41830" fg:w="8634"/><text x="24.4698%" y="1455.50">boids...</text></g><g><title>boids.exe`core::ptr::mut_ptr::impl$0::add(core::cmp::Reverse (4,724 samples, 2.74%)</title><rect x="26.4837%" y="1429" width="2.7352%" height="15" fill="rgb(224,93,4)" fg:x="45740" fg:w="4724"/><text x="26.7337%" y="1439.50">bo..</text></g><g><title>boids.exe`alloc::collections::binary_heap::Hole&lt;core::cmp::Reverse&lt;boids::LocalBoid&gt; &gt;::new(ref_mut$&lt;slice2$&lt;core::cmp::Reverse (1,550 samples, 0.90%)</title><rect x="29.2189%" y="1445" width="0.8975%" height="15" fill="rgb(208,81,34)" fg:x="50464" fg:w="1550"/><text x="29.4689%" y="1455.50"></text></g><g><title>boids.exe`core::slice::impl$0::get_unchecked(ref$&lt;slice2$&lt;core::cmp::Reverse (1,550 samples, 0.90%)</title><rect x="29.2189%" y="1429" width="0.8975%" height="15" fill="rgb(233,92,54)" fg:x="50464" fg:w="1550"/><text x="29.4689%" y="1439.50"></text></g><g><title>boids.exe`core::slice::index::impl$2::get_unchecked(unsigned long long, ptr_const$&lt;slice2$&lt;core::cmp::Reverse (72 samples, 0.04%)</title><rect x="30.0747%" y="1413" width="0.0417%" height="15" fill="rgb(237,21,14)" fg:x="51942" fg:w="72"/><text x="30.3247%" y="1423.50"></text></g><g><title>boids.exe`core::slice::index::get_noubcheck(ptr_const$&lt;slice2$&lt;core::cmp::Reverse (72 samples, 0.04%)</title><rect x="30.0747%" y="1397" width="0.0417%" height="15" fill="rgb(249,128,51)" fg:x="51942" fg:w="72"/><text x="30.3247%" y="1407.50"></text></g><g><title>boids.exe`core::cmp::impls::impl$10::le(core::cmp::Reverse&lt;boids::LocalBoid&gt;**, core::cmp::Reverse (1,275 samples, 0.74%)</title><rect x="30.1164%" y="1445" width="0.7382%" height="15" fill="rgb(223,129,24)" fg:x="52014" fg:w="1275"/><text x="30.3664%" y="1455.50"></text></g><g><title>boids.exe`alloc::collections::binary_heap::BinaryHeap&lt;core::cmp::Reverse&lt;boids::LocalBoid&gt;,alloc::alloc::Global&gt;::rebuild (38,881 samples, 22.51%)</title><rect x="14.6112%" y="1493" width="22.5123%" height="15" fill="rgb(231,168,25)" fg:x="25235" fg:w="38881"/><text x="14.8612%" y="1503.50">boids.exe`alloc::collections::binary..</text></g><g><title>boids.exe`alloc::collections::binary_heap::BinaryHeap&lt;core::cmp::Reverse&lt;boids::LocalBoid&gt;,alloc::alloc::Global&gt;::sift_down (36,927 samples, 21.38%)</title><rect x="15.7426%" y="1477" width="21.3809%" height="15" fill="rgb(224,39,20)" fg:x="27189" fg:w="36927"/><text x="15.9926%" y="1487.50">boids.exe`alloc::collections::bina..</text></g><g><title>boids.exe`alloc::collections::binary_heap::BinaryHeap&lt;core::cmp::Reverse&lt;boids::LocalBoid&gt;,alloc::alloc::Global&gt;::sift_down_range (36,927 samples, 21.38%)</title><rect x="15.7426%" y="1461" width="21.3809%" height="15" fill="rgb(225,152,53)" fg:x="27189" fg:w="36927"/><text x="15.9926%" y="1471.50">boids.exe`alloc::collections::bina..</text></g><g><title>boids.exe`core::ptr::drop_in_place(alloc::collections::binary_heap::Hole&lt;core::cmp::Reverse (10,827 samples, 6.27%)</title><rect x="30.8546%" y="1445" width="6.2689%" height="15" fill="rgb(252,17,24)" fg:x="53289" fg:w="10827"/><text x="31.1046%" y="1455.50">boids.ex..</text></g><g><title>boids.exe`alloc::collections::binary_heap::impl$13::drop(alloc::collections::binary_heap::Hole&lt;core::cmp::Reverse (10,827 samples, 6.27%)</title><rect x="30.8546%" y="1429" width="6.2689%" height="15" fill="rgb(250,114,30)" fg:x="53289" fg:w="10827"/><text x="31.1046%" y="1439.50">boids.ex..</text></g><g><title>boids.exe`core::slice::impl$0::get_unchecked_mut(ref_mut$&lt;slice2$&lt;core::cmp::Reverse (10,827 samples, 6.27%)</title><rect x="30.8546%" y="1413" width="6.2689%" height="15" fill="rgb(229,5,4)" fg:x="53289" fg:w="10827"/><text x="31.1046%" y="1423.50">boids.ex..</text></g><g><title>boids.exe`core::slice::index::impl$2::get_unchecked_mut(unsigned long long, ptr_mut$&lt;slice2$&lt;core::cmp::Reverse (8,354 samples, 4.84%)</title><rect x="32.2865%" y="1397" width="4.8370%" height="15" fill="rgb(225,176,49)" fg:x="55762" fg:w="8354"/><text x="32.5365%" y="1407.50">boids...</text></g><g><title>boids.exe`core::slice::index::get_mut_noubcheck(ptr_mut$&lt;slice2$&lt;core::cmp::Reverse (8,354 samples, 4.84%)</title><rect x="32.2865%" y="1381" width="4.8370%" height="15" fill="rgb(224,221,49)" fg:x="55762" fg:w="8354"/><text x="32.5365%" y="1391.50">boids...</text></g><g><title>boids.exe`alloc::collections::binary_heap::impl$48::from(alloc::vec::Vec&lt;core::cmp::Reverse (38,888 samples, 22.52%)</title><rect x="14.6100%" y="1509" width="22.5164%" height="15" fill="rgb(253,169,27)" fg:x="25233" fg:w="38888"/><text x="14.8600%" y="1519.50">boids.exe`alloc::collections::binary..</text></g><g><title>boids.exe`alloc::vec::Vec&lt;boids::LocalBoid,alloc::alloc::Global&gt;::new (38,894 samples, 22.52%)</title><rect x="14.6071%" y="1541" width="22.5198%" height="15" fill="rgb(211,206,16)" fg:x="25228" fg:w="38894"/><text x="14.8571%" y="1551.50">boids.exe`alloc::vec::Vec&lt;boids::Loc..</text></g><g><title>boids.exe`alloc::collections::binary_heap::impl$51::from_iter&lt;core::cmp::Reverse&lt;boids::LocalBoid&gt;,alloc::vec::into_iter::IntoIter&lt;core::cmp::Reverse&lt;boids::LocalBoid&gt;,alloc::alloc::Global&gt; &gt;(alloc::vec::into_iter::IntoIter&lt;core::cmp::Reverse (38,892 samples, 22.52%)</title><rect x="14.6083%" y="1525" width="22.5187%" height="15" fill="rgb(244,87,35)" fg:x="25230" fg:w="38892"/><text x="14.8583%" y="1535.50">boids.exe`alloc::collections::binary..</text></g><g><title>`0x7FF89D8ECCCA (94 samples, 0.05%)</title><rect x="37.1779%" y="1397" width="0.0544%" height="15" fill="rgb(246,28,10)" fg:x="64210" fg:w="94"/><text x="37.4279%" y="1407.50"></text></g><g><title>`0x7FF89D8ED554 (19 samples, 0.01%)</title><rect x="37.3233%" y="1333" width="0.0110%" height="15" fill="rgb(229,12,44)" fg:x="64461" fg:w="19"/><text x="37.5733%" y="1343.50"></text></g><g><title>`0x7FF89D8ED6BA (22 samples, 0.01%)</title><rect x="37.3493%" y="1333" width="0.0127%" height="15" fill="rgb(210,145,37)" fg:x="64506" fg:w="22"/><text x="37.5993%" y="1343.50"></text></g><g><title>`0x7FF89D8ECCCA (133 samples, 0.08%)</title><rect x="37.3082%" y="1349" width="0.0770%" height="15" fill="rgb(227,112,52)" fg:x="64435" fg:w="133"/><text x="37.5582%" y="1359.50"></text></g><g><title>`0x7FF89D8F3535 (229 samples, 0.13%)</title><rect x="37.2567%" y="1365" width="0.1326%" height="15" fill="rgb(238,155,34)" fg:x="64346" fg:w="229"/><text x="37.5067%" y="1375.50"></text></g><g><title>`0x7FF89D95DA6F (21 samples, 0.01%)</title><rect x="37.4402%" y="1333" width="0.0122%" height="15" fill="rgb(239,226,36)" fg:x="64663" fg:w="21"/><text x="37.6902%" y="1343.50"></text></g><g><title>`0x7FF89D8F3592 (126 samples, 0.07%)</title><rect x="37.3997%" y="1365" width="0.0730%" height="15" fill="rgb(230,16,23)" fg:x="64593" fg:w="126"/><text x="37.6497%" y="1375.50"></text></g><g><title>`0x7FF89D8EB021 (124 samples, 0.07%)</title><rect x="37.4008%" y="1349" width="0.0718%" height="15" fill="rgb(236,171,36)" fg:x="64595" fg:w="124"/><text x="37.6508%" y="1359.50"></text></g><g><title>`0x7FF89D8F22F7 (404 samples, 0.23%)</title><rect x="37.2428%" y="1381" width="0.2339%" height="15" fill="rgb(221,22,14)" fg:x="64322" fg:w="404"/><text x="37.4928%" y="1391.50"></text></g><g><title>`0x7FF89D8F21BA (428 samples, 0.25%)</title><rect x="37.2370%" y="1397" width="0.2478%" height="15" fill="rgb(242,43,11)" fg:x="64312" fg:w="428"/><text x="37.4870%" y="1407.50"></text></g><g><title>boids.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (568 samples, 0.33%)</title><rect x="37.1675%" y="1445" width="0.3289%" height="15" fill="rgb(232,69,23)" fg:x="64192" fg:w="568"/><text x="37.4175%" y="1455.50"></text></g><g><title>boids.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (568 samples, 0.33%)</title><rect x="37.1675%" y="1429" width="0.3289%" height="15" fill="rgb(216,180,54)" fg:x="64192" fg:w="568"/><text x="37.4175%" y="1439.50"></text></g><g><title>boids.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (568 samples, 0.33%)</title><rect x="37.1675%" y="1413" width="0.3289%" height="15" fill="rgb(216,5,24)" fg:x="64192" fg:w="568"/><text x="37.4175%" y="1423.50"></text></g><g><title>boids.exe`alloc::raw_vec::RawVec&lt;boids::LocalBoid,alloc::alloc::Global&gt;::grow_one&lt;boids::LocalBoid,alloc::alloc::Global&gt; (652 samples, 0.38%)</title><rect x="37.1322%" y="1525" width="0.3775%" height="15" fill="rgb(225,89,9)" fg:x="64131" fg:w="652"/><text x="37.3822%" y="1535.50"></text></g><g><title>boids.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (621 samples, 0.36%)</title><rect x="37.1501%" y="1509" width="0.3596%" height="15" fill="rgb(243,75,33)" fg:x="64162" fg:w="621"/><text x="37.4001%" y="1519.50"></text></g><g><title>boids.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (621 samples, 0.36%)</title><rect x="37.1501%" y="1493" width="0.3596%" height="15" fill="rgb(247,141,45)" fg:x="64162" fg:w="621"/><text x="37.4001%" y="1503.50"></text></g><g><title>boids.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (610 samples, 0.35%)</title><rect x="37.1565%" y="1477" width="0.3532%" height="15" fill="rgb(232,177,36)" fg:x="64173" fg:w="610"/><text x="37.4065%" y="1487.50"></text></g><g><title>boids.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (605 samples, 0.35%)</title><rect x="37.1594%" y="1461" width="0.3503%" height="15" fill="rgb(219,125,36)" fg:x="64178" fg:w="605"/><text x="37.4094%" y="1471.50"></text></g><g><title>boids.exe`enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;,core::alloc::AllocError&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;,core::alloc::AllocError&gt; &gt;, alloc::raw_vec::finish_grow::closure_env$0 (23 samples, 0.01%)</title><rect x="37.4964%" y="1445" width="0.0133%" height="15" fill="rgb(227,94,9)" fg:x="64760" fg:w="23"/><text x="37.7464%" y="1455.50"></text></g><g><title>boids.exe`alloc::vec::Vec&lt;boids::LocalBoid,alloc::alloc::Global&gt;::push (894 samples, 0.52%)</title><rect x="37.1270%" y="1541" width="0.5176%" height="15" fill="rgb(240,34,52)" fg:x="64122" fg:w="894"/><text x="37.3770%" y="1551.50"></text></g><g><title>boids.exe`core::ptr::write (224 samples, 0.13%)</title><rect x="37.5149%" y="1525" width="0.1297%" height="15" fill="rgb(216,45,12)" fg:x="64792" fg:w="224"/><text x="37.7649%" y="1535.50"></text></g><g><title>`0x7FF89D8ECCCA (20 samples, 0.01%)</title><rect x="37.6579%" y="1397" width="0.0116%" height="15" fill="rgb(246,21,19)" fg:x="65039" fg:w="20"/><text x="37.9079%" y="1407.50"></text></g><g><title>boids.exe`alloc::vec::Vec&lt;core::cmp::Reverse&lt;boids::LocalBoid&gt;,alloc::alloc::Global&gt;::with_capacity (25 samples, 0.01%)</title><rect x="37.6568%" y="1477" width="0.0145%" height="15" fill="rgb(213,98,42)" fg:x="65037" fg:w="25"/><text x="37.9068%" y="1487.50"></text></g><g><title>boids.exe`alloc::vec::Vec&lt;core::cmp::Reverse&lt;boids::LocalBoid&gt;,alloc::alloc::Global&gt;::with_capacity_in (25 samples, 0.01%)</title><rect x="37.6568%" y="1461" width="0.0145%" height="15" fill="rgb(250,136,47)" fg:x="65037" fg:w="25"/><text x="37.9068%" y="1471.50"></text></g><g><title>boids.exe`alloc::raw_vec::RawVec&lt;core::cmp::Reverse&lt;boids::LocalBoid&gt;,alloc::alloc::Global&gt;::with_capacity_in (25 samples, 0.01%)</title><rect x="37.6568%" y="1445" width="0.0145%" height="15" fill="rgb(251,124,27)" fg:x="65037" fg:w="25"/><text x="37.9068%" y="1455.50"></text></g><g><title>boids.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (25 samples, 0.01%)</title><rect x="37.6568%" y="1429" width="0.0145%" height="15" fill="rgb(229,180,14)" fg:x="65037" fg:w="25"/><text x="37.9068%" y="1439.50"></text></g><g><title>boids.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (25 samples, 0.01%)</title><rect x="37.6568%" y="1413" width="0.0145%" height="15" fill="rgb(245,216,25)" fg:x="65037" fg:w="25"/><text x="37.9068%" y="1423.50"></text></g><g><title>`0x7FF89D8F24F5 (19 samples, 0.01%)</title><rect x="45.5642%" y="1237" width="0.0110%" height="15" fill="rgb(251,43,5)" fg:x="78694" fg:w="19"/><text x="45.8142%" y="1247.50"></text></g><g><title>`0x7FF89D8F40F9 (28 samples, 0.02%)</title><rect x="45.6181%" y="1221" width="0.0162%" height="15" fill="rgb(250,128,24)" fg:x="78787" fg:w="28"/><text x="45.8681%" y="1231.50"></text></g><g><title>`0x7FF89D8F2770 (119 samples, 0.07%)</title><rect x="45.6030%" y="1237" width="0.0689%" height="15" fill="rgb(217,117,27)" fg:x="78761" fg:w="119"/><text x="45.8530%" y="1247.50"></text></g><g><title>`0x7FF89D8F41DE (57 samples, 0.03%)</title><rect x="45.6389%" y="1221" width="0.0330%" height="15" fill="rgb(245,147,4)" fg:x="78823" fg:w="57"/><text x="45.8889%" y="1231.50"></text></g><g><title>`0x7FF89D8F29D9 (47 samples, 0.03%)</title><rect x="45.6795%" y="1237" width="0.0272%" height="15" fill="rgb(242,201,35)" fg:x="78893" fg:w="47"/><text x="45.9295%" y="1247.50"></text></g><g><title>`0x7FF89D8F474A (62 samples, 0.04%)</title><rect x="45.7414%" y="1189" width="0.0359%" height="15" fill="rgb(218,181,1)" fg:x="79000" fg:w="62"/><text x="45.9914%" y="1199.50"></text></g><g><title>`0x7FF89D8EF73D (64 samples, 0.04%)</title><rect x="45.7408%" y="1205" width="0.0371%" height="15" fill="rgb(222,6,29)" fg:x="78999" fg:w="64"/><text x="45.9908%" y="1215.50"></text></g><g><title>`0x7FF89D8EF7E8 (36 samples, 0.02%)</title><rect x="45.7872%" y="1205" width="0.0208%" height="15" fill="rgb(208,186,3)" fg:x="79079" fg:w="36"/><text x="46.0372%" y="1215.50"></text></g><g><title>`0x7FF89D8EF80E (53 samples, 0.03%)</title><rect x="45.8086%" y="1205" width="0.0307%" height="15" fill="rgb(216,36,26)" fg:x="79116" fg:w="53"/><text x="46.0586%" y="1215.50"></text></g><g><title>`0x7FF89D8EF87F (54 samples, 0.03%)</title><rect x="45.8427%" y="1205" width="0.0313%" height="15" fill="rgb(248,201,23)" fg:x="79175" fg:w="54"/><text x="46.0927%" y="1215.50"></text></g><g><title>`0x7FF89D8EFA41 (58 samples, 0.03%)</title><rect x="45.8798%" y="1205" width="0.0336%" height="15" fill="rgb(251,170,31)" fg:x="79239" fg:w="58"/><text x="46.1298%" y="1215.50"></text></g><g><title>`0x7FF89D8F29EF (388 samples, 0.22%)</title><rect x="45.7067%" y="1237" width="0.2247%" height="15" fill="rgb(207,110,25)" fg:x="78940" fg:w="388"/><text x="45.9567%" y="1247.50"></text></g><g><title>`0x7FF89D8ED269 (385 samples, 0.22%)</title><rect x="45.7084%" y="1221" width="0.2229%" height="15" fill="rgb(250,54,15)" fg:x="78943" fg:w="385"/><text x="45.9584%" y="1231.50"></text></g><g><title>`0x7FF89D8F2AE7 (32 samples, 0.02%)</title><rect x="45.9441%" y="1237" width="0.0185%" height="15" fill="rgb(227,68,33)" fg:x="79350" fg:w="32"/><text x="46.1941%" y="1247.50"></text></g><g><title>`0x7FF89D957A09 (30 samples, 0.02%)</title><rect x="45.9701%" y="1221" width="0.0174%" height="15" fill="rgb(238,34,41)" fg:x="79395" fg:w="30"/><text x="46.2201%" y="1231.50"></text></g><g><title>`0x7FF89D957A13 (37 samples, 0.02%)</title><rect x="45.9933%" y="1221" width="0.0214%" height="15" fill="rgb(220,11,15)" fg:x="79435" fg:w="37"/><text x="46.2433%" y="1231.50"></text></g><g><title>`0x7FF89D957A17 (426 samples, 0.25%)</title><rect x="46.0147%" y="1221" width="0.2467%" height="15" fill="rgb(246,111,35)" fg:x="79472" fg:w="426"/><text x="46.2647%" y="1231.50"></text></g><g><title>`0x7FF89D957A1B (247 samples, 0.14%)</title><rect x="46.2614%" y="1221" width="0.1430%" height="15" fill="rgb(209,88,53)" fg:x="79898" fg:w="247"/><text x="46.5114%" y="1231.50"></text></g><g><title>`0x7FF89D957A22 (258 samples, 0.15%)</title><rect x="46.4044%" y="1221" width="0.1494%" height="15" fill="rgb(231,185,47)" fg:x="80145" fg:w="258"/><text x="46.6544%" y="1231.50"></text></g><g><title>`0x7FF89D957A26 (422 samples, 0.24%)</title><rect x="46.5538%" y="1221" width="0.2443%" height="15" fill="rgb(233,154,1)" fg:x="80403" fg:w="422"/><text x="46.8038%" y="1231.50"></text></g><g><title>`0x7FF89D8F2B2E (2,081 samples, 1.20%)</title><rect x="45.9626%" y="1237" width="1.2049%" height="15" fill="rgb(225,15,46)" fg:x="79382" fg:w="2081"/><text x="46.2126%" y="1247.50"></text></g><g><title>`0x7FF89D957A2A (638 samples, 0.37%)</title><rect x="46.7981%" y="1221" width="0.3694%" height="15" fill="rgb(211,135,41)" fg:x="80825" fg:w="638"/><text x="47.0481%" y="1231.50"></text></g><g><title>`0x7FF89D8F4C30 (38 samples, 0.02%)</title><rect x="47.2596%" y="1125" width="0.0220%" height="15" fill="rgb(208,54,0)" fg:x="81622" fg:w="38"/><text x="47.5096%" y="1135.50"></text></g><g><title>`0x7FF89D8F474A (123 samples, 0.07%)</title><rect x="47.2399%" y="1141" width="0.0712%" height="15" fill="rgb(244,136,14)" fg:x="81588" fg:w="123"/><text x="47.4899%" y="1151.50"></text></g><g><title>`0x7FF89D8F4880 (136 samples, 0.08%)</title><rect x="47.2341%" y="1157" width="0.0787%" height="15" fill="rgb(241,56,14)" fg:x="81578" fg:w="136"/><text x="47.4841%" y="1167.50"></text></g><g><title>`0x7FF89D8F4902 (27 samples, 0.02%)</title><rect x="47.3152%" y="1157" width="0.0156%" height="15" fill="rgb(205,80,24)" fg:x="81718" fg:w="27"/><text x="47.5652%" y="1167.50"></text></g><g><title>`0x7FF89D8F4920 (48 samples, 0.03%)</title><rect x="47.3319%" y="1157" width="0.0278%" height="15" fill="rgb(220,57,4)" fg:x="81747" fg:w="48"/><text x="47.5819%" y="1167.50"></text></g><g><title>`0x7FF89D8E9C38 (271 samples, 0.16%)</title><rect x="47.2150%" y="1189" width="0.1569%" height="15" fill="rgb(226,193,50)" fg:x="81545" fg:w="271"/><text x="47.4650%" y="1199.50"></text></g><g><title>`0x7FF89D8F5049 (258 samples, 0.15%)</title><rect x="47.2225%" y="1173" width="0.1494%" height="15" fill="rgb(231,168,22)" fg:x="81558" fg:w="258"/><text x="47.4725%" y="1183.50"></text></g><g><title>`0x7FF89D8EC354 (365 samples, 0.21%)</title><rect x="47.1814%" y="1205" width="0.2113%" height="15" fill="rgb(254,215,14)" fg:x="81487" fg:w="365"/><text x="47.4314%" y="1215.50"></text></g><g><title>`0x7FF89D8EB021 (381 samples, 0.22%)</title><rect x="47.1727%" y="1221" width="0.2206%" height="15" fill="rgb(211,115,16)" fg:x="81472" fg:w="381"/><text x="47.4227%" y="1231.50"></text></g><g><title>`0x7FF89D8F2B41 (390 samples, 0.23%)</title><rect x="47.1681%" y="1237" width="0.2258%" height="15" fill="rgb(236,210,16)" fg:x="81464" fg:w="390"/><text x="47.4181%" y="1247.50"></text></g><g><title>`0x7FF89D8F3494 (18 samples, 0.01%)</title><rect x="47.3962%" y="1237" width="0.0104%" height="15" fill="rgb(221,94,12)" fg:x="81858" fg:w="18"/><text x="47.6462%" y="1247.50"></text></g><g><title>`0x7FF89D8ECC9D (19 samples, 0.01%)</title><rect x="47.4559%" y="1221" width="0.0110%" height="15" fill="rgb(235,218,49)" fg:x="81961" fg:w="19"/><text x="47.7059%" y="1231.50"></text></g><g><title>`0x7FF89D8ECCC5 (25 samples, 0.01%)</title><rect x="47.4669%" y="1221" width="0.0145%" height="15" fill="rgb(217,114,14)" fg:x="81980" fg:w="25"/><text x="47.7169%" y="1231.50"></text></g><g><title>`0x7FF89D8ED554 (45 samples, 0.03%)</title><rect x="47.5091%" y="1205" width="0.0261%" height="15" fill="rgb(216,145,22)" fg:x="82053" fg:w="45"/><text x="47.7591%" y="1215.50"></text></g><g><title>`0x7FF89D8ED592 (23 samples, 0.01%)</title><rect x="47.5410%" y="1205" width="0.0133%" height="15" fill="rgb(217,112,39)" fg:x="82108" fg:w="23"/><text x="47.7910%" y="1215.50"></text></g><g><title>`0x7FF89D8ED6BA (75 samples, 0.04%)</title><rect x="47.5948%" y="1205" width="0.0434%" height="15" fill="rgb(225,85,32)" fg:x="82201" fg:w="75"/><text x="47.8448%" y="1215.50"></text></g><g><title>`0x7FF89D8ED6F7 (34 samples, 0.02%)</title><rect x="47.6429%" y="1205" width="0.0197%" height="15" fill="rgb(245,209,47)" fg:x="82284" fg:w="34"/><text x="47.8929%" y="1215.50"></text></g><g><title>`0x7FF89D8ECCCA (378 samples, 0.22%)</title><rect x="47.4813%" y="1221" width="0.2189%" height="15" fill="rgb(218,220,15)" fg:x="82005" fg:w="378"/><text x="47.7313%" y="1231.50"></text></g><g><title>`0x7FF89D8EF80E (36 samples, 0.02%)</title><rect x="47.7963%" y="1205" width="0.0208%" height="15" fill="rgb(222,202,31)" fg:x="82549" fg:w="36"/><text x="48.0463%" y="1215.50"></text></g><g><title>`0x7FF89D8EF87F (18 samples, 0.01%)</title><rect x="47.8189%" y="1205" width="0.0104%" height="15" fill="rgb(243,203,4)" fg:x="82588" fg:w="18"/><text x="48.0689%" y="1215.50"></text></g><g><title>`0x7FF89D8ED269 (223 samples, 0.13%)</title><rect x="47.7257%" y="1221" width="0.1291%" height="15" fill="rgb(237,92,17)" fg:x="82427" fg:w="223"/><text x="47.9757%" y="1231.50"></text></g><g><title>`0x7FF89D8F3535 (763 samples, 0.44%)</title><rect x="47.4136%" y="1237" width="0.4418%" height="15" fill="rgb(231,119,7)" fg:x="81888" fg:w="763"/><text x="47.6636%" y="1247.50"></text></g><g><title>`0x7FF89D957996 (32 samples, 0.02%)</title><rect x="47.8600%" y="1221" width="0.0185%" height="15" fill="rgb(237,82,41)" fg:x="82659" fg:w="32"/><text x="48.1100%" y="1231.50"></text></g><g><title>`0x7FF89D957A13 (24 samples, 0.01%)</title><rect x="47.9011%" y="1221" width="0.0139%" height="15" fill="rgb(226,81,48)" fg:x="82730" fg:w="24"/><text x="48.1511%" y="1231.50"></text></g><g><title>`0x7FF89D957A17 (126 samples, 0.07%)</title><rect x="47.9150%" y="1221" width="0.0730%" height="15" fill="rgb(234,70,51)" fg:x="82754" fg:w="126"/><text x="48.1650%" y="1231.50"></text></g><g><title>`0x7FF89D957A1B (74 samples, 0.04%)</title><rect x="47.9880%" y="1221" width="0.0428%" height="15" fill="rgb(251,86,4)" fg:x="82880" fg:w="74"/><text x="48.2380%" y="1231.50"></text></g><g><title>`0x7FF89D957A22 (66 samples, 0.04%)</title><rect x="48.0337%" y="1221" width="0.0382%" height="15" fill="rgb(244,144,28)" fg:x="82959" fg:w="66"/><text x="48.2837%" y="1231.50"></text></g><g><title>`0x7FF89D957A26 (134 samples, 0.08%)</title><rect x="48.0719%" y="1221" width="0.0776%" height="15" fill="rgb(232,161,39)" fg:x="83025" fg:w="134"/><text x="48.3219%" y="1231.50"></text></g><g><title>`0x7FF89D957A2A (125 samples, 0.07%)</title><rect x="48.1495%" y="1221" width="0.0724%" height="15" fill="rgb(247,34,51)" fg:x="83159" fg:w="125"/><text x="48.3995%" y="1231.50"></text></g><g><title>`0x7FF89D8F3580 (658 samples, 0.38%)</title><rect x="47.8559%" y="1237" width="0.3810%" height="15" fill="rgb(225,132,2)" fg:x="82652" fg:w="658"/><text x="48.1059%" y="1247.50"></text></g><g><title>`0x7FF89D95DA6F (48 samples, 0.03%)</title><rect x="48.3273%" y="1205" width="0.0278%" height="15" fill="rgb(209,159,44)" fg:x="83466" fg:w="48"/><text x="48.5773%" y="1215.50"></text></g><g><title>`0x7FF89D95DAAF (39 samples, 0.02%)</title><rect x="48.3643%" y="1205" width="0.0226%" height="15" fill="rgb(251,214,1)" fg:x="83530" fg:w="39"/><text x="48.6143%" y="1215.50"></text></g><g><title>`0x7FF89D8EB021 (249 samples, 0.14%)</title><rect x="48.2497%" y="1221" width="0.1442%" height="15" fill="rgb(247,84,47)" fg:x="83332" fg:w="249"/><text x="48.4997%" y="1231.50"></text></g><g><title>`0x7FF89D8F3592 (271 samples, 0.16%)</title><rect x="48.2381%" y="1237" width="0.1569%" height="15" fill="rgb(240,111,43)" fg:x="83312" fg:w="271"/><text x="48.4881%" y="1247.50"></text></g><g><title>`0x7FF89D8F22F7 (4,962 samples, 2.87%)</title><rect x="45.5324%" y="1253" width="2.8730%" height="15" fill="rgb(215,214,35)" fg:x="78639" fg:w="4962"/><text x="45.7824%" y="1263.50">`0..</text></g><g><title>`0x7FF89D8F2342 (27 samples, 0.02%)</title><rect x="48.4263%" y="1253" width="0.0156%" height="15" fill="rgb(248,207,23)" fg:x="83637" fg:w="27"/><text x="48.6763%" y="1263.50"></text></g><g><title>`0x7FF89D8F21BA (5,057 samples, 2.93%)</title><rect x="45.5156%" y="1269" width="2.9280%" height="15" fill="rgb(214,186,4)" fg:x="78610" fg:w="5057"/><text x="45.7656%" y="1279.50">`0..</text></g><g><title>boids.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (5,191 samples, 3.01%)</title><rect x="45.4861%" y="1317" width="3.0056%" height="15" fill="rgb(220,133,22)" fg:x="78559" fg:w="5191"/><text x="45.7361%" y="1327.50">boi..</text></g><g><title>boids.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (5,191 samples, 3.01%)</title><rect x="45.4861%" y="1301" width="3.0056%" height="15" fill="rgb(239,134,19)" fg:x="78559" fg:w="5191"/><text x="45.7361%" y="1311.50">boi..</text></g><g><title>boids.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (5,176 samples, 3.00%)</title><rect x="45.4948%" y="1285" width="2.9969%" height="15" fill="rgb(250,140,9)" fg:x="78574" fg:w="5176"/><text x="45.7448%" y="1295.50">boi..</text></g><g><title>boids.exe`std::alloc::__default_lib_allocator::__rdl_realloc (71 samples, 0.04%)</title><rect x="48.4506%" y="1269" width="0.0411%" height="15" fill="rgb(225,59,14)" fg:x="83679" fg:w="71"/><text x="48.7006%" y="1279.50"></text></g><g><title>boids.exe`std::sys::alloc::windows::impl$0::realloc (54 samples, 0.03%)</title><rect x="48.4604%" y="1253" width="0.0313%" height="15" fill="rgb(214,152,51)" fg:x="83696" fg:w="54"/><text x="48.7104%" y="1263.50"></text></g><g><title>`0x7FF89D3C0DF0 (21 samples, 0.01%)</title><rect x="48.4795%" y="1237" width="0.0122%" height="15" fill="rgb(251,227,43)" fg:x="83729" fg:w="21"/><text x="48.7295%" y="1247.50"></text></g><g><title>boids.exe`alloc::vec::Vec&lt;core::cmp::Reverse&lt;boids::LocalBoid&gt;,alloc::alloc::Global&gt;::as_mut_ptr (15,561 samples, 9.01%)</title><rect x="39.4928%" y="1445" width="9.0099%" height="15" fill="rgb(241,96,17)" fg:x="68208" fg:w="15561"/><text x="39.7428%" y="1455.50">boids.exe`all..</text></g><g><title>boids.exe`alloc::raw_vec::RawVec&lt;core::cmp::Reverse&lt;boids::LocalBoid&gt;,alloc::alloc::Global&gt;::ptr (5,314 samples, 3.08%)</title><rect x="45.4259%" y="1429" width="3.0768%" height="15" fill="rgb(234,198,43)" fg:x="78455" fg:w="5314"/><text x="45.6759%" y="1439.50">boi..</text></g><g><title>boids.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (5,314 samples, 3.08%)</title><rect x="45.4259%" y="1413" width="3.0768%" height="15" fill="rgb(220,108,29)" fg:x="78455" fg:w="5314"/><text x="45.6759%" y="1423.50">boi..</text></g><g><title>boids.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (5,314 samples, 3.08%)</title><rect x="45.4259%" y="1397" width="3.0768%" height="15" fill="rgb(226,163,33)" fg:x="78455" fg:w="5314"/><text x="45.6759%" y="1407.50">boi..</text></g><g><title>boids.exe`alloc::raw_vec::impl$4::reserve::do_reserve_and_handle&lt;alloc::alloc::Global&gt;(alloc::raw_vec::RawVecInner (5,312 samples, 3.08%)</title><rect x="45.4270%" y="1381" width="3.0757%" height="15" fill="rgb(205,194,45)" fg:x="78457" fg:w="5312"/><text x="45.6770%" y="1391.50">boi..</text></g><g><title>boids.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (5,293 samples, 3.06%)</title><rect x="45.4380%" y="1365" width="3.0647%" height="15" fill="rgb(206,143,44)" fg:x="78476" fg:w="5293"/><text x="45.6880%" y="1375.50">boi..</text></g><g><title>boids.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (5,235 samples, 3.03%)</title><rect x="45.4716%" y="1349" width="3.0311%" height="15" fill="rgb(236,136,36)" fg:x="78534" fg:w="5235"/><text x="45.7216%" y="1359.50">boi..</text></g><g><title>boids.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (5,227 samples, 3.03%)</title><rect x="45.4762%" y="1333" width="3.0265%" height="15" fill="rgb(249,172,42)" fg:x="78542" fg:w="5227"/><text x="45.7262%" y="1343.50">boi..</text></g><g><title>boids.exe`enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;,core::alloc::AllocError&gt; &gt;::map_err(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$&lt;u8&gt; &gt;,core::alloc::AllocError&gt; &gt;, alloc::raw_vec::finish_grow::closure_env$0 (19 samples, 0.01%)</title><rect x="48.4917%" y="1317" width="0.0110%" height="15" fill="rgb(216,139,23)" fg:x="83750" fg:w="19"/><text x="48.7417%" y="1327.50"></text></g><g><title>boids.exe`core::ops::function::impls::impl$3::call_mut(boids::local_n_boid_query::closure_env$0**, tuple$ (22 samples, 0.01%)</title><rect x="48.5293%" y="1397" width="0.0127%" height="15" fill="rgb(207,166,20)" fg:x="83815" fg:w="22"/><text x="48.7793%" y="1407.50"></text></g><g><title>boids.exe`boids::local_n_boid_query::closure$0(boids::local_n_boid_query::closure_env$0*, tuple$ (22 samples, 0.01%)</title><rect x="48.5293%" y="1381" width="0.0127%" height="15" fill="rgb(210,209,22)" fg:x="83815" fg:w="22"/><text x="48.7793%" y="1391.50"></text></g><g><title>boids.exe`core::cmp::PartialEq::ne (22 samples, 0.01%)</title><rect x="48.5293%" y="1365" width="0.0127%" height="15" fill="rgb(232,118,20)" fg:x="83815" fg:w="22"/><text x="48.7793%" y="1375.50"></text></g><g><title>boids.exe`bevy_ecs::entity::impl$0::eq (22 samples, 0.01%)</title><rect x="48.5293%" y="1349" width="0.0127%" height="15" fill="rgb(238,113,42)" fg:x="83815" fg:w="22"/><text x="48.7793%" y="1359.50"></text></g><g><title>boids.exe`core::iter::adapters::filter::impl$3::next(core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter&lt;tuple$ (223 samples, 0.13%)</title><rect x="48.5102%" y="1429" width="0.1291%" height="15" fill="rgb(231,42,5)" fg:x="83782" fg:w="223"/><text x="48.7602%" y="1439.50"></text></g><g><title>boids.exe`core::slice::iter::impl$182::find(core::slice::iter::Iter&lt;tuple$ (223 samples, 0.13%)</title><rect x="48.5102%" y="1413" width="0.1291%" height="15" fill="rgb(243,166,24)" fg:x="83782" fg:w="223"/><text x="48.7602%" y="1423.50"></text></g><g><title>boids.exe`core::slice::iter::impl$182::next(core::slice::iter::Iter&lt;tuple$ (168 samples, 0.10%)</title><rect x="48.5421%" y="1397" width="0.0973%" height="15" fill="rgb(237,226,12)" fg:x="83837" fg:w="168"/><text x="48.7921%" y="1407.50"></text></g><g><title>boids.exe`core::ptr::non_null::NonNull&lt;tuple$&lt;bevy_ecs::entity::Entity,glam::f32::vec2::Vec2,glam::f32::vec2::Vec2&gt; &gt;::add(core::ptr::non_null::NonNull&lt;tuple$ (137 samples, 0.08%)</title><rect x="48.5600%" y="1381" width="0.0793%" height="15" fill="rgb(229,133,24)" fg:x="83868" fg:w="137"/><text x="48.8100%" y="1391.50"></text></g><g><title>`0x7FF89AFEF220 (190 samples, 0.11%)</title><rect x="54.5481%" y="1365" width="0.1100%" height="15" fill="rgb(238,33,43)" fg:x="94210" fg:w="190"/><text x="54.7981%" y="1375.50"></text></g><g><title>`0x7FF89AFEF226 (1,351 samples, 0.78%)</title><rect x="54.6581%" y="1365" width="0.7822%" height="15" fill="rgb(227,59,38)" fg:x="94400" fg:w="1351"/><text x="54.9081%" y="1375.50"></text></g><g><title>`0x7FF89AFEF22A (2,697 samples, 1.56%)</title><rect x="55.4403%" y="1365" width="1.5616%" height="15" fill="rgb(230,97,0)" fg:x="95751" fg:w="2697"/><text x="55.6903%" y="1375.50"></text></g><g><title>`0x7FF89AFEF234 (723 samples, 0.42%)</title><rect x="57.0019%" y="1365" width="0.4186%" height="15" fill="rgb(250,173,50)" fg:x="98448" fg:w="723"/><text x="57.2519%" y="1375.50"></text></g><g><title>`0x7FF89AFEF237 (294 samples, 0.17%)</title><rect x="57.4205%" y="1365" width="0.1702%" height="15" fill="rgb(240,15,50)" fg:x="99171" fg:w="294"/><text x="57.6705%" y="1375.50"></text></g><g><title>`0x7FF89AFEF23A (1,101 samples, 0.64%)</title><rect x="57.5908%" y="1365" width="0.6375%" height="15" fill="rgb(221,93,22)" fg:x="99465" fg:w="1101"/><text x="57.8408%" y="1375.50"></text></g><g><title>`0x7FF89AFEF241 (792 samples, 0.46%)</title><rect x="58.2282%" y="1365" width="0.4586%" height="15" fill="rgb(245,180,53)" fg:x="100566" fg:w="792"/><text x="58.4782%" y="1375.50"></text></g><g><title>`0x7FF89AFEF244 (1,016 samples, 0.59%)</title><rect x="58.6868%" y="1365" width="0.5883%" height="15" fill="rgb(231,88,51)" fg:x="101358" fg:w="1016"/><text x="58.9368%" y="1375.50"></text></g><g><title>`0x7FF89AFEF24A (2,284 samples, 1.32%)</title><rect x="59.2751%" y="1365" width="1.3224%" height="15" fill="rgb(240,58,21)" fg:x="102374" fg:w="2284"/><text x="59.5251%" y="1375.50"></text></g><g><title>`0x7FF89AFEF24F (4,928 samples, 2.85%)</title><rect x="60.5975%" y="1365" width="2.8533%" height="15" fill="rgb(237,21,10)" fg:x="104658" fg:w="4928"/><text x="60.8475%" y="1375.50">`0..</text></g><g><title>`0x7FF89AFEF253 (366 samples, 0.21%)</title><rect x="63.4509%" y="1365" width="0.2119%" height="15" fill="rgb(218,43,11)" fg:x="109586" fg:w="366"/><text x="63.7009%" y="1375.50"></text></g><g><title>`0x7FF89AFEF256 (93 samples, 0.05%)</title><rect x="63.6628%" y="1365" width="0.0538%" height="15" fill="rgb(218,221,29)" fg:x="109952" fg:w="93"/><text x="63.9128%" y="1375.50"></text></g><g><title>`0x7FF89AFEF259 (480 samples, 0.28%)</title><rect x="63.7166%" y="1365" width="0.2779%" height="15" fill="rgb(214,118,42)" fg:x="110045" fg:w="480"/><text x="63.9666%" y="1375.50"></text></g><g><title>`0x7FF89AFEF25C (1,415 samples, 0.82%)</title><rect x="63.9946%" y="1365" width="0.8193%" height="15" fill="rgb(251,200,26)" fg:x="110525" fg:w="1415"/><text x="64.2446%" y="1375.50"></text></g><g><title>`0x7FF89AFEF260 (153 samples, 0.09%)</title><rect x="64.8138%" y="1365" width="0.0886%" height="15" fill="rgb(237,101,39)" fg:x="111940" fg:w="153"/><text x="65.0638%" y="1375.50"></text></g><g><title>`0x7FF89AFEF266 (204 samples, 0.12%)</title><rect x="64.9024%" y="1365" width="0.1181%" height="15" fill="rgb(251,117,11)" fg:x="112093" fg:w="204"/><text x="65.1524%" y="1375.50"></text></g><g><title>`0x7FF89AFEF26B (1,229 samples, 0.71%)</title><rect x="65.0206%" y="1365" width="0.7116%" height="15" fill="rgb(216,223,23)" fg:x="112297" fg:w="1229"/><text x="65.2706%" y="1375.50"></text></g><g><title>`0x7FF89AFEF26E (1,964 samples, 1.14%)</title><rect x="65.7322%" y="1365" width="1.1372%" height="15" fill="rgb(251,54,12)" fg:x="113526" fg:w="1964"/><text x="65.9822%" y="1375.50"></text></g><g><title>`0x7FF89AFEF271 (877 samples, 0.51%)</title><rect x="66.8693%" y="1365" width="0.5078%" height="15" fill="rgb(254,176,54)" fg:x="115490" fg:w="877"/><text x="67.1193%" y="1375.50"></text></g><g><title>`0x7FF89AFEF274 (607 samples, 0.35%)</title><rect x="67.3771%" y="1365" width="0.3515%" height="15" fill="rgb(210,32,8)" fg:x="116367" fg:w="607"/><text x="67.6271%" y="1375.50"></text></g><g><title>`0x7FF89AFEF278 (423 samples, 0.24%)</title><rect x="67.7286%" y="1365" width="0.2449%" height="15" fill="rgb(235,52,38)" fg:x="116974" fg:w="423"/><text x="67.9786%" y="1375.50"></text></g><g><title>`0x7FF89AFEF27D (1,184 samples, 0.69%)</title><rect x="67.9735%" y="1365" width="0.6855%" height="15" fill="rgb(231,4,44)" fg:x="117397" fg:w="1184"/><text x="68.2235%" y="1375.50"></text></g><g><title>`0x7FF89AFEF27F (326 samples, 0.19%)</title><rect x="68.6590%" y="1365" width="0.1888%" height="15" fill="rgb(249,2,32)" fg:x="118581" fg:w="326"/><text x="68.9090%" y="1375.50"></text></g><g><title>`0x7FF89AFEF281 (662 samples, 0.38%)</title><rect x="68.8478%" y="1365" width="0.3833%" height="15" fill="rgb(224,65,26)" fg:x="118907" fg:w="662"/><text x="69.0978%" y="1375.50"></text></g><g><title>`0x7FF89AFEF284 (1,041 samples, 0.60%)</title><rect x="69.2311%" y="1365" width="0.6027%" height="15" fill="rgb(250,73,40)" fg:x="119569" fg:w="1041"/><text x="69.4811%" y="1375.50"></text></g><g><title>`0x7FF89AFEF290 (1,949 samples, 1.13%)</title><rect x="69.8338%" y="1365" width="1.1285%" height="15" fill="rgb(253,177,16)" fg:x="120610" fg:w="1949"/><text x="70.0838%" y="1375.50"></text></g><g><title>`0x7FF89AFEF299 (1,866 samples, 1.08%)</title><rect x="70.9623%" y="1365" width="1.0804%" height="15" fill="rgb(217,32,34)" fg:x="122559" fg:w="1866"/><text x="71.2123%" y="1375.50"></text></g><g><title>`0x7FF89AFEF29E (468 samples, 0.27%)</title><rect x="72.0427%" y="1365" width="0.2710%" height="15" fill="rgb(212,7,10)" fg:x="124425" fg:w="468"/><text x="72.2927%" y="1375.50"></text></g><g><title>`0x7FF89AFEF2A7 (323 samples, 0.19%)</title><rect x="72.3137%" y="1365" width="0.1870%" height="15" fill="rgb(245,89,8)" fg:x="124893" fg:w="323"/><text x="72.5637%" y="1375.50"></text></g><g><title>`0x7FF89AFEF2CF (359 samples, 0.21%)</title><rect x="72.5007%" y="1365" width="0.2079%" height="15" fill="rgb(237,16,53)" fg:x="125216" fg:w="359"/><text x="72.7507%" y="1375.50"></text></g><g><title>`0x7FF89AFEF2D5 (4,346 samples, 2.52%)</title><rect x="72.7086%" y="1365" width="2.5164%" height="15" fill="rgb(250,204,30)" fg:x="125575" fg:w="4346"/><text x="72.9586%" y="1375.50">`0..</text></g><g><title>`0x7FF89AFEF2E0 (855 samples, 0.50%)</title><rect x="75.2336%" y="1365" width="0.4950%" height="15" fill="rgb(208,77,27)" fg:x="129936" fg:w="855"/><text x="75.4836%" y="1375.50"></text></g><g><title>`0x7FF89AFEF2E2 (872 samples, 0.50%)</title><rect x="75.7287%" y="1365" width="0.5049%" height="15" fill="rgb(250,204,28)" fg:x="130791" fg:w="872"/><text x="75.9787%" y="1375.50"></text></g><g><title>`0x7FF89AFEF2E5 (4,007 samples, 2.32%)</title><rect x="76.2336%" y="1365" width="2.3201%" height="15" fill="rgb(244,63,21)" fg:x="131663" fg:w="4007"/><text x="76.4836%" y="1375.50">`..</text></g><g><title>`0x7FF89AFEF2E8 (1,065 samples, 0.62%)</title><rect x="78.5536%" y="1365" width="0.6166%" height="15" fill="rgb(236,85,44)" fg:x="135670" fg:w="1065"/><text x="78.8036%" y="1375.50"></text></g><g><title>`0x7FF89AFEF2F1 (4,521 samples, 2.62%)</title><rect x="79.1743%" y="1365" width="2.6177%" height="15" fill="rgb(215,98,4)" fg:x="136742" fg:w="4521"/><text x="79.4243%" y="1375.50">`0..</text></g><g><title>`0x7FF89AFEF2F4 (2,162 samples, 1.25%)</title><rect x="81.7920%" y="1365" width="1.2518%" height="15" fill="rgb(235,38,11)" fg:x="141263" fg:w="2162"/><text x="82.0420%" y="1375.50"></text></g><g><title>`0x7FF89AFEF2F8 (3,816 samples, 2.21%)</title><rect x="83.0438%" y="1365" width="2.2095%" height="15" fill="rgb(254,186,25)" fg:x="143425" fg:w="3816"/><text x="83.2938%" y="1375.50">`..</text></g><g><title>`0x7FF89AFEF2FD (157 samples, 0.09%)</title><rect x="85.2533%" y="1365" width="0.0909%" height="15" fill="rgb(225,55,31)" fg:x="147241" fg:w="157"/><text x="85.5033%" y="1375.50"></text></g><g><title>`0x7FF89AFEF302 (10,798 samples, 6.25%)</title><rect x="85.3442%" y="1365" width="6.2521%" height="15" fill="rgb(211,15,21)" fg:x="147398" fg:w="10798"/><text x="85.5942%" y="1375.50">`0x7FF89..</text></g><g><title>`0x7FF89AFEF307 (2,234 samples, 1.29%)</title><rect x="91.5963%" y="1365" width="1.2935%" height="15" fill="rgb(215,187,41)" fg:x="158196" fg:w="2234"/><text x="91.8463%" y="1375.50"></text></g><g><title>`0x7FF89AFEF313 (64 samples, 0.04%)</title><rect x="92.8898%" y="1365" width="0.0371%" height="15" fill="rgb(248,69,32)" fg:x="160430" fg:w="64"/><text x="93.1398%" y="1375.50"></text></g><g><title>`0x7FF89AFEF319 (19 samples, 0.01%)</title><rect x="92.9269%" y="1365" width="0.0110%" height="15" fill="rgb(252,102,52)" fg:x="160494" fg:w="19"/><text x="93.1769%" y="1375.50"></text></g><g><title>`0x7FF89AFEF323 (67 samples, 0.04%)</title><rect x="92.9379%" y="1365" width="0.0388%" height="15" fill="rgb(253,140,32)" fg:x="160513" fg:w="67"/><text x="93.1879%" y="1375.50"></text></g><g><title>`0x7FF89AFEF325 (39 samples, 0.02%)</title><rect x="92.9767%" y="1365" width="0.0226%" height="15" fill="rgb(216,56,42)" fg:x="160580" fg:w="39"/><text x="93.2267%" y="1375.50"></text></g><g><title>`0x7FF89AFEF32D (30 samples, 0.02%)</title><rect x="92.9992%" y="1365" width="0.0174%" height="15" fill="rgb(216,184,14)" fg:x="160619" fg:w="30"/><text x="93.2492%" y="1375.50"></text></g><g><title>`0x7FF89AFEF337 (42 samples, 0.02%)</title><rect x="93.0236%" y="1365" width="0.0243%" height="15" fill="rgb(237,187,27)" fg:x="160661" fg:w="42"/><text x="93.2736%" y="1375.50"></text></g><g><title>`0x7FF89AFEF345 (32 samples, 0.02%)</title><rect x="93.0502%" y="1365" width="0.0185%" height="15" fill="rgb(219,65,3)" fg:x="160707" fg:w="32"/><text x="93.3002%" y="1375.50"></text></g><g><title>`0x7FF89AFEF350 (267 samples, 0.15%)</title><rect x="93.0751%" y="1365" width="0.1546%" height="15" fill="rgb(245,83,25)" fg:x="160750" fg:w="267"/><text x="93.3251%" y="1375.50"></text></g><g><title>`0x7FF89AFEF35F (211 samples, 0.12%)</title><rect x="93.2320%" y="1365" width="0.1222%" height="15" fill="rgb(214,205,45)" fg:x="161021" fg:w="211"/><text x="93.4820%" y="1375.50"></text></g><g><title>`0x7FF89AFEF392 (19 samples, 0.01%)</title><rect x="93.3542%" y="1365" width="0.0110%" height="15" fill="rgb(241,20,18)" fg:x="161232" fg:w="19"/><text x="93.6042%" y="1375.50"></text></g><g><title>`0x7FF89AFEF396 (655 samples, 0.38%)</title><rect x="93.3652%" y="1365" width="0.3792%" height="15" fill="rgb(232,163,23)" fg:x="161251" fg:w="655"/><text x="93.6152%" y="1375.50"></text></g><g><title>`0x7FF89AFEF39A (630 samples, 0.36%)</title><rect x="93.7444%" y="1365" width="0.3648%" height="15" fill="rgb(214,5,46)" fg:x="161906" fg:w="630"/><text x="93.9944%" y="1375.50"></text></g><g><title>`0x7FF89AFEF39E (2,091 samples, 1.21%)</title><rect x="94.1092%" y="1365" width="1.2107%" height="15" fill="rgb(229,78,17)" fg:x="162536" fg:w="2091"/><text x="94.3592%" y="1375.50"></text></g><g><title>`0x7FF89AFEF3A2 (775 samples, 0.45%)</title><rect x="95.3199%" y="1365" width="0.4487%" height="15" fill="rgb(248,89,10)" fg:x="164627" fg:w="775"/><text x="95.5699%" y="1375.50"></text></g><g><title>`0x7FF89AFEF3A6 (1,626 samples, 0.94%)</title><rect x="95.7686%" y="1365" width="0.9415%" height="15" fill="rgb(248,54,15)" fg:x="165402" fg:w="1626"/><text x="96.0186%" y="1375.50"></text></g><g><title>`0x7FF89AFEF3AA (388 samples, 0.22%)</title><rect x="96.7101%" y="1365" width="0.2247%" height="15" fill="rgb(223,116,6)" fg:x="167028" fg:w="388"/><text x="96.9601%" y="1375.50"></text></g><g><title>`0x7FF89AFEF3B0 (298 samples, 0.17%)</title><rect x="96.9347%" y="1365" width="0.1725%" height="15" fill="rgb(205,125,38)" fg:x="167416" fg:w="298"/><text x="97.1847%" y="1375.50"></text></g><g><title>`0x7FF89AFEF3B5 (217 samples, 0.13%)</title><rect x="97.1073%" y="1365" width="0.1256%" height="15" fill="rgb(251,78,38)" fg:x="167714" fg:w="217"/><text x="97.3573%" y="1375.50"></text></g><g><title>`0x7FF89AFEF3BD (28 samples, 0.02%)</title><rect x="97.2329%" y="1365" width="0.0162%" height="15" fill="rgb(253,78,28)" fg:x="167931" fg:w="28"/><text x="97.4829%" y="1375.50"></text></g><g><title>`0x7FF89AFEF3C1 (364 samples, 0.21%)</title><rect x="97.2491%" y="1365" width="0.2108%" height="15" fill="rgb(209,120,3)" fg:x="167959" fg:w="364"/><text x="97.4991%" y="1375.50"></text></g><g><title>`0x7FF89AFEF3CA (307 samples, 0.18%)</title><rect x="97.4599%" y="1365" width="0.1778%" height="15" fill="rgb(238,229,9)" fg:x="168323" fg:w="307"/><text x="97.7099%" y="1375.50"></text></g><g><title>`0x7FF89AFEF3CE (729 samples, 0.42%)</title><rect x="97.6377%" y="1365" width="0.4221%" height="15" fill="rgb(253,159,18)" fg:x="168630" fg:w="729"/><text x="97.8877%" y="1375.50"></text></g><g><title>`0x7FF89AFEF466 (137 samples, 0.08%)</title><rect x="98.0598%" y="1365" width="0.0793%" height="15" fill="rgb(244,42,34)" fg:x="169359" fg:w="137"/><text x="98.3098%" y="1375.50"></text></g><g><title>`0x7FF89AFEF46A (676 samples, 0.39%)</title><rect x="98.1391%" y="1365" width="0.3914%" height="15" fill="rgb(224,8,7)" fg:x="169496" fg:w="676"/><text x="98.3891%" y="1375.50"></text></g><g><title>boids.exe`alloc::vec::spec_extend::impl$0::spec_extend(alloc::vec::Vec&lt;core::cmp::Reverse&lt;boids::LocalBoid&gt;,alloc::alloc::Global&gt;*, core::iter::adapters::map::Map&lt;core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter&lt;tuple$ (106,314 samples, 61.56%)</title><rect x="37.6712%" y="1477" width="61.5564%" height="15" fill="rgb(210,201,45)" fg:x="65062" fg:w="106314"/><text x="37.9212%" y="1487.50">boids.exe`alloc::vec::spec_extend::impl$0::spec_extend(alloc::vec::Vec&lt;core::cmp::Reverse&lt;boids::Local..</text></g><g><title>boids.exe`alloc::vec::Vec&lt;core::cmp::Reverse&lt;boids::LocalBoid&gt;,alloc::alloc::Global&gt;::extend_desugared(core::iter::adapters::map::Map&lt;core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter&lt;tuple$ (106,314 samples, 61.56%)</title><rect x="37.6712%" y="1461" width="61.5564%" height="15" fill="rgb(252,185,21)" fg:x="65062" fg:w="106314"/><text x="37.9212%" y="1471.50">boids.exe`alloc::vec::Vec&lt;core::cmp::Reverse&lt;boids::LocalBoid&gt;,alloc::alloc::Global&gt;::extend_desugared..</text></g><g><title>boids.exe`core::iter::adapters::map::impl$2::next(core::iter::adapters::map::Map&lt;core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter&lt;tuple$ (87,594 samples, 50.72%)</title><rect x="48.5102%" y="1445" width="50.7174%" height="15" fill="rgb(223,131,1)" fg:x="83782" fg:w="87594"/><text x="48.7602%" y="1455.50">boids.exe`core::iter::adapters::map::impl$2::next(core::iter::adapters::map::Map&lt;co..</text></g><g><title>boids.exe`enum2$&lt;core::option::Option&lt;ref$&lt;tuple$&lt;bevy_ecs::entity::Entity,glam::f32::vec2::Vec2,glam::f32::vec2::Vec2&gt; &gt; &gt; &gt;::map(enum2$&lt;core::option::Option&lt;ref$&lt;tuple$ (87,371 samples, 50.59%)</title><rect x="48.6393%" y="1429" width="50.5883%" height="15" fill="rgb(245,141,16)" fg:x="84005" fg:w="87371"/><text x="48.8893%" y="1439.50">boids.exe`enum2$&lt;core::option::Option&lt;ref$&lt;tuple$&lt;bevy_ecs::entity::Entity,glam::f3..</text></g><g><title>boids.exe`core::ops::function::impls::impl$4::call_once(boids::local_n_boid_query::closure_env$1*, tuple$ (87,371 samples, 50.59%)</title><rect x="48.6393%" y="1413" width="50.5883%" height="15" fill="rgb(229,55,45)" fg:x="84005" fg:w="87371"/><text x="48.8893%" y="1423.50">boids.exe`core::ops::function::impls::impl$4::call_once(boids::local_n_boid_query::..</text></g><g><title>boids.exe`boids::local_n_boid_query::closure$1(boids::local_n_boid_query::closure_env$1*, tuple$ (87,371 samples, 50.59%)</title><rect x="48.6393%" y="1397" width="50.5883%" height="15" fill="rgb(208,92,15)" fg:x="84005" fg:w="87371"/><text x="48.8893%" y="1407.50">boids.exe`boids::local_n_boid_query::closure$1(boids::local_n_boid_query::closure_e..</text></g><g><title>boids.exe`boids::toroidal_distance (82,734 samples, 47.90%)</title><rect x="51.3242%" y="1381" width="47.9034%" height="15" fill="rgb(234,185,47)" fg:x="88642" fg:w="82734"/><text x="51.5742%" y="1391.50">boids.exe`boids::toroidal_distance</text></g><g><title>boids.exe`fmodf (1,204 samples, 0.70%)</title><rect x="98.5305%" y="1365" width="0.6971%" height="15" fill="rgb(253,104,50)" fg:x="170172" fg:w="1204"/><text x="98.7805%" y="1375.50"></text></g><g><title>boids.exe`core::mem::manually_drop::ManuallyDrop&lt;alloc::vec::Vec&lt;core::cmp::Reverse&lt;boids::LocalBoid&gt;,alloc::alloc::Global&gt; &gt;::new(alloc::vec::Vec&lt;core::cmp::Reverse (106,371 samples, 61.59%)</title><rect x="37.6492%" y="1525" width="61.5894%" height="15" fill="rgb(205,70,7)" fg:x="65024" fg:w="106371"/><text x="37.8992%" y="1535.50">boids.exe`core::mem::manually_drop::ManuallyDrop&lt;alloc::vec::Vec&lt;core::cmp::Reverse&lt;boids::LocalBoid&gt;,..</text></g><g><title>boids.exe`alloc::vec::spec_from_iter::impl$0::from_iter&lt;core::cmp::Reverse&lt;boids::LocalBoid&gt;,core::iter::adapters::map::Map&lt;core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter&lt;tuple$&lt;bevy_ecs::entity::Entity,glam::f32::vec2::Vec2,glam::f32::vec2::Vec2&gt; &gt;,boids::local_n_boid_query::closure_env$0&gt;,boids::local_n_boid_query::closure_env$1&gt; &gt;(core::iter::adapters::map::Map&lt;core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter&lt;tuple$ (106,365 samples, 61.59%)</title><rect x="37.6527%" y="1509" width="61.5859%" height="15" fill="rgb(240,178,43)" fg:x="65030" fg:w="106365"/><text x="37.9027%" y="1519.50">boids.exe`alloc::vec::spec_from_iter::impl$0::from_iter&lt;core::cmp::Reverse&lt;boids::LocalBoid&gt;,core::ite..</text></g><g><title>boids.exe`alloc::vec::spec_from_iter_nested::impl$0::from_iter(core::iter::adapters::map::Map&lt;core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter&lt;tuple$ (106,360 samples, 61.58%)</title><rect x="37.6556%" y="1493" width="61.5830%" height="15" fill="rgb(214,112,2)" fg:x="65035" fg:w="106360"/><text x="37.9056%" y="1503.50">boids.exe`alloc::vec::spec_from_iter_nested::impl$0::from_iter(core::iter::adapters::map::Map&lt;core::it..</text></g><g><title>boids.exe`core::iter::adapters::map::impl$2::next(core::iter::adapters::map::Map&lt;core::iter::adapters::filter::Filter&lt;core::slice::iter::Iter&lt;tuple$ (19 samples, 0.01%)</title><rect x="99.2276%" y="1477" width="0.0110%" height="15" fill="rgb(206,46,17)" fg:x="171376" fg:w="19"/><text x="99.4776%" y="1487.50"></text></g><g><title>boids.exe`enum2$&lt;core::option::Option&lt;ref$&lt;tuple$&lt;bevy_ecs::entity::Entity,glam::f32::vec2::Vec2,glam::f32::vec2::Vec2&gt; &gt; &gt; &gt;::map(enum2$&lt;core::option::Option&lt;ref$&lt;tuple$ (19 samples, 0.01%)</title><rect x="99.2276%" y="1461" width="0.0110%" height="15" fill="rgb(225,220,16)" fg:x="171376" fg:w="19"/><text x="99.4776%" y="1471.50"></text></g><g><title>boids.exe`core::ops::function::impls::impl$4::call_once(boids::local_n_boid_query::closure_env$1*, tuple$ (19 samples, 0.01%)</title><rect x="99.2276%" y="1445" width="0.0110%" height="15" fill="rgb(238,65,40)" fg:x="171376" fg:w="19"/><text x="99.4776%" y="1455.50"></text></g><g><title>boids.exe`boids::local_n_boid_query::closure$1(boids::local_n_boid_query::closure_env$1*, tuple$ (19 samples, 0.01%)</title><rect x="99.2276%" y="1429" width="0.0110%" height="15" fill="rgb(230,151,21)" fg:x="171376" fg:w="19"/><text x="99.4776%" y="1439.50"></text></g><g><title>boids.exe`boids::toroidal_distance (19 samples, 0.01%)</title><rect x="99.2276%" y="1413" width="0.0110%" height="15" fill="rgb(218,58,49)" fg:x="171376" fg:w="19"/><text x="99.4776%" y="1423.50"></text></g><g><title>boids.exe`alloc::vec::impl$16::into_iter(alloc::vec::Vec&lt;core::cmp::Reverse (106,380 samples, 61.59%)</title><rect x="37.6446%" y="1541" width="61.5946%" height="15" fill="rgb(219,179,14)" fg:x="65016" fg:w="106380"/><text x="37.8946%" y="1551.50">boids.exe`alloc::vec::impl$16::into_iter(alloc::vec::Vec&lt;core::cmp::Reverse</text></g><g><title>`0x7FF89D8E96D4 (23 samples, 0.01%)</title><rect x="99.2467%" y="1397" width="0.0133%" height="15" fill="rgb(223,72,1)" fg:x="171409" fg:w="23"/><text x="99.4967%" y="1407.50"></text></g><g><title>`0x7FF89D8F3E7F (21 samples, 0.01%)</title><rect x="99.2479%" y="1381" width="0.0122%" height="15" fill="rgb(238,126,10)" fg:x="171411" fg:w="21"/><text x="99.4979%" y="1391.50"></text></g><g><title>`0x7FF89D8F4C30 (54 samples, 0.03%)</title><rect x="99.3075%" y="1333" width="0.0313%" height="15" fill="rgb(224,206,38)" fg:x="171514" fg:w="54"/><text x="99.5575%" y="1343.50"></text></g><g><title>`0x7FF89D8F4880 (121 samples, 0.07%)</title><rect x="99.2971%" y="1365" width="0.0701%" height="15" fill="rgb(212,201,54)" fg:x="171496" fg:w="121"/><text x="99.5471%" y="1375.50"></text></g><g><title>`0x7FF89D8F474A (118 samples, 0.07%)</title><rect x="99.2988%" y="1349" width="0.0683%" height="15" fill="rgb(218,154,48)" fg:x="171499" fg:w="118"/><text x="99.5488%" y="1359.50"></text></g><g><title>`0x7FF89D8F4920 (22 samples, 0.01%)</title><rect x="99.3787%" y="1365" width="0.0127%" height="15" fill="rgb(232,93,24)" fg:x="171637" fg:w="22"/><text x="99.6287%" y="1375.50"></text></g><g><title>`0x7FF89D8E9C38 (196 samples, 0.11%)</title><rect x="99.2861%" y="1397" width="0.1135%" height="15" fill="rgb(245,30,21)" fg:x="171477" fg:w="196"/><text x="99.5361%" y="1407.50"></text></g><g><title>`0x7FF89D8F5049 (189 samples, 0.11%)</title><rect x="99.2901%" y="1381" width="0.1094%" height="15" fill="rgb(242,148,29)" fg:x="171484" fg:w="189"/><text x="99.5401%" y="1391.50"></text></g><g><title>`0x7FF89D8EC354 (285 samples, 0.17%)</title><rect x="99.2432%" y="1413" width="0.1650%" height="15" fill="rgb(244,153,54)" fg:x="171403" fg:w="285"/><text x="99.4932%" y="1423.50"></text></g><g><title>`0x7FF89D8EB021 (290 samples, 0.17%)</title><rect x="99.2415%" y="1429" width="0.1679%" height="15" fill="rgb(252,87,22)" fg:x="171400" fg:w="290"/><text x="99.4915%" y="1439.50"></text></g><g><title>boids.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (296 samples, 0.17%)</title><rect x="99.2392%" y="1461" width="0.1714%" height="15" fill="rgb(210,51,29)" fg:x="171396" fg:w="296"/><text x="99.4892%" y="1471.50"></text></g><g><title>boids.exe`alloc::alloc::dealloc (296 samples, 0.17%)</title><rect x="99.2392%" y="1445" width="0.1714%" height="15" fill="rgb(242,136,47)" fg:x="171396" fg:w="296"/><text x="99.4892%" y="1455.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(alloc::collections::binary_heap::BinaryHeap&lt;core::cmp::Reverse (297 samples, 0.17%)</title><rect x="99.2392%" y="1541" width="0.1720%" height="15" fill="rgb(238,68,4)" fg:x="171396" fg:w="297"/><text x="99.4892%" y="1551.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;core::cmp::Reverse (297 samples, 0.17%)</title><rect x="99.2392%" y="1525" width="0.1720%" height="15" fill="rgb(242,161,30)" fg:x="171396" fg:w="297"/><text x="99.4892%" y="1535.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec&lt;core::cmp::Reverse (297 samples, 0.17%)</title><rect x="99.2392%" y="1509" width="0.1720%" height="15" fill="rgb(218,58,44)" fg:x="171396" fg:w="297"/><text x="99.4892%" y="1519.50"></text></g><g><title>boids.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec&lt;core::cmp::Reverse (297 samples, 0.17%)</title><rect x="99.2392%" y="1493" width="0.1720%" height="15" fill="rgb(252,125,32)" fg:x="171396" fg:w="297"/><text x="99.4892%" y="1503.50"></text></g><g><title>boids.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (297 samples, 0.17%)</title><rect x="99.2392%" y="1477" width="0.1720%" height="15" fill="rgb(219,178,0)" fg:x="171396" fg:w="297"/><text x="99.4892%" y="1487.50"></text></g><g><title>boids.exe`boids::local_n_boid_query(bevy_ecs::entity::Entity, glam::f32::vec2::Vec2, ref$&lt;slice2$&lt;tuple$ (148,374 samples, 85.91%)</title><rect x="13.5041%" y="1557" width="85.9093%" height="15" fill="rgb(213,152,7)" fg:x="23323" fg:w="148374"/><text x="13.7541%" y="1567.50">boids.exe`boids::local_n_boid_query(bevy_ecs::entity::Entity, glam::f32::vec2::Vec2, ref$&lt;slice2$&lt;tuple$</text></g><g><title>`0x7FF89D95DA6F (34 samples, 0.02%)</title><rect x="99.4181%" y="1461" width="0.0197%" height="15" fill="rgb(249,109,34)" fg:x="171705" fg:w="34"/><text x="99.6681%" y="1471.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(alloc::vec::Vec (48 samples, 0.03%)</title><rect x="99.4135%" y="1557" width="0.0278%" height="15" fill="rgb(232,96,21)" fg:x="171697" fg:w="48"/><text x="99.6635%" y="1567.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (48 samples, 0.03%)</title><rect x="99.4135%" y="1541" width="0.0278%" height="15" fill="rgb(228,27,39)" fg:x="171697" fg:w="48"/><text x="99.6635%" y="1551.50"></text></g><g><title>boids.exe`alloc::raw_vec::impl$3::drop(alloc::raw_vec::RawVec (48 samples, 0.03%)</title><rect x="99.4135%" y="1525" width="0.0278%" height="15" fill="rgb(211,182,52)" fg:x="171697" fg:w="48"/><text x="99.6635%" y="1535.50"></text></g><g><title>boids.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (48 samples, 0.03%)</title><rect x="99.4135%" y="1509" width="0.0278%" height="15" fill="rgb(234,178,38)" fg:x="171697" fg:w="48"/><text x="99.6635%" y="1519.50"></text></g><g><title>boids.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (48 samples, 0.03%)</title><rect x="99.4135%" y="1493" width="0.0278%" height="15" fill="rgb(221,111,3)" fg:x="171697" fg:w="48"/><text x="99.6635%" y="1503.50"></text></g><g><title>`0x7FF89D8EB021 (47 samples, 0.03%)</title><rect x="99.4140%" y="1477" width="0.0272%" height="15" fill="rgb(228,175,21)" fg:x="171698" fg:w="47"/><text x="99.6640%" y="1487.50"></text></g><g><title>boids.exe`core::ops::arith::impl$13::add (21 samples, 0.01%)</title><rect x="99.4453%" y="1541" width="0.0122%" height="15" fill="rgb(228,174,43)" fg:x="171752" fg:w="21"/><text x="99.6953%" y="1551.50"></text></g><g><title>boids.exe`bevy_ecs::system::schedule_system::impl$1::run_unsafe&lt;bevy_ecs::system::function_system::FunctionSystem&lt;void (*)(bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,ref_mut$&lt;bevy_transform::components::transform::Transform&gt;,ref_mut$&lt;boids::Boid&gt; &gt;,tuple$&lt;&gt; &gt;,bevy_ecs::change_detection::Res&lt;bevy_time::time::Time&lt;tuple$&lt;&gt; &gt; &gt;,bevy_ecs::change_detection::Res&lt;boids::BoidsParameters&gt;,bevy_ecs::system::query::Query&lt;ref$&lt;bevy_window::window::Window&gt;,bevy_ecs::query::filter::With&lt;bevy_window::window::PrimaryWindow&gt; &gt;),void (*)(bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,ref_mut$&lt;bevy_transform::components::transform::Transform&gt;,ref_mut$&lt;boids::Boid&gt; &gt;,tuple$&lt;&gt; &gt;,bevy_ecs::change_detection::Res&lt;bevy_time::time::Time&lt;tuple$&lt;&gt; &gt; &gt;,bevy_ecs::change_detection::Res&lt;boids::BoidsParameters&gt;,bevy_ecs::system::query::Query&lt;ref$&lt;bevy_window::window::Window&gt;,bevy_ecs::query::filter::With&lt;bevy_window::window::PrimaryWindow&gt; &gt;)&gt; &gt;(bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;bevy_ecs::system::function_system::FunctionSystem&lt;void (*)(bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,ref_mut$&lt;bevy_transform::components::transform::Transform&gt;,ref_mut$&lt;boids::Boid&gt; &gt;,tuple$&lt;&gt; &gt;,bevy_ecs::change_detection::Res&lt;bevy_time::time::Time&lt;tuple$&lt;&gt; &gt; &gt;,bevy_ecs::change_detection::Res&lt;boids::BoidsParameters&gt;,bevy_ecs::system::query::Query&lt;ref$&lt;bevy_window::window::Window&gt;,bevy_ecs::query::filter::With&lt;bevy_window::window::PrimaryWindow&gt; &gt;),void (*)(bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,ref_mut$&lt;bevy_transform::components::transform::Transform&gt;,ref_mut$&lt;boids::Boid&gt; &gt;,tuple$&lt;&gt; &gt;,bevy_ecs::change_detection::Res&lt;bevy_time::time::Time&lt;tuple$&lt;&gt; &gt; &gt;,bevy_ecs::change_detection::Res&lt;boids::BoidsParameters&gt;,bevy_ecs::system::query::Query&lt;ref$&lt;bevy_window::window::Window&gt;,bevy_ecs::query::filter::With&lt;bevy_window::window::PrimaryWindow&gt; &gt;)&gt; &gt;*, tuple$ (148,867 samples, 86.19%)</title><rect x="13.2656%" y="1637" width="86.1948%" height="15" fill="rgb(211,191,0)" fg:x="22911" fg:w="148867"/><text x="13.5156%" y="1647.50">boids.exe`bevy_ecs::system::schedule_system::impl$1::run_unsafe&lt;bevy_ecs::system::function_system::FunctionSystem&lt;void (*)(bevy_ecs::system::que..</text></g><g><title>boids.exe`bevy_ecs::system::function_system::impl$7::run_unsafe(bevy_ecs::system::function_system::FunctionSystem&lt;void (*)(bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,ref_mut$&lt;bevy_transform::components::transform::Transform&gt;,ref_mut$&lt;boids::Boid&gt; &gt;,tuple$&lt;&gt; &gt;,bevy_ecs::change_detection::Res&lt;bevy_time::time::Time&lt;tuple$&lt;&gt; &gt; &gt;,bevy_ecs::change_detection::Res&lt;boids::BoidsParameters&gt;,bevy_ecs::system::query::Query&lt;ref$&lt;bevy_window::window::Window&gt;,bevy_ecs::query::filter::With&lt;bevy_window::window::PrimaryWindow&gt; &gt;),void (*)(bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,ref_mut$&lt;bevy_transform::components::transform::Transform&gt;,ref_mut$&lt;boids::Boid&gt; &gt;,tuple$&lt;&gt; &gt;,bevy_ecs::change_detection::Res&lt;bevy_time::time::Time&lt;tuple$&lt;&gt; &gt; &gt;,bevy_ecs::change_detection::Res&lt;boids::BoidsParameters&gt;,bevy_ecs::system::query::Query&lt;ref$&lt;bevy_window::window::Window&gt;,bevy_ecs::query::filter::With&lt;bevy_window::window::PrimaryWindow&gt; &gt;)&gt;*, tuple$ (148,867 samples, 86.19%)</title><rect x="13.2656%" y="1621" width="86.1948%" height="15" fill="rgb(253,117,3)" fg:x="22911" fg:w="148867"/><text x="13.5156%" y="1631.50">boids.exe`bevy_ecs::system::function_system::impl$7::run_unsafe(bevy_ecs::system::function_system::FunctionSystem&lt;void (*)(bevy_ecs::system::que..</text></g><g><title>boids.exe`core::ops::function::impls::impl$3::call_mut&lt;tuple$&lt;bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,ref_mut$&lt;bevy_transform::components::transform::Transform&gt;,ref_mut$&lt;boids::Boid&gt; &gt;,tuple$&lt;&gt; &gt;,bevy_ecs::change_detection::Res&lt;bevy_time::time::Time&lt;tuple$&lt;&gt; &gt; &gt;,bevy_ecs::change_detection::Res&lt;boids::BoidsParameters&gt;,bevy_ecs::system::query::Query&lt;ref$&lt;bevy_window::window::Window&gt;,bevy_ecs::query::filter::With&lt;bevy_window::window::PrimaryWindow&gt; &gt; &gt;,void (*)(bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,ref_mut$&lt;bevy_transform::components::transform::Transform&gt;,ref_mut$&lt;boids::Boid&gt; &gt;,tuple$&lt;&gt; &gt;,bevy_ecs::change_detection::Res&lt;bevy_time::time::Time&lt;tuple$&lt;&gt; &gt; &gt;,bevy_ecs::change_detection::Res&lt;boids::BoidsParameters&gt;,bevy_ecs::system::query::Query&lt;ref$&lt;bevy_window::window::Window&gt;,bevy_ecs::query::filter::With&lt;bevy_window::window::PrimaryWindow&gt; &gt;)&gt;(void (***)(bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,ref_mut$&lt;bevy_transform::components::transform::Transform&gt;,ref_mut$&lt;boids::Boid&gt; &gt;,tuple$&lt;&gt; &gt;, bevy_ecs::change_detection::Res&lt;bevy_time::time::Time&lt;tuple$&lt;&gt; &gt; &gt;, bevy_ecs::change_detection::Res&lt;boids::BoidsParameters&gt;, bevy_ecs::system::query::Query&lt;ref$&lt;bevy_window::window::Window&gt;,bevy_ecs::query::filter::With&lt;bevy_window::window::PrimaryWindow&gt; &gt;), bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,ref_mut$&lt;bevy_transform::components::transform::Transform&gt;,ref_mut$&lt;boids::Boid&gt; &gt;,tuple$&lt;&gt; &gt;, bevy_ecs::change_detection::Res&lt;bevy_time::time::Time&lt;tuple$&lt;&gt; &gt; &gt;, bevy_ecs::change_detection::Res&lt;boids::BoidsParameters&gt;, bevy_ecs::system::query::Query&lt;ref$&lt;bevy_window::window::Window&gt;,bevy_ecs::query::filter::With (148,867 samples, 86.19%)</title><rect x="13.2656%" y="1605" width="86.1948%" height="15" fill="rgb(241,127,19)" fg:x="22911" fg:w="148867"/><text x="13.5156%" y="1615.50">boids.exe`core::ops::function::impls::impl$3::call_mut&lt;tuple$&lt;bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,ref_mut$&lt;bevy_trans..</text></g><g><title>boids.exe`core::ops::function::FnMut::call_mut(void (**)(bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,ref_mut$&lt;bevy_transform::components::transform::Transform&gt;,ref_mut$&lt;boids::Boid&gt; &gt;,tuple$&lt;&gt; &gt;, bevy_ecs::change_detection::Res&lt;bevy_time::time::Time&lt;tuple$&lt;&gt; &gt; &gt;, bevy_ecs::change_detection::Res&lt;boids::BoidsParameters&gt;, bevy_ecs::system::query::Query&lt;ref$&lt;bevy_window::window::Window&gt;,bevy_ecs::query::filter::With&lt;bevy_window::window::PrimaryWindow&gt; &gt;), bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,ref_mut$&lt;bevy_transform::components::transform::Transform&gt;,ref_mut$&lt;boids::Boid&gt; &gt;,tuple$&lt;&gt; &gt;, bevy_ecs::change_detection::Res&lt;bevy_time::time::Time&lt;tuple$&lt;&gt; &gt; &gt;, bevy_ecs::change_detection::Res&lt;boids::BoidsParameters&gt;, bevy_ecs::system::query::Query&lt;ref$&lt;bevy_window::window::Window&gt;,bevy_ecs::query::filter::With (148,866 samples, 86.19%)</title><rect x="13.2662%" y="1589" width="86.1942%" height="15" fill="rgb(218,103,12)" fg:x="22912" fg:w="148866"/><text x="13.5162%" y="1599.50">boids.exe`core::ops::function::FnMut::call_mut(void (**)(bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,ref_mut$&lt;bevy_transform:..</text></g><g><title>boids.exe`boids::update_boids(bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,ref_mut$&lt;bevy_transform::components::transform::Transform&gt;,ref_mut$&lt;boids::Boid&gt; &gt;,tuple$&lt;&gt; &gt;, bevy_ecs::change_detection::Res&lt;bevy_time::time::Time&lt;tuple$&lt;&gt; &gt; &gt;, bevy_ecs::change_detection::Res&lt;boids::BoidsParameters&gt;, bevy_ecs::system::query::Query&lt;ref$&lt;bevy_window::window::Window&gt;,bevy_ecs::query::filter::With (148,866 samples, 86.19%)</title><rect x="13.2662%" y="1573" width="86.1942%" height="15" fill="rgb(236,214,43)" fg:x="22912" fg:w="148866"/><text x="13.5162%" y="1583.50">boids.exe`boids::update_boids(bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,ref_mut$&lt;bevy_transform::components::transform::Tra..</text></g><g><title>boids.exe`glam::f32::vec2::impl$34::add (26 samples, 0.02%)</title><rect x="99.4453%" y="1557" width="0.0151%" height="15" fill="rgb(244,144,19)" fg:x="171752" fg:w="26"/><text x="99.6953%" y="1567.50"></text></g><g><title>boids.exe`bevy_ecs::change_detection::impl$38::deref_mut(bevy_ecs::change_detection::ResMut (19 samples, 0.01%)</title><rect x="99.4731%" y="1589" width="0.0110%" height="15" fill="rgb(246,188,10)" fg:x="171800" fg:w="19"/><text x="99.7231%" y="1599.50"></text></g><g><title>boids.exe`hashbrown::set::HashSet&lt;bevy_ecs::entity::Entity,bevy_ecs::entity::hash::EntityHash,hashbrown::raw::alloc::inner::Global&gt;::remove (19 samples, 0.01%)</title><rect x="99.4731%" y="1573" width="0.0110%" height="15" fill="rgb(212,193,33)" fg:x="171800" fg:w="19"/><text x="99.7231%" y="1583.50"></text></g><g><title>boids.exe`hashbrown::map::HashMap&lt;bevy_ecs::entity::Entity,tuple$&lt;&gt;,bevy_ecs::entity::hash::EntityHash,hashbrown::raw::alloc::inner::Global&gt;::remove (19 samples, 0.01%)</title><rect x="99.4731%" y="1557" width="0.0110%" height="15" fill="rgb(241,51,29)" fg:x="171800" fg:w="19"/><text x="99.7231%" y="1567.50"></text></g><g><title>boids.exe`hashbrown::map::HashMap&lt;bevy_ecs::entity::Entity,tuple$&lt;&gt;,bevy_ecs::entity::hash::EntityHash,hashbrown::raw::alloc::inner::Global&gt;::remove_entry (19 samples, 0.01%)</title><rect x="99.4731%" y="1541" width="0.0110%" height="15" fill="rgb(211,58,19)" fg:x="171800" fg:w="19"/><text x="99.7231%" y="1551.50"></text></g><g><title>boids.exe`hashbrown::map::make_hash (19 samples, 0.01%)</title><rect x="99.4731%" y="1525" width="0.0110%" height="15" fill="rgb(229,111,26)" fg:x="171800" fg:w="19"/><text x="99.7231%" y="1535.50"></text></g><g><title>boids.exe`bevy_ecs::entity::impl$4::hash (19 samples, 0.01%)</title><rect x="99.4731%" y="1509" width="0.0110%" height="15" fill="rgb(213,115,40)" fg:x="171800" fg:w="19"/><text x="99.7231%" y="1519.50"></text></g><g><title>boids.exe`core::hash::impls::impl$12::hash (19 samples, 0.01%)</title><rect x="99.4731%" y="1493" width="0.0110%" height="15" fill="rgb(209,56,44)" fg:x="171800" fg:w="19"/><text x="99.7231%" y="1503.50"></text></g><g><title>boids.exe`bevy_ecs::entity::hash::impl$1::write_u64 (19 samples, 0.01%)</title><rect x="99.4731%" y="1477" width="0.0110%" height="15" fill="rgb(230,108,32)" fg:x="171800" fg:w="19"/><text x="99.7231%" y="1487.50"></text></g><g><title>boids.exe`core::num::impl$9::wrapping_mul (19 samples, 0.01%)</title><rect x="99.4731%" y="1461" width="0.0110%" height="15" fill="rgb(216,165,31)" fg:x="171800" fg:w="19"/><text x="99.7231%" y="1471.50"></text></g><g><title>boids.exe`bevy_tasks::task_pool::impl$2::execute_global_scope::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;bevy_tasks::task_pool::impl$2::execute_global_scope::async_fn_env$0&lt;tuple$&lt;&gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block$0::async_block_env$0&lt;bevy_ecs::query::state::impl$2::par_fold_init_unchecked_manual::closure_env$0&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt;,core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity,alloc::alloc::Global&gt;,bevy_platform::hash::NoOpHash&gt; &gt;,bevy_ecs::query::par_iter::impl$0::for_each_init::closure_env$0&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt;,bevy_render::view::visibility::check_visibility::closure_env$1,bevy_render::view::visibility::check_visibility::closure_env$0,core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity,alloc::alloc::Global&gt;,bevy_platform::hash::NoOpHash&gt; &gt; &gt;,bevy_render::view::visibility::check_visibility::closure_env$0&gt;,tuple$ (18 samples, 0.01%)</title><rect x="99.4864%" y="1429" width="0.0104%" height="15" fill="rgb(218,122,21)" fg:x="171823" fg:w="18"/><text x="99.7364%" y="1439.50"></text></g><g><title>boids.exe`bevy_ecs::query::par_iter::QueryParIter&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt; &gt;::for_each_init(bevy_ecs::query::par_iter::QueryParIter&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$ (24 samples, 0.01%)</title><rect x="99.4841%" y="1589" width="0.0139%" height="15" fill="rgb(223,224,47)" fg:x="171819" fg:w="24"/><text x="99.7341%" y="1599.50"></text></g><g><title>boids.exe`bevy_ecs::query::state::QueryState&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt; &gt;::par_fold_init_unchecked_manual(bevy_render::view::visibility::check_visibility::closure_env$0, bevy_ecs::world::unsafe_world_cell::UnsafeWorldCell, unsigned long long, bevy_ecs::query::par_iter::impl$0::for_each_init::closure_env$0&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt;,bevy_render::view::visibility::check_visibility::closure_env$1,bevy_render::view::visibility::check_visibility::closure_env$0,core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec (24 samples, 0.01%)</title><rect x="99.4841%" y="1573" width="0.0139%" height="15" fill="rgb(238,102,44)" fg:x="171819" fg:w="24"/><text x="99.7341%" y="1583.50"></text></g><g><title>boids.exe`bevy_tasks::task_pool::TaskPool::scope(bevy_ecs::query::state::impl$2::par_fold_init_unchecked_manual::closure_env$0&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt;,core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity,alloc::alloc::Global&gt;,bevy_platform::hash::NoOpHash&gt; &gt;,bevy_ecs::query::par_iter::impl$0::for_each_init::closure_env$0&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt;,bevy_render::view::visibility::check_visibility::closure_env$1,bevy_render::view::visibility::check_visibility::closure_env$0,core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec (24 samples, 0.01%)</title><rect x="99.4841%" y="1557" width="0.0139%" height="15" fill="rgb(236,46,40)" fg:x="171819" fg:w="24"/><text x="99.7341%" y="1567.50"></text></g><g><title>boids.exe`std::thread::local::LocalKey&lt;alloc::sync::Arc&lt;bevy_tasks::thread_executor::ThreadExecutor,alloc::alloc::Global&gt; &gt;::with(bevy_tasks::task_pool::impl$2::scope::closure_env$0&lt;bevy_ecs::query::state::impl$2::par_fold_init_unchecked_manual::closure_env$0&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt;,core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity,alloc::alloc::Global&gt;,bevy_platform::hash::NoOpHash&gt; &gt;,bevy_ecs::query::par_iter::impl$0::for_each_init::closure_env$0&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt;,bevy_render::view::visibility::check_visibility::closure_env$1,bevy_render::view::visibility::check_visibility::closure_env$0,core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity,alloc::alloc::Global&gt;,bevy_platform::hash::NoOpHash&gt; &gt; &gt;,bevy_render::view::visibility::check_visibility::closure_env$0&gt;,tuple$ (24 samples, 0.01%)</title><rect x="99.4841%" y="1541" width="0.0139%" height="15" fill="rgb(247,202,50)" fg:x="171819" fg:w="24"/><text x="99.7341%" y="1551.50"></text></g><g><title>boids.exe`bevy_tasks::task_pool::TaskPool::scope_with_executor_inner&lt;bevy_ecs::query::state::impl$2::par_fold_init_unchecked_manual::closure_env$0&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt;,core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity,alloc::alloc::Global&gt;,bevy_platform::hash::NoOpHash&gt; &gt;,bevy_ecs::query::par_iter::impl$0::for_each_init::closure_env$0&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt;,bevy_render::view::visibility::check_visibility::closure_env$1,bevy_render::view::visibility::check_visibility::closure_env$0,core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity,alloc::alloc::Global&gt;,bevy_platform::hash::NoOpHash&gt; &gt; &gt;,bevy_render::view::visibility::check_visibility::closure_env$0&gt;,tuple$&lt;&gt; &gt;(bool, bevy_tasks::thread_executor::ThreadExecutor*, bevy_tasks::thread_executor::ThreadExecutor*, bevy_ecs::query::state::impl$2::par_fold_init_unchecked_manual::closure_env$0&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt;,core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity,alloc::alloc::Global&gt;,bevy_platform::hash::NoOpHash&gt; &gt;,bevy_ecs::query::par_iter::impl$0::for_each_init::closure_env$0&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt;,bevy_render::view::visibility::check_visibility::closure_env$1,bevy_render::view::visibility::check_visibility::closure_env$0,core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec (24 samples, 0.01%)</title><rect x="99.4841%" y="1525" width="0.0139%" height="15" fill="rgb(209,99,20)" fg:x="171819" fg:w="24"/><text x="99.7341%" y="1535.50"></text></g><g><title>boids.exe`futures_lite::future::block_on(enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block_env$0&lt;bevy_ecs::query::state::impl$2::par_fold_init_unchecked_manual::closure_env$0&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt;,core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity,alloc::alloc::Global&gt;,bevy_platform::hash::NoOpHash&gt; &gt;,bevy_ecs::query::par_iter::impl$0::for_each_init::closure_env$0&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt;,bevy_render::view::visibility::check_visibility::closure_env$1,bevy_render::view::visibility::check_visibility::closure_env$0,core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity,alloc::alloc::Global&gt;,bevy_platform::hash::NoOpHash&gt; &gt; &gt;,bevy_render::view::visibility::check_visibility::closure_env$0&gt;,tuple$ (21 samples, 0.01%)</title><rect x="99.4858%" y="1509" width="0.0122%" height="15" fill="rgb(252,27,34)" fg:x="171822" fg:w="21"/><text x="99.7358%" y="1519.50"></text></g><g><title>boids.exe`std::thread::local::LocalKey&lt;core::cell::RefCell&lt;tuple$&lt;parking::Parker,core::task::wake::Waker&gt; &gt; &gt;::with&lt;core::cell::RefCell&lt;tuple$&lt;parking::Parker,core::task::wake::Waker&gt; &gt;,futures_lite::future::block_on::closure_env$0&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block_env$0&lt;bevy_ecs::query::state::impl$2::par_fold_init_unchecked_manual::closure_env$0&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt;,core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity,alloc::alloc::Global&gt;,bevy_platform::hash::NoOpHash&gt; &gt;,bevy_ecs::query::par_iter::impl$0::for_each_init::closure_env$0&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt;,bevy_render::view::visibility::check_visibility::closure_env$1,bevy_render::view::visibility::check_visibility::closure_env$0,core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity,alloc::alloc::Global&gt;,bevy_platform::hash::NoOpHash&gt; &gt; &gt;,bevy_render::view::visibility::check_visibility::closure_env$0&gt;,tuple$&lt;&gt; &gt; &gt; &gt;,alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt; &gt;(futures_lite::future::block_on::closure_env$0&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block_env$0&lt;bevy_ecs::query::state::impl$2::par_fold_init_unchecked_manual::closure_env$0&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt;,core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity,alloc::alloc::Global&gt;,bevy_platform::hash::NoOpHash&gt; &gt;,bevy_ecs::query::par_iter::impl$0::for_each_init::closure_env$0&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt;,bevy_render::view::visibility::check_visibility::closure_env$1,bevy_render::view::visibility::check_visibility::closure_env$0,core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity,alloc::alloc::Global&gt;,bevy_platform::hash::NoOpHash&gt; &gt; &gt;,bevy_render::view::visibility::check_visibility::closure_env$0&gt;,tuple$ (21 samples, 0.01%)</title><rect x="99.4858%" y="1493" width="0.0122%" height="15" fill="rgb(215,206,23)" fg:x="171822" fg:w="21"/><text x="99.7358%" y="1503.50"></text></g><g><title>boids.exe`std::thread::local::LocalKey&lt;core::cell::RefCell&lt;tuple$&lt;parking::Parker,core::task::wake::Waker&gt; &gt; &gt;::try_with(futures_lite::future::block_on::closure_env$0&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block_env$0&lt;bevy_ecs::query::state::impl$2::par_fold_init_unchecked_manual::closure_env$0&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt;,core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity,alloc::alloc::Global&gt;,bevy_platform::hash::NoOpHash&gt; &gt;,bevy_ecs::query::par_iter::impl$0::for_each_init::closure_env$0&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt;,bevy_render::view::visibility::check_visibility::closure_env$1,bevy_render::view::visibility::check_visibility::closure_env$0,core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity,alloc::alloc::Global&gt;,bevy_platform::hash::NoOpHash&gt; &gt; &gt;,bevy_render::view::visibility::check_visibility::closure_env$0&gt;,tuple$ (21 samples, 0.01%)</title><rect x="99.4858%" y="1477" width="0.0122%" height="15" fill="rgb(212,135,36)" fg:x="171822" fg:w="21"/><text x="99.7358%" y="1487.50"></text></g><g><title>boids.exe`futures_lite::future::block_on::closure$0(futures_lite::future::block_on::closure_env$0&lt;alloc::vec::Vec&lt;tuple$&lt;&gt;,alloc::alloc::Global&gt;,enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block_env$0&lt;bevy_ecs::query::state::impl$2::par_fold_init_unchecked_manual::closure_env$0&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt;,core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity,alloc::alloc::Global&gt;,bevy_platform::hash::NoOpHash&gt; &gt;,bevy_ecs::query::par_iter::impl$0::for_each_init::closure_env$0&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt;,bevy_render::view::visibility::check_visibility::closure_env$1,bevy_render::view::visibility::check_visibility::closure_env$0,core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity,alloc::alloc::Global&gt;,bevy_platform::hash::NoOpHash&gt; &gt; &gt;,bevy_render::view::visibility::check_visibility::closure_env$0&gt;,tuple$&lt;&gt; &gt; &gt; &gt;, core::cell::RefCell&lt;tuple$ (21 samples, 0.01%)</title><rect x="99.4858%" y="1461" width="0.0122%" height="15" fill="rgb(240,189,1)" fg:x="171822" fg:w="21"/><text x="99.7358%" y="1471.50"></text></g><g><title>boids.exe`bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block$0(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;bevy_tasks::task_pool::impl$2::scope_with_executor_inner::async_block_env$0&lt;bevy_ecs::query::state::impl$2::par_fold_init_unchecked_manual::closure_env$0&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt;,core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity,alloc::alloc::Global&gt;,bevy_platform::hash::NoOpHash&gt; &gt;,bevy_ecs::query::par_iter::impl$0::for_each_init::closure_env$0&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt;,bevy_render::view::visibility::check_visibility::closure_env$1,bevy_render::view::visibility::check_visibility::closure_env$0,core::cell::RefMut&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity,alloc::alloc::Global&gt;,bevy_platform::hash::NoOpHash&gt; &gt; &gt;,bevy_render::view::visibility::check_visibility::closure_env$0&gt;,tuple$ (20 samples, 0.01%)</title><rect x="99.4864%" y="1445" width="0.0116%" height="15" fill="rgb(242,56,20)" fg:x="171823" fg:w="20"/><text x="99.7364%" y="1455.50"></text></g><g><title>boids.exe`bevy_ecs::system::schedule_system::impl$1::run_unsafe&lt;bevy_ecs::system::function_system::FunctionSystem&lt;void (*)(bevy_ecs::system::system_param::Local&lt;bevy_utils::parallel_queue::Parallel&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity,alloc::alloc::Global&gt;,bevy_platform::hash::NoOpHash&gt; &gt; &gt;,bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,ref_mut$&lt;bevy_render::view::visibility::VisibleEntities&gt;,ref$&lt;bevy_render::primitives::Frustum&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,ref$&lt;bevy_render::camera::camera::Camera&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::NoCpuCulling&gt; &gt;,tuple$&lt;&gt; &gt;,bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt; &gt;,enum2$&lt;core::option::Option&lt;bevy_ecs::change_detection::Res&lt;bevy_render::view::visibility::range::VisibleEntityRanges&gt; &gt; &gt;,bevy_ecs::change_detection::ResMut&lt;bevy_render::view::visibility::PreviousVisibleEntities&gt;),void (*)(bevy_ecs::system::system_param::Local&lt;bevy_utils::parallel_queue::Parallel&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity,alloc::alloc::Global&gt;,bevy_platform::hash::NoOpHash&gt; &gt; &gt;,bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,ref_mut$&lt;bevy_render::view::visibility::VisibleEntities&gt;,ref$&lt;bevy_render::primitives::Frustum&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,ref$&lt;bevy_render::camera::camera::Camera&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::NoCpuCulling&gt; &gt;,tuple$&lt;&gt; &gt;,bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt; &gt;,enum2$&lt;core::option::Option&lt;bevy_ecs::change_detection::Res&lt;bevy_render::view::visibility::range::VisibleEntityRanges&gt; &gt; &gt;,bevy_ecs::change_detection::ResMut&lt;bevy_render::view::visibility::PreviousVisibleEntities&gt;)&gt; &gt;(bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;bevy_ecs::system::function_system::FunctionSystem&lt;void (*)(bevy_ecs::system::system_param::Local&lt;bevy_utils::parallel_queue::Parallel&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity,alloc::alloc::Global&gt;,bevy_platform::hash::NoOpHash&gt; &gt; &gt;,bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,ref_mut$&lt;bevy_render::view::visibility::VisibleEntities&gt;,ref$&lt;bevy_render::primitives::Frustum&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,ref$&lt;bevy_render::camera::camera::Camera&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::NoCpuCulling&gt; &gt;,tuple$&lt;&gt; &gt;,bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt; &gt;,enum2$&lt;core::option::Option&lt;bevy_ecs::change_detection::Res&lt;bevy_render::view::visibility::range::VisibleEntityRanges&gt; &gt; &gt;,bevy_ecs::change_detection::ResMut&lt;bevy_render::view::visibility::PreviousVisibleEntities&gt;),void (*)(bevy_ecs::system::system_param::Local&lt;bevy_utils::parallel_queue::Parallel&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity,alloc::alloc::Global&gt;,bevy_platform::hash::NoOpHash&gt; &gt; &gt;,bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,ref_mut$&lt;bevy_render::view::visibility::VisibleEntities&gt;,ref$&lt;bevy_render::primitives::Frustum&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,ref$&lt;bevy_render::camera::camera::Camera&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::NoCpuCulling&gt; &gt;,tuple$&lt;&gt; &gt;,bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt; &gt;,enum2$&lt;core::option::Option&lt;bevy_ecs::change_detection::Res&lt;bevy_render::view::visibility::range::VisibleEntityRanges&gt; &gt; &gt;,bevy_ecs::change_detection::ResMut&lt;bevy_render::view::visibility::PreviousVisibleEntities&gt;)&gt; &gt;*, tuple$ (57 samples, 0.03%)</title><rect x="99.4702%" y="1637" width="0.0330%" height="15" fill="rgb(247,132,33)" fg:x="171795" fg:w="57"/><text x="99.7202%" y="1647.50"></text></g><g><title>boids.exe`bevy_ecs::system::function_system::impl$7::run_unsafe(bevy_ecs::system::function_system::FunctionSystem&lt;void (*)(bevy_ecs::system::system_param::Local&lt;bevy_utils::parallel_queue::Parallel&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity,alloc::alloc::Global&gt;,bevy_platform::hash::NoOpHash&gt; &gt; &gt;,bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,ref_mut$&lt;bevy_render::view::visibility::VisibleEntities&gt;,ref$&lt;bevy_render::primitives::Frustum&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,ref$&lt;bevy_render::camera::camera::Camera&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::NoCpuCulling&gt; &gt;,tuple$&lt;&gt; &gt;,bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt; &gt;,enum2$&lt;core::option::Option&lt;bevy_ecs::change_detection::Res&lt;bevy_render::view::visibility::range::VisibleEntityRanges&gt; &gt; &gt;,bevy_ecs::change_detection::ResMut&lt;bevy_render::view::visibility::PreviousVisibleEntities&gt;),void (*)(bevy_ecs::system::system_param::Local&lt;bevy_utils::parallel_queue::Parallel&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity,alloc::alloc::Global&gt;,bevy_platform::hash::NoOpHash&gt; &gt; &gt;,bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,ref_mut$&lt;bevy_render::view::visibility::VisibleEntities&gt;,ref$&lt;bevy_render::primitives::Frustum&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,ref$&lt;bevy_render::camera::camera::Camera&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::NoCpuCulling&gt; &gt;,tuple$&lt;&gt; &gt;,bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt; &gt;,enum2$&lt;core::option::Option&lt;bevy_ecs::change_detection::Res&lt;bevy_render::view::visibility::range::VisibleEntityRanges&gt; &gt; &gt;,bevy_ecs::change_detection::ResMut&lt;bevy_render::view::visibility::PreviousVisibleEntities&gt;)&gt;*, tuple$ (57 samples, 0.03%)</title><rect x="99.4702%" y="1621" width="0.0330%" height="15" fill="rgb(208,149,11)" fg:x="171795" fg:w="57"/><text x="99.7202%" y="1631.50"></text></g><g><title>boids.exe`bevy_render::view::visibility::check_visibility(bevy_ecs::system::system_param::Local&lt;bevy_utils::parallel_queue::Parallel&lt;bevy_platform::collections::hash_map::HashMap&lt;core::any::TypeId,alloc::vec::Vec&lt;bevy_ecs::entity::Entity,alloc::alloc::Global&gt;,bevy_platform::hash::NoOpHash&gt; &gt; &gt;, bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,ref_mut$&lt;bevy_render::view::visibility::VisibleEntities&gt;,ref$&lt;bevy_render::primitives::Frustum&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,ref$&lt;bevy_render::camera::camera::Camera&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::NoCpuCulling&gt; &gt;,tuple$&lt;&gt; &gt;, bevy_ecs::system::query::Query&lt;tuple$&lt;bevy_ecs::entity::Entity,ref$&lt;bevy_render::view::visibility::InheritedVisibility&gt;,ref_mut$&lt;bevy_render::view::visibility::ViewVisibility&gt;,ref$&lt;bevy_render::view::visibility::VisibilityClass&gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::view::visibility::render_layers::RenderLayers&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;ref$&lt;bevy_render::primitives::Aabb&gt; &gt; &gt;,ref$&lt;bevy_transform::components::global_transform::GlobalTransform&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::NoFrustumCulling&gt;,bevy_ecs::query::fetch::Has&lt;bevy_render::view::visibility::range::VisibilityRange&gt; &gt;,tuple$&lt;&gt; &gt;, enum2$&lt;core::option::Option&lt;bevy_ecs::change_detection::Res&lt;bevy_render::view::visibility::range::VisibleEntityRanges&gt; &gt; &gt;, bevy_ecs::change_detection::ResMut (57 samples, 0.03%)</title><rect x="99.4702%" y="1605" width="0.0330%" height="15" fill="rgb(211,33,11)" fg:x="171795" fg:w="57"/><text x="99.7202%" y="1615.50"></text></g><g><title>boids.exe`alloc::boxed::impl$28::call_once(alloc::boxed::Box&lt;dyn$&lt;core::ops::function::FnOnce&lt;tuple$&lt;ref_mut$&lt;egui::ui::Ui&gt; &gt;,assoc$ (18 samples, 0.01%)</title><rect x="99.5270%" y="1061" width="0.0104%" height="15" fill="rgb(221,29,38)" fg:x="171893" fg:w="18"/><text x="99.7770%" y="1071.50"></text></g><g><title>boids.exe`egui::ui::Ui::allocate_new_ui_dyn&lt;egui::response::Response&gt;(egui::ui_builder::UiBuilder, alloc::boxed::Box&lt;dyn$&lt;core::ops::function::FnOnce&lt;tuple$&lt;ref_mut$&lt;egui::ui::Ui&gt; &gt;,assoc$ (19 samples, 0.01%)</title><rect x="99.5270%" y="1077" width="0.0110%" height="15" fill="rgb(206,182,49)" fg:x="171893" fg:w="19"/><text x="99.7770%" y="1087.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place (20 samples, 0.01%)</title><rect x="99.5270%" y="1205" width="0.0116%" height="15" fill="rgb(216,140,1)" fg:x="171893" fg:w="20"/><text x="99.7770%" y="1215.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place (20 samples, 0.01%)</title><rect x="99.5270%" y="1189" width="0.0116%" height="15" fill="rgb(232,57,40)" fg:x="171893" fg:w="20"/><text x="99.7770%" y="1199.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(alloc::sync::Arc&lt;epaint::mutex::rw_lock_impl::RwLock (20 samples, 0.01%)</title><rect x="99.5270%" y="1173" width="0.0116%" height="15" fill="rgb(224,186,18)" fg:x="171893" fg:w="20"/><text x="99.7770%" y="1183.50"></text></g><g><title>boids.exe`alloc::sync::impl$38::drop(alloc::sync::Arc&lt;epaint::mutex::rw_lock_impl::RwLock (20 samples, 0.01%)</title><rect x="99.5270%" y="1157" width="0.0116%" height="15" fill="rgb(215,121,11)" fg:x="171893" fg:w="20"/><text x="99.7770%" y="1167.50"></text></g><g><title>boids.exe`alloc::sync::Arc&lt;epaint::mutex::rw_lock_impl::RwLock&lt;egui::context::ContextImpl&gt;,alloc::alloc::Global&gt;::inner (20 samples, 0.01%)</title><rect x="99.5270%" y="1141" width="0.0116%" height="15" fill="rgb(245,147,10)" fg:x="171893" fg:w="20"/><text x="99.7770%" y="1151.50"></text></g><g><title>boids.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;epaint::mutex::rw_lock_impl::RwLock&lt;egui::context::ContextImpl&gt; &gt; &gt;::as_ref (20 samples, 0.01%)</title><rect x="99.5270%" y="1125" width="0.0116%" height="15" fill="rgb(238,153,13)" fg:x="171893" fg:w="20"/><text x="99.7770%" y="1135.50"></text></g><g><title>boids.exe`egui::widgets::slider::impl$2::ui (20 samples, 0.01%)</title><rect x="99.5270%" y="1109" width="0.0116%" height="15" fill="rgb(233,108,0)" fg:x="171893" fg:w="20"/><text x="99.7770%" y="1119.50"></text></g><g><title>boids.exe`egui::ui::Ui::horizontal_with_main_wrap_dyn&lt;egui::response::Response&gt;(bool, alloc::boxed::Box&lt;dyn$&lt;core::ops::function::FnOnce&lt;tuple$&lt;ref_mut$&lt;egui::ui::Ui&gt; &gt;,assoc$ (20 samples, 0.01%)</title><rect x="99.5270%" y="1093" width="0.0116%" height="15" fill="rgb(212,157,17)" fg:x="171893" fg:w="20"/><text x="99.7770%" y="1103.50"></text></g><g><title>boids.exe`alloc::boxed::impl$28::call_once(alloc::boxed::Box&lt;dyn$&lt;core::ops::function::FnOnce&lt;tuple$&lt;ref_mut$&lt;egui::ui::Ui&gt; &gt;,assoc$&lt;Output,tuple$ (23 samples, 0.01%)</title><rect x="99.5258%" y="1413" width="0.0133%" height="15" fill="rgb(225,213,38)" fg:x="171891" fg:w="23"/><text x="99.7758%" y="1423.50"></text></g><g><title>boids.exe`alloc::boxed::impl$8::drop(alloc::boxed::Box&lt;dyn$&lt;core::ops::function::FnOnce&lt;tuple$&lt;ref_mut$&lt;egui::ui::Ui&gt; &gt;,assoc$&lt;Output,tuple$ (23 samples, 0.01%)</title><rect x="99.5258%" y="1397" width="0.0133%" height="15" fill="rgb(248,16,11)" fg:x="171891" fg:w="23"/><text x="99.7758%" y="1407.50"></text></g><g><title>boids.exe`core::alloc::layout::Layout::for_value_raw(ptr_const$&lt;dyn$&lt;core::ops::function::FnOnce&lt;tuple$&lt;ref_mut$&lt;egui::ui::Ui&gt; &gt;,assoc$&lt;Output,tuple$ (23 samples, 0.01%)</title><rect x="99.5258%" y="1381" width="0.0133%" height="15" fill="rgb(241,33,4)" fg:x="171891" fg:w="23"/><text x="99.7758%" y="1391.50"></text></g><g><title>boids.exe`core::mem::size_of_val_raw(ptr_const$&lt;dyn$&lt;core::ops::function::FnOnce&lt;tuple$&lt;ref_mut$&lt;egui::ui::Ui&gt; &gt;,assoc$&lt;Output,tuple$ (23 samples, 0.01%)</title><rect x="99.5258%" y="1365" width="0.0133%" height="15" fill="rgb(222,26,43)" fg:x="171891" fg:w="23"/><text x="99.7758%" y="1375.50"></text></g><g><title>boids.exe`core::ops::function::FnOnce::call_once&lt;egui::containers::window::impl$1::show_dyn::closure$7::closure_env$0&lt;tuple$&lt;&gt; &gt;,tuple$&lt;ref_mut$&lt;egui::ui::Ui&gt; &gt; &gt;(egui::containers::window::impl$1::show_dyn::closure$7::closure_env$0&lt;tuple$ (23 samples, 0.01%)</title><rect x="99.5258%" y="1349" width="0.0133%" height="15" fill="rgb(243,29,36)" fg:x="171891" fg:w="23"/><text x="99.7758%" y="1359.50"></text></g><g><title>boids.exe`egui::containers::resize::Resize::show&lt;tuple$&lt;&gt;,egui::containers::window::impl$1::show_dyn::closure$7::closure$0::closure_env$0&lt;tuple$&lt;&gt; &gt; &gt;(egui::containers::resize::Resize, egui::ui::Ui*, egui::containers::window::impl$1::show_dyn::closure$7::closure$0::closure_env$0&lt;tuple$ (23 samples, 0.01%)</title><rect x="99.5258%" y="1333" width="0.0133%" height="15" fill="rgb(241,9,27)" fg:x="171891" fg:w="23"/><text x="99.7758%" y="1343.50"></text></g><g><title>boids.exe`egui::containers::window::impl$1::show_dyn::closure$7::closure$0::closure$0(egui::containers::window::impl$1::show_dyn::closure$7::closure$0::closure_env$0&lt;tuple$ (21 samples, 0.01%)</title><rect x="99.5270%" y="1317" width="0.0122%" height="15" fill="rgb(205,117,26)" fg:x="171893" fg:w="21"/><text x="99.7770%" y="1327.50"></text></g><g><title>boids.exe`alloc::boxed::impl$28::call_once(alloc::boxed::Box&lt;dyn$&lt;core::ops::function::FnOnce&lt;tuple$&lt;ref_mut$&lt;egui::ui::Ui&gt; &gt;,assoc$&lt;Output,tuple$ (21 samples, 0.01%)</title><rect x="99.5270%" y="1301" width="0.0122%" height="15" fill="rgb(209,80,39)" fg:x="171893" fg:w="21"/><text x="99.7770%" y="1311.50"></text></g><g><title>boids.exe`alloc::boxed::impl$8::drop(alloc::boxed::Box&lt;dyn$&lt;core::ops::function::FnOnce&lt;tuple$&lt;ref_mut$&lt;egui::ui::Ui&gt; &gt;,assoc$&lt;Output,tuple$ (21 samples, 0.01%)</title><rect x="99.5270%" y="1285" width="0.0122%" height="15" fill="rgb(239,155,6)" fg:x="171893" fg:w="21"/><text x="99.7770%" y="1295.50"></text></g><g><title>boids.exe`core::alloc::layout::Layout::for_value_raw(ptr_const$&lt;dyn$&lt;core::ops::function::FnOnce&lt;tuple$&lt;ref_mut$&lt;egui::ui::Ui&gt; &gt;,assoc$&lt;Output,tuple$ (21 samples, 0.01%)</title><rect x="99.5270%" y="1269" width="0.0122%" height="15" fill="rgb(212,104,12)" fg:x="171893" fg:w="21"/><text x="99.7770%" y="1279.50"></text></g><g><title>boids.exe`core::mem::size_of_val_raw(ptr_const$&lt;dyn$&lt;core::ops::function::FnOnce&lt;tuple$&lt;ref_mut$&lt;egui::ui::Ui&gt; &gt;,assoc$&lt;Output,tuple$ (21 samples, 0.01%)</title><rect x="99.5270%" y="1253" width="0.0122%" height="15" fill="rgb(234,204,3)" fg:x="171893" fg:w="21"/><text x="99.7770%" y="1263.50"></text></g><g><title>boids.exe`core::ops::function::FnOnce::call_once&lt;boids::egui_system::closure_env$0,tuple$&lt;ref_mut$&lt;egui::ui::Ui&gt; &gt; &gt; (21 samples, 0.01%)</title><rect x="99.5270%" y="1237" width="0.0122%" height="15" fill="rgb(251,218,7)" fg:x="171893" fg:w="21"/><text x="99.7770%" y="1247.50"></text></g><g><title>boids.exe`boids::egui_system::closure$0 (21 samples, 0.01%)</title><rect x="99.5270%" y="1221" width="0.0122%" height="15" fill="rgb(221,81,32)" fg:x="171893" fg:w="21"/><text x="99.7770%" y="1231.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(enum2$&lt;core::option::Option&lt;egui::response::InnerResponse&lt;enum2$&lt;core::option::Option&lt;tuple$ (34 samples, 0.02%)</title><rect x="99.5200%" y="1557" width="0.0197%" height="15" fill="rgb(214,152,26)" fg:x="171881" fg:w="34"/><text x="99.7700%" y="1567.50"></text></g><g><title>boids.exe`egui::containers::window::Window::show_dyn&lt;tuple$&lt;&gt; &gt;(egui::containers::window::Window, egui::context::Context*, alloc::boxed::Box&lt;dyn$&lt;core::ops::function::FnOnce&lt;tuple$&lt;ref_mut$&lt;egui::ui::Ui&gt; &gt;,assoc$&lt;Output,tuple$ (34 samples, 0.02%)</title><rect x="99.5200%" y="1541" width="0.0197%" height="15" fill="rgb(223,22,3)" fg:x="171881" fg:w="34"/><text x="99.7700%" y="1551.50"></text></g><g><title>boids.exe`egui::context::Context::with_accessibility_parent(egui::id::Id, egui::containers::window::impl$1::show_dyn::closure_env$7&lt;tuple$ (26 samples, 0.02%)</title><rect x="99.5246%" y="1525" width="0.0151%" height="15" fill="rgb(207,174,7)" fg:x="171889" fg:w="26"/><text x="99.7746%" y="1535.50"></text></g><g><title>boids.exe`egui::containers::window::impl$1::show_dyn::closure$7(egui::containers::window::impl$1::show_dyn::closure_env$7&lt;tuple$ (26 samples, 0.02%)</title><rect x="99.5246%" y="1509" width="0.0151%" height="15" fill="rgb(224,19,52)" fg:x="171889" fg:w="26"/><text x="99.7746%" y="1519.50"></text></g><g><title>boids.exe`enum2$&lt;core::option::Option&lt;egui::response::InnerResponse&lt;tuple$&lt;&gt; &gt; &gt; &gt;::map_or(enum2$&lt;core::option::Option&lt;egui::response::InnerResponse&lt;tuple$&lt;&gt; &gt; &gt; &gt;, tuple$&lt;enum2$&lt;core::option::Option&lt;tuple$&lt;&gt; &gt; &gt;,enum2$&lt;core::option::Option&lt;egui::response::Response&gt; &gt; &gt;, egui::containers::window::impl$1::show_dyn::closure$7::closure_env$1&lt;tuple$ (25 samples, 0.01%)</title><rect x="99.5252%" y="1493" width="0.0145%" height="15" fill="rgb(228,24,14)" fg:x="171890" fg:w="25"/><text x="99.7752%" y="1503.50"></text></g><g><title>boids.exe`egui::containers::collapsing_header::CollapsingState::show_body_unindented&lt;tuple$&lt;&gt;,egui::containers::window::impl$1::show_dyn::closure$7::closure_env$0&lt;tuple$&lt;&gt; &gt; &gt;(egui::ui::Ui*, egui::containers::window::impl$1::show_dyn::closure$7::closure_env$0&lt;tuple$ (25 samples, 0.01%)</title><rect x="99.5252%" y="1477" width="0.0145%" height="15" fill="rgb(230,153,43)" fg:x="171890" fg:w="25"/><text x="99.7752%" y="1487.50"></text></g><g><title>boids.exe`emath::rect::Rect::size (24 samples, 0.01%)</title><rect x="99.5258%" y="1461" width="0.0139%" height="15" fill="rgb(231,106,12)" fg:x="171891" fg:w="24"/><text x="99.7758%" y="1471.50"></text></g><g><title>boids.exe`egui::ui::Ui::scope&lt;tuple$&lt;&gt;,egui::containers::window::impl$1::show_dyn::closure$7::closure_env$0&lt;tuple$&lt;&gt; &gt; &gt;(egui::containers::window::impl$1::show_dyn::closure$7::closure_env$0&lt;tuple$ (24 samples, 0.01%)</title><rect x="99.5258%" y="1445" width="0.0139%" height="15" fill="rgb(215,92,2)" fg:x="171891" fg:w="24"/><text x="99.7758%" y="1455.50"></text></g><g><title>boids.exe`egui::ui::Ui::scope_dyn&lt;tuple$&lt;&gt; &gt;(egui::ui_builder::UiBuilder, alloc::boxed::Box&lt;dyn$&lt;core::ops::function::FnOnce&lt;tuple$&lt;ref_mut$&lt;egui::ui::Ui&gt; &gt;,assoc$&lt;Output,tuple$ (24 samples, 0.01%)</title><rect x="99.5258%" y="1429" width="0.0139%" height="15" fill="rgb(249,143,25)" fg:x="171891" fg:w="24"/><text x="99.7758%" y="1439.50"></text></g><g><title>boids.exe`bevy_ecs::system::schedule_system::impl$1::run_unsafe&lt;bevy_ecs::system::function_system::FunctionSystem&lt;void (*)(bevy_egui::EguiContexts,bevy_ecs::change_detection::ResMut&lt;boids::BoidsParameters&gt;,bevy_ecs::system::commands::Commands,bevy_ecs::system::query::Query&lt;bevy_ecs::entity::Entity,bevy_ecs::query::filter::With&lt;boids::Boid&gt; &gt;),void (*)(bevy_egui::EguiContexts,bevy_ecs::change_detection::ResMut&lt;boids::BoidsParameters&gt;,bevy_ecs::system::commands::Commands,bevy_ecs::system::query::Query&lt;bevy_ecs::entity::Entity,bevy_ecs::query::filter::With&lt;boids::Boid&gt; &gt;)&gt; &gt;(bevy_ecs::system::schedule_system::InfallibleSystemWrapper&lt;bevy_ecs::system::function_system::FunctionSystem&lt;void (*)(bevy_egui::EguiContexts,bevy_ecs::change_detection::ResMut&lt;boids::BoidsParameters&gt;,bevy_ecs::system::commands::Commands,bevy_ecs::system::query::Query&lt;bevy_ecs::entity::Entity,bevy_ecs::query::filter::With&lt;boids::Boid&gt; &gt;),void (*)(bevy_egui::EguiContexts,bevy_ecs::change_detection::ResMut&lt;boids::BoidsParameters&gt;,bevy_ecs::system::commands::Commands,bevy_ecs::system::query::Query&lt;bevy_ecs::entity::Entity,bevy_ecs::query::filter::With&lt;boids::Boid&gt; &gt;)&gt; &gt;*, tuple$ (35 samples, 0.02%)</title><rect x="99.5200%" y="1637" width="0.0203%" height="15" fill="rgb(252,7,35)" fg:x="171881" fg:w="35"/><text x="99.7700%" y="1647.50"></text></g><g><title>boids.exe`bevy_ecs::system::function_system::impl$7::run_unsafe(bevy_ecs::system::function_system::FunctionSystem&lt;void (*)(bevy_egui::EguiContexts,bevy_ecs::change_detection::ResMut&lt;boids::BoidsParameters&gt;,bevy_ecs::system::commands::Commands,bevy_ecs::system::query::Query&lt;bevy_ecs::entity::Entity,bevy_ecs::query::filter::With&lt;boids::Boid&gt; &gt;),void (*)(bevy_egui::EguiContexts,bevy_ecs::change_detection::ResMut&lt;boids::BoidsParameters&gt;,bevy_ecs::system::commands::Commands,bevy_ecs::system::query::Query&lt;bevy_ecs::entity::Entity,bevy_ecs::query::filter::With&lt;boids::Boid&gt; &gt;)&gt;*, tuple$ (35 samples, 0.02%)</title><rect x="99.5200%" y="1621" width="0.0203%" height="15" fill="rgb(216,69,40)" fg:x="171881" fg:w="35"/><text x="99.7700%" y="1631.50"></text></g><g><title>boids.exe`core::ops::function::impls::impl$3::call_mut&lt;tuple$&lt;bevy_egui::EguiContexts,bevy_ecs::change_detection::ResMut&lt;boids::BoidsParameters&gt;,bevy_ecs::system::commands::Commands,bevy_ecs::system::query::Query&lt;bevy_ecs::entity::Entity,bevy_ecs::query::filter::With&lt;boids::Boid&gt; &gt; &gt;,void (*)(bevy_egui::EguiContexts,bevy_ecs::change_detection::ResMut&lt;boids::BoidsParameters&gt;,bevy_ecs::system::commands::Commands,bevy_ecs::system::query::Query&lt;bevy_ecs::entity::Entity,bevy_ecs::query::filter::With&lt;boids::Boid&gt; &gt;)&gt;(void (***)(bevy_egui::EguiContexts, bevy_ecs::change_detection::ResMut&lt;boids::BoidsParameters&gt;, bevy_ecs::system::commands::Commands, bevy_ecs::system::query::Query&lt;bevy_ecs::entity::Entity,bevy_ecs::query::filter::With&lt;boids::Boid&gt; &gt;), bevy_egui::EguiContexts, bevy_ecs::change_detection::ResMut&lt;boids::BoidsParameters&gt;, bevy_ecs::system::commands::Commands, bevy_ecs::system::query::Query&lt;bevy_ecs::entity::Entity,bevy_ecs::query::filter::With (35 samples, 0.02%)</title><rect x="99.5200%" y="1605" width="0.0203%" height="15" fill="rgb(240,36,33)" fg:x="171881" fg:w="35"/><text x="99.7700%" y="1615.50"></text></g><g><title>boids.exe`core::ops::function::FnMut::call_mut(void (**)(bevy_egui::EguiContexts, bevy_ecs::change_detection::ResMut&lt;boids::BoidsParameters&gt;, bevy_ecs::system::commands::Commands, bevy_ecs::system::query::Query&lt;bevy_ecs::entity::Entity,bevy_ecs::query::filter::With&lt;boids::Boid&gt; &gt;), bevy_egui::EguiContexts, bevy_ecs::change_detection::ResMut&lt;boids::BoidsParameters&gt;, bevy_ecs::system::commands::Commands, bevy_ecs::system::query::Query&lt;bevy_ecs::entity::Entity,bevy_ecs::query::filter::With (35 samples, 0.02%)</title><rect x="99.5200%" y="1589" width="0.0203%" height="15" fill="rgb(231,128,14)" fg:x="171881" fg:w="35"/><text x="99.7700%" y="1599.50"></text></g><g><title>boids.exe`boids::egui_system(bevy_egui::EguiContexts, bevy_ecs::change_detection::ResMut&lt;boids::BoidsParameters&gt;, bevy_ecs::system::commands::Commands, bevy_ecs::system::query::Query&lt;bevy_ecs::entity::Entity,bevy_ecs::query::filter::With (35 samples, 0.02%)</title><rect x="99.5200%" y="1573" width="0.0203%" height="15" fill="rgb(245,143,14)" fg:x="171881" fg:w="35"/><text x="99.7700%" y="1583.50"></text></g><g><title>boids.exe`async_task::raw::RawTask&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env$0&gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env$0&gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$&lt;&gt; &gt;::run&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env$0&gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env$0&gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$&lt;&gt; &gt;(tuple$ (150,255 samples, 87.00%)</title><rect x="12.5447%" y="1941" width="86.9984%" height="15" fill="rgb(222,130,28)" fg:x="21666" fg:w="150255"/><text x="12.7947%" y="1951.50">boids.exe`async_task::raw::RawTask&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;e..</text></g><g><title>boids.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;async_task::raw::impl$3::run::closure_env$1&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env$0&gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env$0&gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$ (150,188 samples, 86.96%)</title><rect x="12.5835%" y="1925" width="86.9596%" height="15" fill="rgb(212,10,48)" fg:x="21733" fg:w="150188"/><text x="12.8335%" y="1935.50">boids.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;async_task::raw::impl$3::run::closure_env$1&lt;async_executor::AsyncCa..</text></g><g><title>boids.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;async_task::raw::impl$3::run::closure_env$1&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env$0&gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env$0&gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$ (150,188 samples, 86.96%)</title><rect x="12.5835%" y="1909" width="86.9596%" height="15" fill="rgb(254,118,45)" fg:x="21733" fg:w="150188"/><text x="12.8335%" y="1919.50">boids.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;async_task::raw::impl$3::run::closure_env$1&lt;async_executor::AsyncCallOnD..</text></g><g><title>boids.exe`std::panicking::try::do_call (150,188 samples, 86.96%)</title><rect x="12.5835%" y="1893" width="86.9596%" height="15" fill="rgb(228,6,45)" fg:x="21733" fg:w="150188"/><text x="12.8335%" y="1903.50">boids.exe`std::panicking::try::do_call</text></g><g><title>boids.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;async_task::raw::impl$3::run::closure_env$1&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env$0&gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env$0&gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$ (150,187 samples, 86.96%)</title><rect x="12.5841%" y="1877" width="86.9591%" height="15" fill="rgb(241,18,35)" fg:x="21734" fg:w="150187"/><text x="12.8341%" y="1887.50">boids.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;async_task::raw::impl$3::run::closure_env$1&lt;asy..</text></g><g><title>boids.exe`core::ops::function::FnOnce::call_once(async_task::raw::impl$3::run::closure_env$1&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env$0&gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env$0&gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$ (150,187 samples, 86.96%)</title><rect x="12.5841%" y="1861" width="86.9591%" height="15" fill="rgb(227,214,53)" fg:x="21734" fg:w="150187"/><text x="12.8341%" y="1871.50">boids.exe`core::ops::function::FnOnce::call_once(async_task::raw::impl$3::run::closure_env$1&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future..</text></g><g><title>boids.exe`async_task::raw::impl$3::run::closure$1(async_task::raw::impl$3::run::closure_env$1&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env$0&gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env$0&gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,async_executor::impl$5::schedule::closure_env$0,tuple$ (150,187 samples, 86.96%)</title><rect x="12.5841%" y="1845" width="86.9591%" height="15" fill="rgb(224,107,51)" fg:x="21734" fg:w="150187"/><text x="12.8341%" y="1855.50">boids.exe`async_task::raw::impl$3::run::closure$1(async_task::raw::impl$3::run::closure_env$1&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::futur..</text></g><g><title>boids.exe`async_executor::impl$21::poll(core::pin::Pin&lt;ref_mut$&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env$0&gt; &gt; &gt;,async_executor::impl$5::spawn_inner::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,alloc::boxed::Box&lt;dyn$&lt;core::any::Any,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt; &gt;,futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$ (150,187 samples, 86.96%)</title><rect x="12.5841%" y="1829" width="86.9591%" height="15" fill="rgb(248,60,28)" fg:x="21734" fg:w="150187"/><text x="12.8341%" y="1839.50">boids.exe`async_executor::impl$21::poll(core::pin::Pin&lt;ref_mut$&lt;async_executor::AsyncCallOnDrop&lt;futures_lite::future::CatchUnwind&lt;core::panic::un..</text></g><g><title>boids.exe`futures_lite::future::impl$11::poll(core::pin::Pin&lt;ref_mut$&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$ (150,187 samples, 86.96%)</title><rect x="12.5841%" y="1813" width="86.9591%" height="15" fill="rgb(249,101,23)" fg:x="21734" fg:w="150187"/><text x="12.8341%" y="1823.50">boids.exe`futures_lite::future::impl$11::poll(core::pin::Pin&lt;ref_mut$&lt;futures_lite::future::CatchUnwind&lt;core::panic::unwind_safe::AssertUnwindSaf..</text></g><g><title>boids.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;futures_lite::future::impl$11::poll::closure_env$0&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$ (150,187 samples, 86.96%)</title><rect x="12.5841%" y="1797" width="86.9591%" height="15" fill="rgb(228,51,19)" fg:x="21734" fg:w="150187"/><text x="12.8341%" y="1807.50">boids.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;futures_lite::future::impl$11::poll::closure_env$0&lt;core::panic::unw..</text></g><g><title>boids.exe`core::panic::unwind_safe::impl$28::poll&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env$0&gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;enum2$ (150,187 samples, 86.96%)</title><rect x="12.5841%" y="1781" width="86.9591%" height="15" fill="rgb(213,20,6)" fg:x="21734" fg:w="150187"/><text x="12.8341%" y="1791.50">boids.exe`core::panic::unwind_safe::impl$28::poll&lt;enum2$&lt;bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block_env..</text></g><g><title>boids.exe`bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block$0(core::pin::Pin&lt;ref_mut$&lt;enum2$ (150,187 samples, 86.96%)</title><rect x="12.5841%" y="1765" width="86.9591%" height="15" fill="rgb(212,124,10)" fg:x="21734" fg:w="150187"/><text x="12.8341%" y="1775.50">boids.exe`bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block$0(core::pin::Pin&lt;ref_mut$&lt;enum2$</text></g><g><title>boids.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe (149,938 samples, 86.81%)</title><rect x="12.7283%" y="1749" width="86.8149%" height="15" fill="rgb(248,3,40)" fg:x="21983" fg:w="149938"/><text x="12.9783%" y="1759.50">boids.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe</text></g><g><title>boids.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe (149,938 samples, 86.81%)</title><rect x="12.7283%" y="1733" width="86.8149%" height="15" fill="rgb(223,178,23)" fg:x="21983" fg:w="149938"/><text x="12.9783%" y="1743.50">boids.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe</text></g><g><title>boids.exe`std::panicking::try::do_call (149,938 samples, 86.81%)</title><rect x="12.7283%" y="1717" width="86.8149%" height="15" fill="rgb(240,132,45)" fg:x="21983" fg:w="149938"/><text x="12.9783%" y="1727.50">boids.exe`std::panicking::try::do_call</text></g><g><title>boids.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe (149,938 samples, 86.81%)</title><rect x="12.7283%" y="1701" width="86.8149%" height="15" fill="rgb(245,164,36)" fg:x="21983" fg:w="149938"/><text x="12.9783%" y="1711.50">boids.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe</text></g><g><title>boids.exe`core::ops::function::FnOnce::call_once (149,938 samples, 86.81%)</title><rect x="12.7283%" y="1685" width="86.8149%" height="15" fill="rgb(231,188,53)" fg:x="21983" fg:w="149938"/><text x="12.9783%" y="1695.50">boids.exe`core::ops::function::FnOnce::call_once</text></g><g><title>boids.exe`bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block$0::closure$0 (149,938 samples, 86.81%)</title><rect x="12.7283%" y="1669" width="86.8149%" height="15" fill="rgb(237,198,39)" fg:x="21983" fg:w="149938"/><text x="12.9783%" y="1679.50">boids.exe`bevy_ecs::schedule::executor::multi_threaded::impl$5::spawn_system_task::async_block$0::closure$0</text></g><g><title>boids.exe`bevy_ecs::schedule::executor::__rust_begin_short_backtrace::run_unsafe(alloc::boxed::Box&lt;dyn$&lt;bevy_ecs::system::system::System&lt;assoc$&lt;In,tuple$&lt;&gt; &gt;,assoc$&lt;Out,enum2$&lt;core::result::Result&lt;tuple$ (149,934 samples, 86.81%)</title><rect x="12.7306%" y="1653" width="86.8126%" height="15" fill="rgb(223,120,35)" fg:x="21987" fg:w="149934"/><text x="12.9806%" y="1663.50">boids.exe`bevy_ecs::schedule::executor::__rust_begin_short_backtrace::run_unsafe(alloc::boxed::Box&lt;dyn$&lt;bevy_ecs::system::system::System&lt;assoc$&lt;I..</text></g><g><title>boids.exe`async_executor::impl$13::run::async_fn$0::async_block$0(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;async_executor::impl$13::run::async_fn$0::async_block_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,async_channel::RecvError&gt; &gt;,futures_lite::future::Or&lt;enum2$&lt;bevy_tasks::task_pool::impl$2::new_internal::closure$0::closure$0::closure$0::closure$0::async_block_env$0&gt;,async_channel::Recv&lt;tuple$ (151,002 samples, 87.43%)</title><rect x="12.1145%" y="2005" width="87.4310%" height="15" fill="rgb(253,107,49)" fg:x="20923" fg:w="151002"/><text x="12.3645%" y="2015.50">boids.exe`async_executor::impl$13::run::async_fn$0::async_block$0(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;async_executor::impl$13::run::async_fn$0::async_b..</text></g><g><title>boids.exe`core::iter::range::impl$6::next(core::ops::range::Range (150,838 samples, 87.34%)</title><rect x="12.2095%" y="1989" width="87.3360%" height="15" fill="rgb(216,44,31)" fg:x="21087" fg:w="150838"/><text x="12.4595%" y="1999.50">boids.exe`core::iter::range::impl$6::next(core::ops::range::Range</text></g><g><title>boids.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range (150,838 samples, 87.34%)</title><rect x="12.2095%" y="1973" width="87.3360%" height="15" fill="rgb(253,87,21)" fg:x="21087" fg:w="150838"/><text x="12.4595%" y="1983.50">boids.exe`core::iter::range::impl$5::spec_next(core::ops::range::Range</text></g><g><title>boids.exe`core::cmp::impls::impl$76::lt (150,838 samples, 87.34%)</title><rect x="12.2095%" y="1957" width="87.3360%" height="15" fill="rgb(226,18,2)" fg:x="21087" fg:w="150838"/><text x="12.4595%" y="1967.50">boids.exe`core::cmp::impls::impl$76::lt</text></g><g><title>boids.exe`async_executor::impl$13::run::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;async_executor::impl$13::run::async_fn_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,async_channel::RecvError&gt; &gt;,futures_lite::future::Or&lt;enum2$&lt;bevy_tasks::task_pool::impl$2::new_internal::closure$0::closure$0::closure$0::closure$0::async_block_env$0&gt;,async_channel::Recv&lt;tuple$ (151,023 samples, 87.44%)</title><rect x="12.1076%" y="2037" width="87.4431%" height="15" fill="rgb(216,8,46)" fg:x="20911" fg:w="151023"/><text x="12.3576%" y="2047.50">boids.exe`async_executor::impl$13::run::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;async_executor::impl$13::run::async_fn_env$0&lt;enum2$&lt;core::result..</text></g><g><title>boids.exe`futures_lite::future::impl$7::poll&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,async_channel::RecvError&gt; &gt;,futures_lite::future::Or&lt;enum2$&lt;bevy_tasks::task_pool::impl$2::new_internal::closure$0::closure$0::closure$0::closure$0::async_block_env$0&gt;,async_channel::Recv&lt;tuple$&lt;&gt; &gt; &gt;,enum2$&lt;async_executor::impl$13::run::async_fn$0::async_block_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,async_channel::RecvError&gt; &gt;,futures_lite::future::Or&lt;enum2$&lt;bevy_tasks::task_pool::impl$2::new_internal::closure$0::closure$0::closure$0::closure$0::async_block_env$0&gt;,async_channel::Recv&lt;tuple$&lt;&gt; &gt; &gt; &gt; &gt; &gt;(core::pin::Pin&lt;ref_mut$&lt;futures_lite::future::Or&lt;futures_lite::future::Or&lt;enum2$&lt;bevy_tasks::task_pool::impl$2::new_internal::closure$0::closure$0::closure$0::closure$0::async_block_env$0&gt;,async_channel::Recv&lt;tuple$&lt;&gt; &gt; &gt;,enum2$&lt;async_executor::impl$13::run::async_fn$0::async_block_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,async_channel::RecvError&gt; &gt;,futures_lite::future::Or&lt;enum2$&lt;bevy_tasks::task_pool::impl$2::new_internal::closure$0::closure$0::closure$0::closure$0::async_block_env$0&gt;,async_channel::Recv&lt;tuple$ (151,022 samples, 87.44%)</title><rect x="12.1082%" y="2021" width="87.4425%" height="15" fill="rgb(226,140,39)" fg:x="20912" fg:w="151022"/><text x="12.3582%" y="2031.50">boids.exe`futures_lite::future::impl$7::poll&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,async_channel::RecvError&gt; &gt;,futures_lite::future::Or&lt;enum2$&lt;bevy..</text></g><g><title>`0x7FF89D8E3EE5 (82 samples, 0.05%)</title><rect x="99.5634%" y="1845" width="0.0475%" height="15" fill="rgb(221,194,54)" fg:x="171956" fg:w="82"/><text x="99.8134%" y="1855.50"></text></g><g><title>`0x7FF89D954974 (80 samples, 0.05%)</title><rect x="99.5646%" y="1829" width="0.0463%" height="15" fill="rgb(213,92,11)" fg:x="171958" fg:w="80"/><text x="99.8146%" y="1839.50"></text></g><g><title>`0x7FF89D95D0C4 (37 samples, 0.02%)</title><rect x="99.6115%" y="1845" width="0.0214%" height="15" fill="rgb(229,162,46)" fg:x="172039" fg:w="37"/><text x="99.8615%" y="1855.50"></text></g><g><title>`0x7FF89D8FFEDC (140 samples, 0.08%)</title><rect x="99.5629%" y="1861" width="0.0811%" height="15" fill="rgb(214,111,36)" fg:x="171955" fg:w="140"/><text x="99.8129%" y="1871.50"></text></g><g><title>`0x7FF89D95D0FF (19 samples, 0.01%)</title><rect x="99.6329%" y="1845" width="0.0110%" height="15" fill="rgb(207,6,21)" fg:x="172076" fg:w="19"/><text x="99.8829%" y="1855.50"></text></g><g><title>`0x7FF89D8FBFA3 (152 samples, 0.09%)</title><rect x="99.5565%" y="1877" width="0.0880%" height="15" fill="rgb(213,127,38)" fg:x="171944" fg:w="152"/><text x="99.8065%" y="1887.50"></text></g><g><title>`0x7FF89ABBF923 (155 samples, 0.09%)</title><rect x="99.5559%" y="1893" width="0.0897%" height="15" fill="rgb(238,118,32)" fg:x="171943" fg:w="155"/><text x="99.8059%" y="1903.50"></text></g><g><title>boids.exe`std::sys::pal::windows::futex::futex_wait (160 samples, 0.09%)</title><rect x="99.5547%" y="1925" width="0.0926%" height="15" fill="rgb(240,139,39)" fg:x="171941" fg:w="160"/><text x="99.8047%" y="1935.50"></text></g><g><title>boids.exe`std::sys::pal::windows::futex::wait_on_address (158 samples, 0.09%)</title><rect x="99.5559%" y="1909" width="0.0915%" height="15" fill="rgb(235,10,37)" fg:x="171943" fg:w="158"/><text x="99.8059%" y="1919.50"></text></g><g><title>boids.exe`core::ops::function::FnOnce::call_once&lt;std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;bevy_tasks::task_pool::impl$2::new_internal::closure$0::closure_env$0,tuple$&lt;&gt; &gt;,tuple$&lt;&gt; &gt;(std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;bevy_tasks::task_pool::impl$2::new_internal::closure$0::closure_env$0,tuple$ (151,198 samples, 87.54%)</title><rect x="12.1041%" y="2437" width="87.5444%" height="15" fill="rgb(249,171,38)" fg:x="20905" fg:w="151198"/><text x="12.3541%" y="2447.50">boids.exe`core::ops::function::FnOnce::call_once&lt;std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;bevy_tasks::task_pool::impl$2::new_internal:..</text></g><g><title>boids.exe`std::thread::impl$0::spawn_unchecked_::closure$1(std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;bevy_tasks::task_pool::impl$2::new_internal::closure$0::closure_env$0,tuple$ (151,198 samples, 87.54%)</title><rect x="12.1041%" y="2421" width="87.5444%" height="15" fill="rgb(242,144,32)" fg:x="20905" fg:w="151198"/><text x="12.3541%" y="2431.50">boids.exe`std::thread::impl$0::spawn_unchecked_::closure$1(std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;bevy_tasks::task_pool::impl$2::new..</text></g><g><title>boids.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;bevy_tasks::task_pool::impl$2::new_internal::closure$0::closure_env$0,tuple$ (151,198 samples, 87.54%)</title><rect x="12.1041%" y="2405" width="87.5444%" height="15" fill="rgb(217,117,21)" fg:x="20905" fg:w="151198"/><text x="12.3541%" y="2415.50">boids.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;bevy..</text></g><g><title>boids.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;bevy_tasks::task_pool::impl$2::new_internal::closure$0::closure_env$0,tuple$ (151,198 samples, 87.54%)</title><rect x="12.1041%" y="2389" width="87.5444%" height="15" fill="rgb(249,87,1)" fg:x="20905" fg:w="151198"/><text x="12.3541%" y="2399.50">boids.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;bevy_task..</text></g><g><title>boids.exe`std::panicking::try::do_call (151,198 samples, 87.54%)</title><rect x="12.1041%" y="2373" width="87.5444%" height="15" fill="rgb(248,196,48)" fg:x="20905" fg:w="151198"/><text x="12.3541%" y="2383.50">boids.exe`std::panicking::try::do_call</text></g><g><title>boids.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;bevy_tasks::task_pool::impl$2::new_internal::closure$0::closure_env$0,tuple$ (151,198 samples, 87.54%)</title><rect x="12.1041%" y="2357" width="87.5444%" height="15" fill="rgb(251,206,33)" fg:x="20905" fg:w="151198"/><text x="12.3541%" y="2367.50">boids.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;std::thread::impl$0::spawn_unchecked_::closure$1..</text></g><g><title>boids.exe`std::thread::impl$0::spawn_unchecked_::closure$1::closure$0(std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;bevy_tasks::task_pool::impl$2::new_internal::closure$0::closure_env$0,tuple$ (151,198 samples, 87.54%)</title><rect x="12.1041%" y="2341" width="87.5444%" height="15" fill="rgb(232,141,28)" fg:x="20905" fg:w="151198"/><text x="12.3541%" y="2351.50">boids.exe`std::thread::impl$0::spawn_unchecked_::closure$1::closure$0(std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;bevy_tasks::..</text></g><g><title>boids.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;bevy_tasks::task_pool::impl$2::new_internal::closure$0::closure_env$0,tuple$&lt;&gt; &gt; (151,198 samples, 87.54%)</title><rect x="12.1041%" y="2325" width="87.5444%" height="15" fill="rgb(209,167,14)" fg:x="20905" fg:w="151198"/><text x="12.3541%" y="2335.50">boids.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;bevy_tasks::task_pool::impl$2::new_internal::closure$0::closure_env$0,tuple$&lt;&gt; &gt;</text></g><g><title>boids.exe`bevy_tasks::task_pool::impl$2::new_internal::closure$0::closure$0 (151,198 samples, 87.54%)</title><rect x="12.1041%" y="2309" width="87.5444%" height="15" fill="rgb(225,11,50)" fg:x="20905" fg:w="151198"/><text x="12.3541%" y="2319.50">boids.exe`bevy_tasks::task_pool::impl$2::new_internal::closure$0::closure$0</text></g><g><title>boids.exe`core::ptr::drop_in_place(alloc::sync::Arc (151,198 samples, 87.54%)</title><rect x="12.1041%" y="2293" width="87.5444%" height="15" fill="rgb(209,50,20)" fg:x="20905" fg:w="151198"/><text x="12.3541%" y="2303.50">boids.exe`core::ptr::drop_in_place(alloc::sync::Arc</text></g><g><title>boids.exe`alloc::sync::impl$38::drop(alloc::sync::Arc (151,198 samples, 87.54%)</title><rect x="12.1041%" y="2277" width="87.5444%" height="15" fill="rgb(212,17,46)" fg:x="20905" fg:w="151198"/><text x="12.3541%" y="2287.50">boids.exe`alloc::sync::impl$38::drop(alloc::sync::Arc</text></g><g><title>boids.exe`alloc::sync::Arc&lt;bevy_tasks::executor::Executor,alloc::alloc::Global&gt;::inner (151,198 samples, 87.54%)</title><rect x="12.1041%" y="2261" width="87.5444%" height="15" fill="rgb(216,101,39)" fg:x="20905" fg:w="151198"/><text x="12.3541%" y="2271.50">boids.exe`alloc::sync::Arc&lt;bevy_tasks::executor::Executor,alloc::alloc::Global&gt;::inner</text></g><g><title>boids.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;bevy_tasks::executor::Executor&gt; &gt;::as_ref (151,198 samples, 87.54%)</title><rect x="12.1041%" y="2245" width="87.5444%" height="15" fill="rgb(212,228,48)" fg:x="20905" fg:w="151198"/><text x="12.3541%" y="2255.50">boids.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;bevy_tasks::executor::Executor&gt; &gt;::as_ref</text></g><g><title>boids.exe`std::thread::local::LocalKey&lt;bevy_tasks::executor::LocalExecutor&gt;::with&lt;bevy_tasks::executor::LocalExecutor,bevy_tasks::task_pool::impl$2::new_internal::closure$0::closure$0::closure_env$0,tuple$&lt;&gt; &gt; (151,198 samples, 87.54%)</title><rect x="12.1041%" y="2229" width="87.5444%" height="15" fill="rgb(250,6,50)" fg:x="20905" fg:w="151198"/><text x="12.3541%" y="2239.50">boids.exe`std::thread::local::LocalKey&lt;bevy_tasks::executor::LocalExecutor&gt;::with&lt;bevy_tasks::executor::LocalExecutor,bevy_tasks::task_pool::impl$..</text></g><g><title>boids.exe`std::thread::local::LocalKey&lt;bevy_tasks::executor::LocalExecutor&gt;::try_with (151,197 samples, 87.54%)</title><rect x="12.1047%" y="2213" width="87.5439%" height="15" fill="rgb(250,160,48)" fg:x="20906" fg:w="151197"/><text x="12.3547%" y="2223.50">boids.exe`std::thread::local::LocalKey&lt;bevy_tasks::executor::LocalExecutor&gt;::try_with</text></g><g><title>boids.exe`bevy_tasks::task_pool::impl$2::new_internal::closure$0::closure$0::closure$0 (151,197 samples, 87.54%)</title><rect x="12.1047%" y="2197" width="87.5439%" height="15" fill="rgb(244,216,33)" fg:x="20906" fg:w="151197"/><text x="12.3547%" y="2207.50">boids.exe`bevy_tasks::task_pool::impl$2::new_internal::closure$0::closure$0::closure$0</text></g><g><title>boids.exe`std::panic::catch_unwind (151,197 samples, 87.54%)</title><rect x="12.1047%" y="2181" width="87.5439%" height="15" fill="rgb(207,157,5)" fg:x="20906" fg:w="151197"/><text x="12.3547%" y="2191.50">boids.exe`std::panic::catch_unwind</text></g><g><title>boids.exe`std::panicking::try (151,197 samples, 87.54%)</title><rect x="12.1047%" y="2165" width="87.5439%" height="15" fill="rgb(228,199,8)" fg:x="20906" fg:w="151197"/><text x="12.3547%" y="2175.50">boids.exe`std::panicking::try</text></g><g><title>boids.exe`std::panicking::try::do_call (151,197 samples, 87.54%)</title><rect x="12.1047%" y="2149" width="87.5439%" height="15" fill="rgb(227,80,20)" fg:x="20906" fg:w="151197"/><text x="12.3547%" y="2159.50">boids.exe`std::panicking::try::do_call</text></g><g><title>boids.exe`bevy_tasks::task_pool::impl$2::new_internal::closure$0::closure$0::closure$0::closure$0 (151,197 samples, 87.54%)</title><rect x="12.1047%" y="2133" width="87.5439%" height="15" fill="rgb(222,9,33)" fg:x="20906" fg:w="151197"/><text x="12.3547%" y="2143.50">boids.exe`bevy_tasks::task_pool::impl$2::new_internal::closure$0::closure$0::closure$0::closure$0</text></g><g><title>boids.exe`futures_lite::future::block_on(enum2$&lt;async_executor::impl$5::run::async_fn_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,async_channel::RecvError&gt; &gt;,futures_lite::future::Or&lt;enum2$&lt;bevy_tasks::task_pool::impl$2::new_internal::closure$0::closure$0::closure$0::closure$0::async_block_env$0&gt;,async_channel::Recv&lt;tuple$ (151,197 samples, 87.54%)</title><rect x="12.1047%" y="2117" width="87.5439%" height="15" fill="rgb(239,44,28)" fg:x="20906" fg:w="151197"/><text x="12.3547%" y="2127.50">boids.exe`futures_lite::future::block_on(enum2$&lt;async_executor::impl$5::run::async_fn_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,async_channel::Re..</text></g><g><title>boids.exe`std::thread::local::LocalKey&lt;core::cell::RefCell&lt;tuple$&lt;parking::Parker,core::task::wake::Waker&gt; &gt; &gt;::with&lt;core::cell::RefCell&lt;tuple$&lt;parking::Parker,core::task::wake::Waker&gt; &gt;,futures_lite::future::block_on::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,async_channel::RecvError&gt; &gt;,enum2$&lt;async_executor::impl$5::run::async_fn_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,async_channel::RecvError&gt; &gt;,futures_lite::future::Or&lt;enum2$&lt;bevy_tasks::task_pool::impl$2::new_internal::closure$0::closure$0::closure$0::closure$0::async_block_env$0&gt;,async_channel::Recv&lt;tuple$&lt;&gt; &gt; &gt; &gt; &gt; &gt;,enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,async_channel::RecvError&gt; &gt; &gt;(futures_lite::future::block_on::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,async_channel::RecvError&gt; &gt;,enum2$&lt;async_executor::impl$5::run::async_fn_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,async_channel::RecvError&gt; &gt;,futures_lite::future::Or&lt;enum2$&lt;bevy_tasks::task_pool::impl$2::new_internal::closure$0::closure$0::closure$0::closure$0::async_block_env$0&gt;,async_channel::Recv&lt;tuple$ (151,197 samples, 87.54%)</title><rect x="12.1047%" y="2101" width="87.5439%" height="15" fill="rgb(249,187,43)" fg:x="20906" fg:w="151197"/><text x="12.3547%" y="2111.50">boids.exe`std::thread::local::LocalKey&lt;core::cell::RefCell&lt;tuple$&lt;parking::Parker,core::task::wake::Waker&gt; &gt; &gt;::with&lt;core::cell::RefCell&lt;tuple$&lt;pa..</text></g><g><title>boids.exe`std::thread::local::LocalKey&lt;core::cell::RefCell&lt;tuple$&lt;parking::Parker,core::task::wake::Waker&gt; &gt; &gt;::try_with(futures_lite::future::block_on::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,async_channel::RecvError&gt; &gt;,enum2$&lt;async_executor::impl$5::run::async_fn_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,async_channel::RecvError&gt; &gt;,futures_lite::future::Or&lt;enum2$&lt;bevy_tasks::task_pool::impl$2::new_internal::closure$0::closure$0::closure$0::closure$0::async_block_env$0&gt;,async_channel::Recv&lt;tuple$ (151,197 samples, 87.54%)</title><rect x="12.1047%" y="2085" width="87.5439%" height="15" fill="rgb(216,141,28)" fg:x="20906" fg:w="151197"/><text x="12.3547%" y="2095.50">boids.exe`std::thread::local::LocalKey&lt;core::cell::RefCell&lt;tuple$&lt;parking::Parker,core::task::wake::Waker&gt; &gt; &gt;::try_with(futures_lite::future::blo..</text></g><g><title>boids.exe`futures_lite::future::block_on::closure$0(futures_lite::future::block_on::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,async_channel::RecvError&gt; &gt;,enum2$&lt;async_executor::impl$5::run::async_fn_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,async_channel::RecvError&gt; &gt;,futures_lite::future::Or&lt;enum2$&lt;bevy_tasks::task_pool::impl$2::new_internal::closure$0::closure$0::closure$0::closure$0::async_block_env$0&gt;,async_channel::Recv&lt;tuple$&lt;&gt; &gt; &gt; &gt; &gt; &gt;, core::cell::RefCell&lt;tuple$ (151,197 samples, 87.54%)</title><rect x="12.1047%" y="2069" width="87.5439%" height="15" fill="rgb(230,154,53)" fg:x="20906" fg:w="151197"/><text x="12.3547%" y="2079.50">boids.exe`futures_lite::future::block_on::closure$0(futures_lite::future::block_on::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,async_chann..</text></g><g><title>boids.exe`async_executor::impl$5::run::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;async_executor::impl$5::run::async_fn_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,async_channel::RecvError&gt; &gt;,futures_lite::future::Or&lt;enum2$&lt;bevy_tasks::task_pool::impl$2::new_internal::closure$0::closure$0::closure$0::closure$0::async_block_env$0&gt;,async_channel::Recv&lt;tuple$ (151,197 samples, 87.54%)</title><rect x="12.1047%" y="2053" width="87.5439%" height="15" fill="rgb(227,82,4)" fg:x="20906" fg:w="151197"/><text x="12.3547%" y="2063.50">boids.exe`async_executor::impl$5::run::async_fn$0(core::pin::Pin&lt;ref_mut$&lt;enum2$&lt;async_executor::impl$5::run::async_fn_env$0&lt;enum2$&lt;core::result::..</text></g><g><title>boids.exe`parking::Inner::park(enum2$&lt;core::option::Option (169 samples, 0.10%)</title><rect x="99.5507%" y="2037" width="0.0979%" height="15" fill="rgb(220,107,16)" fg:x="171934" fg:w="169"/><text x="99.8007%" y="2047.50"></text></g><g><title>boids.exe`std::sync::poison::condvar::Condvar::wait(std::sync::poison::mutex::MutexGuard&lt;tuple$ (164 samples, 0.09%)</title><rect x="99.5536%" y="2021" width="0.0950%" height="15" fill="rgb(207,187,2)" fg:x="171939" fg:w="164"/><text x="99.8036%" y="2031.50"></text></g><g><title>boids.exe`std::sync::poison::Flag::get (162 samples, 0.09%)</title><rect x="99.5547%" y="2005" width="0.0938%" height="15" fill="rgb(210,162,52)" fg:x="171941" fg:w="162"/><text x="99.8047%" y="2015.50"></text></g><g><title>boids.exe`core::sync::atomic::AtomicBool::load (162 samples, 0.09%)</title><rect x="99.5547%" y="1989" width="0.0938%" height="15" fill="rgb(217,216,49)" fg:x="171941" fg:w="162"/><text x="99.8047%" y="1999.50"></text></g><g><title>boids.exe`core::sync::atomic::atomic_load (162 samples, 0.09%)</title><rect x="99.5547%" y="1973" width="0.0938%" height="15" fill="rgb(218,146,49)" fg:x="171941" fg:w="162"/><text x="99.8047%" y="1983.50"></text></g><g><title>boids.exe`std::sys::sync::condvar::futex::Condvar::wait (162 samples, 0.09%)</title><rect x="99.5547%" y="1957" width="0.0938%" height="15" fill="rgb(216,55,40)" fg:x="171941" fg:w="162"/><text x="99.8047%" y="1967.50"></text></g><g><title>boids.exe`std::sys::sync::condvar::futex::Condvar::wait_optional_timeout (162 samples, 0.09%)</title><rect x="99.5547%" y="1941" width="0.0938%" height="15" fill="rgb(208,196,21)" fg:x="171941" fg:w="162"/><text x="99.8047%" y="1951.50"></text></g><g><title>`0x7FF89ABA64E9 (39 samples, 0.02%)</title><rect x="99.6543%" y="2213" width="0.0226%" height="15" fill="rgb(242,117,42)" fg:x="172113" fg:w="39"/><text x="99.9043%" y="2223.50"></text></g><g><title>`0x7FF89D9518D4 (37 samples, 0.02%)</title><rect x="99.6555%" y="2197" width="0.0214%" height="15" fill="rgb(210,11,23)" fg:x="172115" fg:w="37"/><text x="99.9055%" y="2207.50"></text></g><g><title>boids.exe`cpal::host::wasapi::stream::process_commands_and_await_signal(cpal::host::wasapi::stream::RunContext*, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;enum2$&lt;cpal::error::StreamError&gt; &gt;,assoc$&lt;Output,tuple$ (57 samples, 0.03%)</title><rect x="99.6491%" y="2245" width="0.0330%" height="15" fill="rgb(217,110,2)" fg:x="172104" fg:w="57"/><text x="99.8991%" y="2255.50"></text></g><g><title>boids.exe`cpal::host::wasapi::stream::wait_for_handle_signal(ref$&lt;slice2$ (49 samples, 0.03%)</title><rect x="99.6538%" y="2229" width="0.0284%" height="15" fill="rgb(229,77,54)" fg:x="172112" fg:w="49"/><text x="99.9038%" y="2239.50"></text></g><g><title>boids.exe`cpal::traits::DeviceTrait::build_output_stream::closure$0&lt;cpal::platform::platform_impl::Device,f32,rodio::stream::impl$7::new_output_stream_with_format::closure_env$1,rodio::stream::impl$7::new_output_stream_with_format::closure_env$0&gt;(cpal::traits::DeviceTrait::build_output_stream::closure_env$0 (103 samples, 0.06%)</title><rect x="99.6931%" y="2229" width="0.0596%" height="15" fill="rgb(218,53,16)" fg:x="172180" fg:w="103"/><text x="99.9431%" y="2239.50"></text></g><g><title>boids.exe`rodio::stream::impl$7::new_output_stream_with_format::closure$1(rodio::stream::impl$7::new_output_stream_with_format::closure_env$1*, ref_mut$&lt;slice2$ (102 samples, 0.06%)</title><rect x="99.6937%" y="2213" width="0.0591%" height="15" fill="rgb(215,38,13)" fg:x="172181" fg:w="102"/><text x="99.9437%" y="2223.50"></text></g><g><title>boids.exe`core::slice::iter::impl$190::for_each(core::slice::iter::IterMut (102 samples, 0.06%)</title><rect x="99.6937%" y="2197" width="0.0591%" height="15" fill="rgb(235,42,18)" fg:x="172181" fg:w="102"/><text x="99.9437%" y="2207.50"></text></g><g><title>boids.exe`rodio::stream::impl$7::new_output_stream_with_format::closure$1::closure$0 (100 samples, 0.06%)</title><rect x="99.6949%" y="2181" width="0.0579%" height="15" fill="rgb(219,66,54)" fg:x="172183" fg:w="100"/><text x="99.9449%" y="2191.50"></text></g><g><title>boids.exe`rodio::dynamic_mixer::impl$2::next(rodio::dynamic_mixer::DynamicMixer (95 samples, 0.06%)</title><rect x="99.6978%" y="2165" width="0.0550%" height="15" fill="rgb(222,205,4)" fg:x="172188" fg:w="95"/><text x="99.9478%" y="2175.50"></text></g><g><title>boids.exe`rodio::dynamic_mixer::DynamicMixer&lt;f32&gt;::sum_current_sources&lt;f32&gt; (86 samples, 0.05%)</title><rect x="99.7030%" y="2149" width="0.0498%" height="15" fill="rgb(227,213,46)" fg:x="172197" fg:w="86"/><text x="99.9530%" y="2159.50"></text></g><g><title>boids.exe`core::mem::swap(alloc::vec::Vec&lt;alloc::boxed::Box&lt;dyn$&lt;rodio::source::Source&lt;assoc$&lt;Item,f32&gt; &gt;,core::marker::Send&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;alloc::boxed::Box&lt;dyn$&lt;rodio::source::Source&lt;assoc$ (63 samples, 0.04%)</title><rect x="99.7163%" y="2133" width="0.0365%" height="15" fill="rgb(250,145,42)" fg:x="172220" fg:w="63"/><text x="99.9663%" y="2143.50"></text></g><g><title>boids.exe`core::intrinsics::typed_swap_nonoverlapping(alloc::vec::Vec&lt;alloc::boxed::Box&lt;dyn$&lt;rodio::source::Source&lt;assoc$&lt;Item,f32&gt; &gt;,core::marker::Send&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;alloc::boxed::Box&lt;dyn$&lt;rodio::source::Source&lt;assoc$ (63 samples, 0.04%)</title><rect x="99.7163%" y="2117" width="0.0365%" height="15" fill="rgb(219,15,2)" fg:x="172220" fg:w="63"/><text x="99.9663%" y="2127.50"></text></g><g><title>boids.exe`core::ptr::swap_nonoverlapping(alloc::vec::Vec&lt;alloc::boxed::Box&lt;dyn$&lt;rodio::source::Source&lt;assoc$&lt;Item,f32&gt; &gt;,core::marker::Send&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;alloc::boxed::Box&lt;dyn$&lt;rodio::source::Source&lt;assoc$ (63 samples, 0.04%)</title><rect x="99.7163%" y="2101" width="0.0365%" height="15" fill="rgb(231,181,52)" fg:x="172220" fg:w="63"/><text x="99.9663%" y="2111.50"></text></g><g><title>boids.exe`core::ptr::swap_nonoverlapping::runtime(alloc::vec::Vec&lt;alloc::boxed::Box&lt;dyn$&lt;rodio::source::Source&lt;assoc$&lt;Item,f32&gt; &gt;,core::marker::Send&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;*, alloc::vec::Vec&lt;alloc::boxed::Box&lt;dyn$&lt;rodio::source::Source&lt;assoc$ (63 samples, 0.04%)</title><rect x="99.7163%" y="2085" width="0.0365%" height="15" fill="rgb(235,1,42)" fg:x="172220" fg:w="63"/><text x="99.9663%" y="2095.50"></text></g><g><title>boids.exe`core::ptr::swap_nonoverlapping_bytes(unsigned char*, unsigned char*, core::num::nonzero::NonZero (63 samples, 0.04%)</title><rect x="99.7163%" y="2069" width="0.0365%" height="15" fill="rgb(249,88,27)" fg:x="172220" fg:w="63"/><text x="99.9663%" y="2079.50"></text></g><g><title>boids.exe`core::ptr::swap_nonoverlapping_bytes::swap_nonoverlapping_chunks(core::mem::maybe_uninit::MaybeUninit&lt;array$&lt;u8,8&gt; &gt;*, core::mem::maybe_uninit::MaybeUninit&lt;array$&lt;u8,8&gt; &gt;*, core::num::nonzero::NonZero (63 samples, 0.04%)</title><rect x="99.7163%" y="2053" width="0.0365%" height="15" fill="rgb(235,145,16)" fg:x="172220" fg:w="63"/><text x="99.9663%" y="2063.50"></text></g><g><title>boids.exe`core::ptr::swap_chunk(core::mem::maybe_uninit::MaybeUninit&lt;array$&lt;u8,8&gt; &gt;*, core::mem::maybe_uninit::MaybeUninit&lt;array$ (63 samples, 0.04%)</title><rect x="99.7163%" y="2037" width="0.0365%" height="15" fill="rgb(237,114,19)" fg:x="172220" fg:w="63"/><text x="99.9663%" y="2047.50"></text></g><g><title>boids.exe`alloc::vec::drain::impl$7::drop&lt;alloc::boxed::Box&lt;dyn$&lt;rodio::source::Source&lt;assoc$&lt;Item,f32&gt; &gt;,core::marker::Send&gt;,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;(alloc::vec::drain::Drain&lt;alloc::boxed::Box&lt;dyn$&lt;rodio::source::Source&lt;assoc$ (61 samples, 0.04%)</title><rect x="99.7174%" y="2021" width="0.0353%" height="15" fill="rgb(238,51,50)" fg:x="172222" fg:w="61"/><text x="99.9674%" y="2031.50"></text></g><g><title>boids.exe`core::mem::take(core::slice::iter::Iter&lt;alloc::boxed::Box&lt;dyn$&lt;rodio::source::Source&lt;assoc$ (18 samples, 0.01%)</title><rect x="99.7423%" y="2005" width="0.0104%" height="15" fill="rgb(205,194,25)" fg:x="172265" fg:w="18"/><text x="99.9923%" y="2015.50"></text></g><g><title>boids.exe`core::mem::replace(core::slice::iter::Iter&lt;alloc::boxed::Box&lt;dyn$&lt;rodio::source::Source&lt;assoc$&lt;Item,f32&gt; &gt;,core::marker::Send&gt;,alloc::alloc::Global&gt; &gt;*, core::slice::iter::Iter&lt;alloc::boxed::Box&lt;dyn$&lt;rodio::source::Source&lt;assoc$ (18 samples, 0.01%)</title><rect x="99.7423%" y="1989" width="0.0104%" height="15" fill="rgb(215,203,17)" fg:x="172265" fg:w="18"/><text x="99.9923%" y="1999.50"></text></g><g><title>boids.exe`core::ops::function::FnOnce::call_once&lt;std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;cpal::host::wasapi::stream::impl$1::new_output::closure_env$0&lt;cpal::traits::DeviceTrait::build_output_stream::closure_env$0&lt;cpal::platform::platform_impl::Device,f32,rodio::stream::impl$7::new_output_stream_with_format::closure_env$1,rodio::stream::impl$7::new_output_stream_with_format::closure_env$0&gt;,rodio::stream::impl$7::new_output_stream_with_format::closure_env$0&gt;,tuple$&lt;&gt; &gt;,tuple$&lt;&gt; &gt;(std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;cpal::host::wasapi::stream::impl$1::new_output::closure_env$0&lt;cpal::traits::DeviceTrait::build_output_stream::closure_env$0&lt;cpal::platform::platform_impl::Device,f32,rodio::stream::impl$7::new_output_stream_with_format::closure_env$1,rodio::stream::impl$7::new_output_stream_with_format::closure_env$0&gt;,rodio::stream::impl$7::new_output_stream_with_format::closure_env$0&gt;,tuple$ (192 samples, 0.11%)</title><rect x="99.6485%" y="2437" width="0.1112%" height="15" fill="rgb(233,112,49)" fg:x="172103" fg:w="192"/><text x="99.8985%" y="2447.50"></text></g><g><title>boids.exe`std::thread::impl$0::spawn_unchecked_::closure$1(std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;cpal::host::wasapi::stream::impl$1::new_output::closure_env$0&lt;cpal::traits::DeviceTrait::build_output_stream::closure_env$0&lt;cpal::platform::platform_impl::Device,f32,rodio::stream::impl$7::new_output_stream_with_format::closure_env$1,rodio::stream::impl$7::new_output_stream_with_format::closure_env$0&gt;,rodio::stream::impl$7::new_output_stream_with_format::closure_env$0&gt;,tuple$ (192 samples, 0.11%)</title><rect x="99.6485%" y="2421" width="0.1112%" height="15" fill="rgb(241,130,26)" fg:x="172103" fg:w="192"/><text x="99.8985%" y="2431.50"></text></g><g><title>boids.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;cpal::host::wasapi::stream::impl$1::new_output::closure_env$0&lt;cpal::traits::DeviceTrait::build_output_stream::closure_env$0&lt;cpal::platform::platform_impl::Device,f32,rodio::stream::impl$7::new_output_stream_with_format::closure_env$1,rodio::stream::impl$7::new_output_stream_with_format::closure_env$0&gt;,rodio::stream::impl$7::new_output_stream_with_format::closure_env$0&gt;,tuple$ (192 samples, 0.11%)</title><rect x="99.6485%" y="2405" width="0.1112%" height="15" fill="rgb(252,223,19)" fg:x="172103" fg:w="192"/><text x="99.8985%" y="2415.50"></text></g><g><title>boids.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;cpal::host::wasapi::stream::impl$1::new_output::closure_env$0&lt;cpal::traits::DeviceTrait::build_output_stream::closure_env$0&lt;cpal::platform::platform_impl::Device,f32,rodio::stream::impl$7::new_output_stream_with_format::closure_env$1,rodio::stream::impl$7::new_output_stream_with_format::closure_env$0&gt;,rodio::stream::impl$7::new_output_stream_with_format::closure_env$0&gt;,tuple$ (192 samples, 0.11%)</title><rect x="99.6485%" y="2389" width="0.1112%" height="15" fill="rgb(211,95,25)" fg:x="172103" fg:w="192"/><text x="99.8985%" y="2399.50"></text></g><g><title>boids.exe`std::panicking::try::do_call (192 samples, 0.11%)</title><rect x="99.6485%" y="2373" width="0.1112%" height="15" fill="rgb(251,182,27)" fg:x="172103" fg:w="192"/><text x="99.8985%" y="2383.50"></text></g><g><title>boids.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;cpal::host::wasapi::stream::impl$1::new_output::closure_env$0&lt;cpal::traits::DeviceTrait::build_output_stream::closure_env$0&lt;cpal::platform::platform_impl::Device,f32,rodio::stream::impl$7::new_output_stream_with_format::closure_env$1,rodio::stream::impl$7::new_output_stream_with_format::closure_env$0&gt;,rodio::stream::impl$7::new_output_stream_with_format::closure_env$0&gt;,tuple$ (192 samples, 0.11%)</title><rect x="99.6485%" y="2357" width="0.1112%" height="15" fill="rgb(238,24,4)" fg:x="172103" fg:w="192"/><text x="99.8985%" y="2367.50"></text></g><g><title>boids.exe`std::thread::impl$0::spawn_unchecked_::closure$1::closure$0(std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;cpal::host::wasapi::stream::impl$1::new_output::closure_env$0&lt;cpal::traits::DeviceTrait::build_output_stream::closure_env$0&lt;cpal::platform::platform_impl::Device,f32,rodio::stream::impl$7::new_output_stream_with_format::closure_env$1,rodio::stream::impl$7::new_output_stream_with_format::closure_env$0&gt;,rodio::stream::impl$7::new_output_stream_with_format::closure_env$0&gt;,tuple$ (192 samples, 0.11%)</title><rect x="99.6485%" y="2341" width="0.1112%" height="15" fill="rgb(224,220,25)" fg:x="172103" fg:w="192"/><text x="99.8985%" y="2351.50"></text></g><g><title>boids.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;cpal::host::wasapi::stream::impl$1::new_output::closure_env$0&lt;cpal::traits::DeviceTrait::build_output_stream::closure_env$0&lt;cpal::platform::platform_impl::Device,f32,rodio::stream::impl$7::new_output_stream_with_format::closure_env$1,rodio::stream::impl$7::new_output_stream_with_format::closure_env$0&gt;,rodio::stream::impl$7::new_output_stream_with_format::closure_env$0&gt;,tuple$&lt;&gt; &gt;(cpal::host::wasapi::stream::impl$1::new_output::closure_env$0&lt;cpal::traits::DeviceTrait::build_output_stream::closure_env$0 (192 samples, 0.11%)</title><rect x="99.6485%" y="2325" width="0.1112%" height="15" fill="rgb(239,133,26)" fg:x="172103" fg:w="192"/><text x="99.8985%" y="2335.50"></text></g><g><title>boids.exe`cpal::host::wasapi::stream::impl$1::new_output::closure$0(cpal::host::wasapi::stream::impl$1::new_output::closure_env$0&lt;cpal::traits::DeviceTrait::build_output_stream::closure_env$0 (192 samples, 0.11%)</title><rect x="99.6485%" y="2309" width="0.1112%" height="15" fill="rgb(211,94,48)" fg:x="172103" fg:w="192"/><text x="99.8985%" y="2319.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place(cpal::traits::DeviceTrait::build_output_stream::closure_env$0 (192 samples, 0.11%)</title><rect x="99.6485%" y="2293" width="0.1112%" height="15" fill="rgb(239,87,6)" fg:x="172103" fg:w="192"/><text x="99.8985%" y="2303.50"></text></g><g><title>boids.exe`core::ptr::drop_in_place (192 samples, 0.11%)</title><rect x="99.6485%" y="2277" width="0.1112%" height="15" fill="rgb(227,62,0)" fg:x="172103" fg:w="192"/><text x="99.8985%" y="2287.50"></text></g><g><title>boids.exe`cpal::host::wasapi::stream::run_output(cpal::host::wasapi::stream::RunContext, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;ref_mut$&lt;cpal::Data&gt;,ref$&lt;cpal::OutputCallbackInfo&gt; &gt;,assoc$&lt;Output,tuple$&lt;&gt; &gt; &gt; &gt; &gt;, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;enum2$&lt;cpal::error::StreamError&gt; &gt;,assoc$&lt;Output,tuple$ (192 samples, 0.11%)</title><rect x="99.6485%" y="2261" width="0.1112%" height="15" fill="rgb(211,226,4)" fg:x="172103" fg:w="192"/><text x="99.8985%" y="2271.50"></text></g><g><title>boids.exe`cpal::host::wasapi::stream::process_output(cpal::host::wasapi::stream::StreamInner*, windows::Win32::Media::Audio::IAudioRenderClient, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;ref_mut$&lt;cpal::Data&gt;,ref$&lt;cpal::OutputCallbackInfo&gt; &gt;,assoc$&lt;Output,tuple$&lt;&gt; &gt; &gt; &gt; &gt;, ref_mut$&lt;dyn$&lt;core::ops::function::FnMut&lt;tuple$&lt;enum2$&lt;cpal::error::StreamError&gt; &gt;,assoc$&lt;Output,tuple$ (134 samples, 0.08%)</title><rect x="99.6821%" y="2245" width="0.0776%" height="15" fill="rgb(253,38,52)" fg:x="172161" fg:w="134"/><text x="99.9321%" y="2255.50"></text></g><g><title>`0x7FF89AB93CF3 (29 samples, 0.02%)</title><rect x="99.7736%" y="2197" width="0.0168%" height="15" fill="rgb(229,126,40)" fg:x="172319" fg:w="29"/><text x="100.0236%" y="2207.50"></text></g><g><title>`0x7FF89D9526B4 (26 samples, 0.02%)</title><rect x="99.7753%" y="2181" width="0.0151%" height="15" fill="rgb(229,165,44)" fg:x="172322" fg:w="26"/><text x="100.0253%" y="2191.50"></text></g><g><title>boids.exe`std::sys::pal::windows::time::WaitableTimer::high_resolution (32 samples, 0.02%)</title><rect x="99.7725%" y="2213" width="0.0185%" height="15" fill="rgb(247,95,47)" fg:x="172317" fg:w="32"/><text x="100.0225%" y="2223.50"></text></g><g><title>`0x7FF89AB8285E (32 samples, 0.02%)</title><rect x="99.7910%" y="2197" width="0.0185%" height="15" fill="rgb(216,140,30)" fg:x="172349" fg:w="32"/><text x="100.0410%" y="2207.50"></text></g><g><title>`0x7FF89D954534 (31 samples, 0.02%)</title><rect x="99.7916%" y="2181" width="0.0179%" height="15" fill="rgb(246,214,8)" fg:x="172350" fg:w="31"/><text x="100.0416%" y="2191.50"></text></g><g><title>boids.exe`std::sys::pal::windows::time::WaitableTimer::set (33 samples, 0.02%)</title><rect x="99.7910%" y="2213" width="0.0191%" height="15" fill="rgb(227,224,15)" fg:x="172349" fg:w="33"/><text x="100.0410%" y="2223.50"></text></g><g><title>`0x7FF89AB7902F (33 samples, 0.02%)</title><rect x="99.8159%" y="2197" width="0.0191%" height="15" fill="rgb(233,175,4)" fg:x="172392" fg:w="33"/><text x="100.0659%" y="2207.50"></text></g><g><title>`0x7FF89D950F64 (32 samples, 0.02%)</title><rect x="99.8165%" y="2181" width="0.0185%" height="15" fill="rgb(221,66,45)" fg:x="172393" fg:w="32"/><text x="100.0665%" y="2191.50"></text></g><g><title>boids.exe`std::sync::mpsc::Receiver&lt;tuple$&lt;&gt; &gt;::try_recv (143 samples, 0.08%)</title><rect x="99.7701%" y="2293" width="0.0828%" height="15" fill="rgb(221,178,18)" fg:x="172313" fg:w="143"/><text x="100.0201%" y="2303.50"></text></g><g><title>boids.exe`std::sync::mpmc::Receiver&lt;tuple$&lt;&gt; &gt;::try_recv (143 samples, 0.08%)</title><rect x="99.7701%" y="2277" width="0.0828%" height="15" fill="rgb(213,81,29)" fg:x="172313" fg:w="143"/><text x="100.0201%" y="2287.50"></text></g><g><title>boids.exe`std::thread::sleep (142 samples, 0.08%)</title><rect x="99.7707%" y="2261" width="0.0822%" height="15" fill="rgb(220,89,49)" fg:x="172314" fg:w="142"/><text x="100.0207%" y="2271.50"></text></g><g><title>boids.exe`std::sys::pal::windows::thread::Thread::sleep (142 samples, 0.08%)</title><rect x="99.7707%" y="2245" width="0.0822%" height="15" fill="rgb(227,60,33)" fg:x="172314" fg:w="142"/><text x="100.0207%" y="2255.50"></text></g><g><title>boids.exe`std::sys::pal::windows::thread::impl$0::sleep::high_precision_sleep (142 samples, 0.08%)</title><rect x="99.7707%" y="2229" width="0.0822%" height="15" fill="rgb(205,113,12)" fg:x="172314" fg:w="142"/><text x="100.0207%" y="2239.50"></text></g><g><title>boids.exe`std::sys::pal::windows::time::WaitableTimer::wait (74 samples, 0.04%)</title><rect x="99.8101%" y="2213" width="0.0428%" height="15" fill="rgb(211,32,1)" fg:x="172382" fg:w="74"/><text x="100.0601%" y="2223.50"></text></g><g><title>`0x7FF89AB8998E (30 samples, 0.02%)</title><rect x="99.8356%" y="2197" width="0.0174%" height="15" fill="rgb(246,2,12)" fg:x="172426" fg:w="30"/><text x="100.0856%" y="2207.50"></text></g><g><title>`0x7FF89D950E04 (28 samples, 0.02%)</title><rect x="99.8367%" y="2181" width="0.0162%" height="15" fill="rgb(243,37,27)" fg:x="172428" fg:w="28"/><text x="100.0867%" y="2191.50"></text></g><g><title>boids.exe`core::ops::function::FnOnce::call_once&lt;std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;gilrs_core::platform::platform::gamepad::impl$1::spawn_thread::closure_env$2,tuple$&lt;&gt; &gt;,tuple$&lt;&gt; &gt;(std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;gilrs_core::platform::platform::gamepad::impl$1::spawn_thread::closure_env$2,tuple$ (156 samples, 0.09%)</title><rect x="99.7690%" y="2437" width="0.0903%" height="15" fill="rgb(248,211,31)" fg:x="172311" fg:w="156"/><text x="100.0190%" y="2447.50"></text></g><g><title>boids.exe`std::thread::impl$0::spawn_unchecked_::closure$1(std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;gilrs_core::platform::platform::gamepad::impl$1::spawn_thread::closure_env$2,tuple$ (156 samples, 0.09%)</title><rect x="99.7690%" y="2421" width="0.0903%" height="15" fill="rgb(242,146,47)" fg:x="172311" fg:w="156"/><text x="100.0190%" y="2431.50"></text></g><g><title>boids.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;gilrs_core::platform::platform::gamepad::impl$1::spawn_thread::closure_env$2,tuple$ (156 samples, 0.09%)</title><rect x="99.7690%" y="2405" width="0.0903%" height="15" fill="rgb(206,70,20)" fg:x="172311" fg:w="156"/><text x="100.0190%" y="2415.50"></text></g><g><title>boids.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;gilrs_core::platform::platform::gamepad::impl$1::spawn_thread::closure_env$2,tuple$ (156 samples, 0.09%)</title><rect x="99.7690%" y="2389" width="0.0903%" height="15" fill="rgb(215,10,51)" fg:x="172311" fg:w="156"/><text x="100.0190%" y="2399.50"></text></g><g><title>boids.exe`std::panicking::try::do_call (156 samples, 0.09%)</title><rect x="99.7690%" y="2373" width="0.0903%" height="15" fill="rgb(243,178,53)" fg:x="172311" fg:w="156"/><text x="100.0190%" y="2383.50"></text></g><g><title>boids.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;gilrs_core::platform::platform::gamepad::impl$1::spawn_thread::closure_env$2,tuple$ (156 samples, 0.09%)</title><rect x="99.7690%" y="2357" width="0.0903%" height="15" fill="rgb(233,221,20)" fg:x="172311" fg:w="156"/><text x="100.0190%" y="2367.50"></text></g><g><title>boids.exe`std::thread::impl$0::spawn_unchecked_::closure$1::closure$0(std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;gilrs_core::platform::platform::gamepad::impl$1::spawn_thread::closure_env$2,tuple$ (156 samples, 0.09%)</title><rect x="99.7690%" y="2341" width="0.0903%" height="15" fill="rgb(218,95,35)" fg:x="172311" fg:w="156"/><text x="100.0190%" y="2351.50"></text></g><g><title>boids.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;gilrs_core::platform::platform::gamepad::impl$1::spawn_thread::closure_env$2,tuple$&lt;&gt; &gt; (156 samples, 0.09%)</title><rect x="99.7690%" y="2325" width="0.0903%" height="15" fill="rgb(229,13,5)" fg:x="172311" fg:w="156"/><text x="100.0190%" y="2335.50"></text></g><g><title>boids.exe`gilrs_core::platform::platform::gamepad::impl$1::spawn_thread::closure$2 (156 samples, 0.09%)</title><rect x="99.7690%" y="2309" width="0.0903%" height="15" fill="rgb(252,164,30)" fg:x="172311" fg:w="156"/><text x="100.0190%" y="2319.50"></text></g><g><title>`0x7FF885303087 (22 samples, 0.01%)</title><rect x="99.8703%" y="2149" width="0.0127%" height="15" fill="rgb(232,68,36)" fg:x="172486" fg:w="22"/><text x="100.1203%" y="2159.50"></text></g><g><title>`0x7FF863F6C7D0 (22 samples, 0.01%)</title><rect x="99.8703%" y="2133" width="0.0127%" height="15" fill="rgb(219,59,54)" fg:x="172486" fg:w="22"/><text x="100.1203%" y="2143.50"></text></g><g><title>`0x7FF863F6B41F (19 samples, 0.01%)</title><rect x="99.8720%" y="2117" width="0.0110%" height="15" fill="rgb(250,92,33)" fg:x="172489" fg:w="19"/><text x="100.1220%" y="2127.50"></text></g><g><title>`0x7FF89ABD277F (19 samples, 0.01%)</title><rect x="99.8720%" y="2101" width="0.0110%" height="15" fill="rgb(229,162,54)" fg:x="172489" fg:w="19"/><text x="100.1220%" y="2111.50"></text></g><g><title>`0x7FF89AB77471 (19 samples, 0.01%)</title><rect x="99.8720%" y="2085" width="0.0110%" height="15" fill="rgb(244,114,52)" fg:x="172489" fg:w="19"/><text x="100.1220%" y="2095.50"></text></g><g><title>`0x7FF89AB7B3D2 (19 samples, 0.01%)</title><rect x="99.8720%" y="2069" width="0.0110%" height="15" fill="rgb(212,211,43)" fg:x="172489" fg:w="19"/><text x="100.1220%" y="2079.50"></text></g><g><title>`0x7FF89D8DA76A (19 samples, 0.01%)</title><rect x="99.8720%" y="2053" width="0.0110%" height="15" fill="rgb(226,147,8)" fg:x="172489" fg:w="19"/><text x="100.1220%" y="2063.50"></text></g><g><title>`0x7FF89D8C90CC (19 samples, 0.01%)</title><rect x="99.8720%" y="2037" width="0.0110%" height="15" fill="rgb(226,23,13)" fg:x="172489" fg:w="19"/><text x="100.1220%" y="2047.50"></text></g><g><title>`0x7FF824926B27 (52 samples, 0.03%)</title><rect x="99.8969%" y="2005" width="0.0301%" height="15" fill="rgb(240,63,4)" fg:x="172532" fg:w="52"/><text x="100.1469%" y="2015.50"></text></g><g><title>`0x7FF824905A11 (54 samples, 0.03%)</title><rect x="99.8964%" y="2021" width="0.0313%" height="15" fill="rgb(221,1,32)" fg:x="172531" fg:w="54"/><text x="100.1464%" y="2031.50"></text></g><g><title>`0x7FF8256E5108 (58 samples, 0.03%)</title><rect x="99.8946%" y="2037" width="0.0336%" height="15" fill="rgb(242,117,10)" fg:x="172528" fg:w="58"/><text x="100.1446%" y="2047.50"></text></g><g><title>`0x7FF825331220 (77 samples, 0.04%)</title><rect x="99.8854%" y="2069" width="0.0446%" height="15" fill="rgb(249,172,44)" fg:x="172512" fg:w="77"/><text x="100.1354%" y="2079.50"></text></g><g><title>`0x7FF8256E42B8 (77 samples, 0.04%)</title><rect x="99.8854%" y="2053" width="0.0446%" height="15" fill="rgb(244,46,45)" fg:x="172512" fg:w="77"/><text x="100.1354%" y="2063.50"></text></g><g><title>`0x7FF8254C5267 (19 samples, 0.01%)</title><rect x="99.9311%" y="2005" width="0.0110%" height="15" fill="rgb(206,43,17)" fg:x="172591" fg:w="19"/><text x="100.1811%" y="2015.50"></text></g><g><title>`0x7FF825465CF8 (22 samples, 0.01%)</title><rect x="99.9299%" y="2037" width="0.0127%" height="15" fill="rgb(239,218,39)" fg:x="172589" fg:w="22"/><text x="100.1799%" y="2047.50"></text></g><g><title>`0x7FF825480EB0 (20 samples, 0.01%)</title><rect x="99.9311%" y="2021" width="0.0116%" height="15" fill="rgb(208,169,54)" fg:x="172591" fg:w="20"/><text x="100.1811%" y="2031.50"></text></g><g><title>`0x7FF8252BB966 (23 samples, 0.01%)</title><rect x="99.9299%" y="2053" width="0.0133%" height="15" fill="rgb(247,25,42)" fg:x="172589" fg:w="23"/><text x="100.1799%" y="2063.50"></text></g><g><title>`0x7FF8253313F3 (31 samples, 0.02%)</title><rect x="99.9299%" y="2069" width="0.0179%" height="15" fill="rgb(226,23,31)" fg:x="172589" fg:w="31"/><text x="100.1799%" y="2079.50"></text></g><g><title>`0x7FF885301B67 (139 samples, 0.08%)</title><rect x="99.8686%" y="2165" width="0.0805%" height="15" fill="rgb(247,16,28)" fg:x="172483" fg:w="139"/><text x="100.1186%" y="2175.50"></text></g><g><title>`0x7FF8853030AF (114 samples, 0.07%)</title><rect x="99.8830%" y="2149" width="0.0660%" height="15" fill="rgb(231,147,38)" fg:x="172508" fg:w="114"/><text x="100.1330%" y="2159.50"></text></g><g><title>`0x7FF863F6CCCE (114 samples, 0.07%)</title><rect x="99.8830%" y="2133" width="0.0660%" height="15" fill="rgb(253,81,48)" fg:x="172508" fg:w="114"/><text x="100.1330%" y="2143.50"></text></g><g><title>`0x7FF825355654 (114 samples, 0.07%)</title><rect x="99.8830%" y="2117" width="0.0660%" height="15" fill="rgb(249,222,43)" fg:x="172508" fg:w="114"/><text x="100.1330%" y="2127.50"></text></g><g><title>`0x7FF825330C45 (114 samples, 0.07%)</title><rect x="99.8830%" y="2101" width="0.0660%" height="15" fill="rgb(221,3,27)" fg:x="172508" fg:w="114"/><text x="100.1330%" y="2111.50"></text></g><g><title>`0x7FF82533106F (114 samples, 0.07%)</title><rect x="99.8830%" y="2085" width="0.0660%" height="15" fill="rgb(228,180,5)" fg:x="172508" fg:w="114"/><text x="100.1330%" y="2095.50"></text></g><g><title>`0x7FF8853214E9 (153 samples, 0.09%)</title><rect x="99.8616%" y="2213" width="0.0886%" height="15" fill="rgb(227,131,42)" fg:x="172471" fg:w="153"/><text x="100.1116%" y="2223.50"></text></g><g><title>`0x7FF88532174A (153 samples, 0.09%)</title><rect x="99.8616%" y="2197" width="0.0886%" height="15" fill="rgb(212,3,39)" fg:x="172471" fg:w="153"/><text x="100.1116%" y="2207.50"></text></g><g><title>`0x7FF885305574 (153 samples, 0.09%)</title><rect x="99.8616%" y="2181" width="0.0886%" height="15" fill="rgb(226,45,5)" fg:x="172471" fg:w="153"/><text x="100.1116%" y="2191.50"></text></g><g><title>boids.exe`core::result::impl$27::branch(enum2$&lt;core::result::Result&lt;tuple$ (157 samples, 0.09%)</title><rect x="99.8605%" y="2277" width="0.0909%" height="15" fill="rgb(215,167,45)" fg:x="172469" fg:w="157"/><text x="100.1105%" y="2287.50"></text></g><g><title>boids.exe`wgpu_hal::gles::wgl::setup_pixel_format (157 samples, 0.09%)</title><rect x="99.8605%" y="2261" width="0.0909%" height="15" fill="rgb(250,218,53)" fg:x="172469" fg:w="157"/><text x="100.1105%" y="2271.50"></text></g><g><title>`0x7FF89A9FB583 (157 samples, 0.09%)</title><rect x="99.8605%" y="2245" width="0.0909%" height="15" fill="rgb(207,140,0)" fg:x="172469" fg:w="157"/><text x="100.1105%" y="2255.50"></text></g><g><title>`0x7FF885321163 (157 samples, 0.09%)</title><rect x="99.8605%" y="2229" width="0.0909%" height="15" fill="rgb(238,133,51)" fg:x="172469" fg:w="157"/><text x="100.1105%" y="2239.50"></text></g><g><title>`0x7FF89D3C259D (172,628 samples, 99.95%)</title><rect x="0.0023%" y="2549" width="99.9525%" height="15" fill="rgb(218,203,53)" fg:x="4" fg:w="172628"/><text x="0.2523%" y="2559.50">`0x7FF89D3C259D</text></g><g><title>boids.exe`std::sys::pal::windows::thread::impl$0::new::thread_start (168,321 samples, 97.46%)</title><rect x="2.4961%" y="2533" width="97.4587%" height="15" fill="rgb(226,184,25)" fg:x="4311" fg:w="168321"/><text x="2.7461%" y="2543.50">boids.exe`std::sys::pal::windows::thread::impl$0::new::thread_start</text></g><g><title>boids.exe`alloc::boxed::impl$28::call_once (168,321 samples, 97.46%)</title><rect x="2.4961%" y="2517" width="97.4587%" height="15" fill="rgb(231,121,21)" fg:x="4311" fg:w="168321"/><text x="2.7461%" y="2527.50">boids.exe`alloc::boxed::impl$28::call_once</text></g><g><title>boids.exe`alloc::boxed::impl$28::call_once (168,321 samples, 97.46%)</title><rect x="2.4961%" y="2501" width="97.4587%" height="15" fill="rgb(251,14,34)" fg:x="4311" fg:w="168321"/><text x="2.7461%" y="2511.50">boids.exe`alloc::boxed::impl$28::call_once</text></g><g><title>boids.exe`alloc::boxed::impl$8::drop (168,321 samples, 97.46%)</title><rect x="2.4961%" y="2485" width="97.4587%" height="15" fill="rgb(249,193,11)" fg:x="4311" fg:w="168321"/><text x="2.7461%" y="2495.50">boids.exe`alloc::boxed::impl$8::drop</text></g><g><title>boids.exe`core::alloc::layout::Layout::for_value_raw (168,321 samples, 97.46%)</title><rect x="2.4961%" y="2469" width="97.4587%" height="15" fill="rgb(220,172,37)" fg:x="4311" fg:w="168321"/><text x="2.7461%" y="2479.50">boids.exe`core::alloc::layout::Layout::for_value_raw</text></g><g><title>boids.exe`core::mem::size_of_val_raw (168,321 samples, 97.46%)</title><rect x="2.4961%" y="2453" width="97.4587%" height="15" fill="rgb(231,229,43)" fg:x="4311" fg:w="168321"/><text x="2.7461%" y="2463.50">boids.exe`core::mem::size_of_val_raw</text></g><g><title>boids.exe`core::ops::function::FnOnce::call_once&lt;std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;wgpu_hal::gles::wgl::create_instance_device::closure_env$0,tuple$&lt;&gt; &gt;,tuple$&lt;&gt; &gt;(std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;wgpu_hal::gles::wgl::create_instance_device::closure_env$0,tuple$ (165 samples, 0.10%)</title><rect x="99.8593%" y="2437" width="0.0955%" height="15" fill="rgb(250,161,5)" fg:x="172467" fg:w="165"/><text x="100.1093%" y="2447.50"></text></g><g><title>boids.exe`std::thread::impl$0::spawn_unchecked_::closure$1(std::thread::impl$0::spawn_unchecked_::closure_env$1&lt;wgpu_hal::gles::wgl::create_instance_device::closure_env$0,tuple$ (165 samples, 0.10%)</title><rect x="99.8593%" y="2421" width="0.0955%" height="15" fill="rgb(218,225,18)" fg:x="172467" fg:w="165"/><text x="100.1093%" y="2431.50"></text></g><g><title>boids.exe`std::panic::catch_unwind(core::panic::unwind_safe::AssertUnwindSafe&lt;std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;wgpu_hal::gles::wgl::create_instance_device::closure_env$0,tuple$ (165 samples, 0.10%)</title><rect x="99.8593%" y="2405" width="0.0955%" height="15" fill="rgb(245,45,42)" fg:x="172467" fg:w="165"/><text x="100.1093%" y="2415.50"></text></g><g><title>boids.exe`std::panicking::try(core::panic::unwind_safe::AssertUnwindSafe&lt;std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;wgpu_hal::gles::wgl::create_instance_device::closure_env$0,tuple$ (165 samples, 0.10%)</title><rect x="99.8593%" y="2389" width="0.0955%" height="15" fill="rgb(211,115,1)" fg:x="172467" fg:w="165"/><text x="100.1093%" y="2399.50"></text></g><g><title>boids.exe`std::panicking::try::do_call (165 samples, 0.10%)</title><rect x="99.8593%" y="2373" width="0.0955%" height="15" fill="rgb(248,133,52)" fg:x="172467" fg:w="165"/><text x="100.1093%" y="2383.50"></text></g><g><title>boids.exe`core::panic::unwind_safe::impl$25::call_once(core::panic::unwind_safe::AssertUnwindSafe&lt;std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;wgpu_hal::gles::wgl::create_instance_device::closure_env$0,tuple$ (165 samples, 0.10%)</title><rect x="99.8593%" y="2357" width="0.0955%" height="15" fill="rgb(238,100,21)" fg:x="172467" fg:w="165"/><text x="100.1093%" y="2367.50"></text></g><g><title>boids.exe`std::thread::impl$0::spawn_unchecked_::closure$1::closure$0(std::thread::impl$0::spawn_unchecked_::closure$1::closure_env$0&lt;wgpu_hal::gles::wgl::create_instance_device::closure_env$0,tuple$ (165 samples, 0.10%)</title><rect x="99.8593%" y="2341" width="0.0955%" height="15" fill="rgb(247,144,11)" fg:x="172467" fg:w="165"/><text x="100.1093%" y="2351.50"></text></g><g><title>boids.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;wgpu_hal::gles::wgl::create_instance_device::closure_env$0,tuple$&lt;&gt; &gt; (165 samples, 0.10%)</title><rect x="99.8593%" y="2325" width="0.0955%" height="15" fill="rgb(206,164,16)" fg:x="172467" fg:w="165"/><text x="100.1093%" y="2335.50"></text></g><g><title>boids.exe`wgpu_hal::gles::wgl::create_instance_device::closure$0 (165 samples, 0.10%)</title><rect x="99.8593%" y="2309" width="0.0955%" height="15" fill="rgb(222,34,3)" fg:x="172467" fg:w="165"/><text x="100.1093%" y="2319.50"></text></g><g><title>boids.exe`wgpu_hal::gles::wgl::create_instance_device::closure$0::closure$0 (163 samples, 0.09%)</title><rect x="99.8605%" y="2293" width="0.0944%" height="15" fill="rgb(248,82,4)" fg:x="172469" fg:w="163"/><text x="100.1105%" y="2303.50"></text></g><g><title>`0x7FF89D90AF58 (172,630 samples, 99.95%)</title><rect x="0.0023%" y="2565" width="99.9537%" height="15" fill="rgb(228,81,46)" fg:x="4" fg:w="172630"/><text x="0.2523%" y="2575.50">`0x7FF89D90AF58</text></g><g><title>`0x7FF89D92460F (24 samples, 0.01%)</title><rect x="99.9572%" y="2533" width="0.0139%" height="15" fill="rgb(227,67,47)" fg:x="172636" fg:w="24"/><text x="100.2072%" y="2543.50"></text></g><g><title>all (172,710 samples, 100%)</title><rect x="0.0000%" y="2581" width="100.0000%" height="15" fill="rgb(215,93,53)" fg:x="0" fg:w="172710"/><text x="0.2500%" y="2591.50"></text></g><g><title>`0x7FF89D92446E (74 samples, 0.04%)</title><rect x="99.9572%" y="2565" width="0.0428%" height="15" fill="rgb(248,194,39)" fg:x="172636" fg:w="74"/><text x="100.2072%" y="2575.50"></text></g><g><title>`0x7FF89D924543 (74 samples, 0.04%)</title><rect x="99.9572%" y="2549" width="0.0428%" height="15" fill="rgb(215,5,19)" fg:x="172636" fg:w="74"/><text x="100.2072%" y="2559.50"></text></g><g><title>`0x7FF89D97B4CC (50 samples, 0.03%)</title><rect x="99.9710%" y="2533" width="0.0290%" height="15" fill="rgb(226,215,51)" fg:x="172660" fg:w="50"/><text x="100.2210%" y="2543.50"></text></g><g><title>`0x7FF89D98F7F9 (23 samples, 0.01%)</title><rect x="99.9867%" y="2517" width="0.0133%" height="15" fill="rgb(225,56,26)" fg:x="172687" fg:w="23"/><text x="100.2367%" y="2527.50"></text></g><g><title>`0x7FF89D91D480 (23 samples, 0.01%)</title><rect x="99.9867%" y="2501" width="0.0133%" height="15" fill="rgb(222,75,29)" fg:x="172687" fg:w="23"/><text x="100.2367%" y="2511.50"></text></g></svg></svg>